#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DbR3
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="WolfApproveCore.TechconsbizR3")]
	public partial class DBR3DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLAlignment(LAlignment instance);
    partial void UpdateLAlignment(LAlignment instance);
    partial void DeleteLAlignment(LAlignment instance);
    partial void InsertTRNSessionData(TRNSessionData instance);
    partial void UpdateTRNSessionData(TRNSessionData instance);
    partial void DeleteTRNSessionData(TRNSessionData instance);
    partial void InsertLAttachGroup(LAttachGroup instance);
    partial void UpdateLAttachGroup(LAttachGroup instance);
    partial void DeleteLAttachGroup(LAttachGroup instance);
    partial void InsertLAuthorizeType(LAuthorizeType instance);
    partial void UpdateLAuthorizeType(LAuthorizeType instance);
    partial void DeleteLAuthorizeType(LAuthorizeType instance);
    partial void InsertLDisplayApproveType(LDisplayApproveType instance);
    partial void UpdateLDisplayApproveType(LDisplayApproveType instance);
    partial void DeleteLDisplayApproveType(LDisplayApproveType instance);
    partial void InsertLDisplayCompany(LDisplayCompany instance);
    partial void UpdateLDisplayCompany(LDisplayCompany instance);
    partial void DeleteLDisplayCompany(LDisplayCompany instance);
    partial void InsertLDisplayDepartment(LDisplayDepartment instance);
    partial void UpdateLDisplayDepartment(LDisplayDepartment instance);
    partial void DeleteLDisplayDepartment(LDisplayDepartment instance);
    partial void InsertLDisplayDivision(LDisplayDivision instance);
    partial void UpdateLDisplayDivision(LDisplayDivision instance);
    partial void DeleteLDisplayDivision(LDisplayDivision instance);
    partial void InsertLDisplayDOA(LDisplayDOA instance);
    partial void UpdateLDisplayDOA(LDisplayDOA instance);
    partial void DeleteLDisplayDOA(LDisplayDOA instance);
    partial void InsertLDisplayEmployee(LDisplayEmployee instance);
    partial void UpdateLDisplayEmployee(LDisplayEmployee instance);
    partial void DeleteLDisplayEmployee(LDisplayEmployee instance);
    partial void InsertLDisplayMemoButton(LDisplayMemoButton instance);
    partial void UpdateLDisplayMemoButton(LDisplayMemoButton instance);
    partial void DeleteLDisplayMemoButton(LDisplayMemoButton instance);
    partial void InsertLDisplayMemoStatus(LDisplayMemoStatus instance);
    partial void UpdateLDisplayMemoStatus(LDisplayMemoStatus instance);
    partial void DeleteLDisplayMemoStatus(LDisplayMemoStatus instance);
    partial void InsertLDisplayPosition(LDisplayPosition instance);
    partial void UpdateLDisplayPosition(LDisplayPosition instance);
    partial void DeleteLDisplayPosition(LDisplayPosition instance);
    partial void InsertLDisplayPositionLevel(LDisplayPositionLevel instance);
    partial void UpdateLDisplayPositionLevel(LDisplayPositionLevel instance);
    partial void DeleteLDisplayPositionLevel(LDisplayPositionLevel instance);
    partial void InsertLDisplayProject(LDisplayProject instance);
    partial void UpdateLDisplayProject(LDisplayProject instance);
    partial void DeleteLDisplayProject(LDisplayProject instance);
    partial void InsertLDisplayRole(LDisplayRole instance);
    partial void UpdateLDisplayRole(LDisplayRole instance);
    partial void DeleteLDisplayRole(LDisplayRole instance);
    partial void InsertLDisplaySignatureWord(LDisplaySignatureWord instance);
    partial void UpdateLDisplaySignatureWord(LDisplaySignatureWord instance);
    partial void DeleteLDisplaySignatureWord(LDisplaySignatureWord instance);
    partial void InsertLDisplaySpecificType(LDisplaySpecificType instance);
    partial void UpdateLDisplaySpecificType(LDisplaySpecificType instance);
    partial void DeleteLDisplaySpecificType(LDisplaySpecificType instance);
    partial void InsertLFont(LFont instance);
    partial void UpdateLFont(LFont instance);
    partial void DeleteLFont(LFont instance);
    partial void InsertLInterfaceMapType(LInterfaceMapType instance);
    partial void UpdateLInterfaceMapType(LInterfaceMapType instance);
    partial void DeleteLInterfaceMapType(LInterfaceMapType instance);
    partial void InsertLLeaveType(LLeaveType instance);
    partial void UpdateLLeaveType(LLeaveType instance);
    partial void DeleteLLeaveType(LLeaveType instance);
    partial void InsertLLogicType(LLogicType instance);
    partial void UpdateLLogicType(LLogicType instance);
    partial void DeleteLLogicType(LLogicType instance);
    partial void InsertLMemoInformation(LMemoInformation instance);
    partial void UpdateLMemoInformation(LMemoInformation instance);
    partial void DeleteLMemoInformation(LMemoInformation instance);
    partial void InsertLOperator(LOperator instance);
    partial void UpdateLOperator(LOperator instance);
    partial void DeleteLOperator(LOperator instance);
    partial void InsertLPDFPageSize(LPDFPageSize instance);
    partial void UpdateLPDFPageSize(LPDFPageSize instance);
    partial void DeleteLPDFPageSize(LPDFPageSize instance);
    partial void InsertLSystemSiteLanguage(LSystemSiteLanguage instance);
    partial void UpdateLSystemSiteLanguage(LSystemSiteLanguage instance);
    partial void DeleteLSystemSiteLanguage(LSystemSiteLanguage instance);
    partial void InsertLTemplateRefDocControl(LTemplateRefDocControl instance);
    partial void UpdateLTemplateRefDocControl(LTemplateRefDocControl instance);
    partial void DeleteLTemplateRefDocControl(LTemplateRefDocControl instance);
    partial void InsertMSTAccount(MSTAccount instance);
    partial void UpdateMSTAccount(MSTAccount instance);
    partial void DeleteMSTAccount(MSTAccount instance);
    partial void InsertMSTAnnualLeave(MSTAnnualLeave instance);
    partial void UpdateMSTAnnualLeave(MSTAnnualLeave instance);
    partial void DeleteMSTAnnualLeave(MSTAnnualLeave instance);
    partial void InsertMSTAnnualLeaveRole(MSTAnnualLeaveRole instance);
    partial void UpdateMSTAnnualLeaveRole(MSTAnnualLeaveRole instance);
    partial void DeleteMSTAnnualLeaveRole(MSTAnnualLeaveRole instance);
    partial void InsertMSTApiService(MSTApiService instance);
    partial void UpdateMSTApiService(MSTApiService instance);
    partial void DeleteMSTApiService(MSTApiService instance);
    partial void InsertMSTApproveType(MSTApproveType instance);
    partial void UpdateMSTApproveType(MSTApproveType instance);
    partial void DeleteMSTApproveType(MSTApproveType instance);
    partial void InsertMSTAuthorizedMenu(MSTAuthorizedMenu instance);
    partial void UpdateMSTAuthorizedMenu(MSTAuthorizedMenu instance);
    partial void DeleteMSTAuthorizedMenu(MSTAuthorizedMenu instance);
    partial void InsertMSTAuthorizedMenuRole(MSTAuthorizedMenuRole instance);
    partial void UpdateMSTAuthorizedMenuRole(MSTAuthorizedMenuRole instance);
    partial void DeleteMSTAuthorizedMenuRole(MSTAuthorizedMenuRole instance);
    partial void InsertMSTAuthorizeFormControlView(MSTAuthorizeFormControlView instance);
    partial void UpdateMSTAuthorizeFormControlView(MSTAuthorizeFormControlView instance);
    partial void DeleteMSTAuthorizeFormControlView(MSTAuthorizeFormControlView instance);
    partial void InsertMSTAuthorizeTemplate(MSTAuthorizeTemplate instance);
    partial void UpdateMSTAuthorizeTemplate(MSTAuthorizeTemplate instance);
    partial void DeleteMSTAuthorizeTemplate(MSTAuthorizeTemplate instance);
    partial void InsertMSTAutoNumberFormat(MSTAutoNumberFormat instance);
    partial void UpdateMSTAutoNumberFormat(MSTAutoNumberFormat instance);
    partial void DeleteMSTAutoNumberFormat(MSTAutoNumberFormat instance);
    partial void InsertMSTButtonActionService(MSTButtonActionService instance);
    partial void UpdateMSTButtonActionService(MSTButtonActionService instance);
    partial void DeleteMSTButtonActionService(MSTButtonActionService instance);
    partial void InsertMSTButtonQuery(MSTButtonQuery instance);
    partial void UpdateMSTButtonQuery(MSTButtonQuery instance);
    partial void DeleteMSTButtonQuery(MSTButtonQuery instance);
    partial void InsertMSTCompany(MSTCompany instance);
    partial void UpdateMSTCompany(MSTCompany instance);
    partial void DeleteMSTCompany(MSTCompany instance);
    partial void InsertMSTConfiguration(MSTConfiguration instance);
    partial void UpdateMSTConfiguration(MSTConfiguration instance);
    partial void DeleteMSTConfiguration(MSTConfiguration instance);
    partial void InsertMSTControl(MSTControl instance);
    partial void UpdateMSTControl(MSTControl instance);
    partial void DeleteMSTControl(MSTControl instance);
    partial void InsertMSTControlItem(MSTControlItem instance);
    partial void UpdateMSTControlItem(MSTControlItem instance);
    partial void DeleteMSTControlItem(MSTControlItem instance);
    partial void InsertMSTDepartment(MSTDepartment instance);
    partial void UpdateMSTDepartment(MSTDepartment instance);
    partial void DeleteMSTDepartment(MSTDepartment instance);
    partial void InsertMSTDivision(MSTDivision instance);
    partial void UpdateMSTDivision(MSTDivision instance);
    partial void DeleteMSTDivision(MSTDivision instance);
    partial void InsertMSTDOA(MSTDOA instance);
    partial void UpdateMSTDOA(MSTDOA instance);
    partial void DeleteMSTDOA(MSTDOA instance);
    partial void InsertMSTDOAItem(MSTDOAItem instance);
    partial void UpdateMSTDOAItem(MSTDOAItem instance);
    partial void DeleteMSTDOAItem(MSTDOAItem instance);
    partial void InsertMSTEmailTemplate(MSTEmailTemplate instance);
    partial void UpdateMSTEmailTemplate(MSTEmailTemplate instance);
    partial void DeleteMSTEmailTemplate(MSTEmailTemplate instance);
    partial void InsertMSTEmployee(MSTEmployee instance);
    partial void UpdateMSTEmployee(MSTEmployee instance);
    partial void DeleteMSTEmployee(MSTEmployee instance);
    partial void InsertMSTEmployeeDepartment(MSTEmployeeDepartment instance);
    partial void UpdateMSTEmployeeDepartment(MSTEmployeeDepartment instance);
    partial void DeleteMSTEmployeeDepartment(MSTEmployeeDepartment instance);
    partial void InsertMSTEmployeePosition(MSTEmployeePosition instance);
    partial void UpdateMSTEmployeePosition(MSTEmployeePosition instance);
    partial void DeleteMSTEmployeePosition(MSTEmployeePosition instance);
    partial void InsertMSTIAPI(MSTIAPI instance);
    partial void UpdateMSTIAPI(MSTIAPI instance);
    partial void DeleteMSTIAPI(MSTIAPI instance);
    partial void InsertMSTIAPIHeadConfig(MSTIAPIHeadConfig instance);
    partial void UpdateMSTIAPIHeadConfig(MSTIAPIHeadConfig instance);
    partial void DeleteMSTIAPIHeadConfig(MSTIAPIHeadConfig instance);
    partial void InsertMSTIConditionChangeField(MSTIConditionChangeField instance);
    partial void UpdateMSTIConditionChangeField(MSTIConditionChangeField instance);
    partial void DeleteMSTIConditionChangeField(MSTIConditionChangeField instance);
    partial void InsertMSTIConditionFormatDate(MSTIConditionFormatDate instance);
    partial void UpdateMSTIConditionFormatDate(MSTIConditionFormatDate instance);
    partial void DeleteMSTIConditionFormatDate(MSTIConditionFormatDate instance);
    partial void InsertMSTIConditionFormatReplace(MSTIConditionFormatReplace instance);
    partial void UpdateMSTIConditionFormatReplace(MSTIConditionFormatReplace instance);
    partial void DeleteMSTIConditionFormatReplace(MSTIConditionFormatReplace instance);
    partial void InsertMSTIEvent(MSTIEvent instance);
    partial void UpdateMSTIEvent(MSTIEvent instance);
    partial void DeleteMSTIEvent(MSTIEvent instance);
    partial void InsertMSTILogicMapField(MSTILogicMapField instance);
    partial void UpdateMSTILogicMapField(MSTILogicMapField instance);
    partial void DeleteMSTILogicMapField(MSTILogicMapField instance);
    partial void InsertMSTIMapItem(MSTIMapItem instance);
    partial void UpdateMSTIMapItem(MSTIMapItem instance);
    partial void DeleteMSTIMapItem(MSTIMapItem instance);
    partial void InsertMSTIReturnMessage(MSTIReturnMessage instance);
    partial void UpdateMSTIReturnMessage(MSTIReturnMessage instance);
    partial void DeleteMSTIReturnMessage(MSTIReturnMessage instance);
    partial void InsertMSTLineActionControl(MSTLineActionControl instance);
    partial void UpdateMSTLineActionControl(MSTLineActionControl instance);
    partial void DeleteMSTLineActionControl(MSTLineActionControl instance);
    partial void InsertMSTLineActionControlItem(MSTLineActionControlItem instance);
    partial void UpdateMSTLineActionControlItem(MSTLineActionControlItem instance);
    partial void DeleteMSTLineActionControlItem(MSTLineActionControlItem instance);
    partial void InsertMSTLogicActionControl(MSTLogicActionControl instance);
    partial void UpdateMSTLogicActionControl(MSTLogicActionControl instance);
    partial void DeleteMSTLogicActionControl(MSTLogicActionControl instance);
    partial void InsertMSTLogicActionControlRole(MSTLogicActionControlRole instance);
    partial void UpdateMSTLogicActionControlRole(MSTLogicActionControlRole instance);
    partial void DeleteMSTLogicActionControlRole(MSTLogicActionControlRole instance);
    partial void InsertMSTLogicActionServiceVisible(MSTLogicActionServiceVisible instance);
    partial void UpdateMSTLogicActionServiceVisible(MSTLogicActionServiceVisible instance);
    partial void DeleteMSTLogicActionServiceVisible(MSTLogicActionServiceVisible instance);
    partial void InsertMSTLogicButtonActionService(MSTLogicButtonActionService instance);
    partial void UpdateMSTLogicButtonActionService(MSTLogicButtonActionService instance);
    partial void DeleteMSTLogicButtonActionService(MSTLogicButtonActionService instance);
    partial void InsertMSTLogicButtonMemoStatus(MSTLogicButtonMemoStatus instance);
    partial void UpdateMSTLogicButtonMemoStatus(MSTLogicButtonMemoStatus instance);
    partial void DeleteMSTLogicButtonMemoStatus(MSTLogicButtonMemoStatus instance);
    partial void InsertMSTLogicConditionGroup(MSTLogicConditionGroup instance);
    partial void UpdateMSTLogicConditionGroup(MSTLogicConditionGroup instance);
    partial void DeleteMSTLogicConditionGroup(MSTLogicConditionGroup instance);
    partial void InsertMSTLogicConditionItem(MSTLogicConditionItem instance);
    partial void UpdateMSTLogicConditionItem(MSTLogicConditionItem instance);
    partial void DeleteMSTLogicConditionItem(MSTLogicConditionItem instance);
    partial void InsertMSTLogicOrderBy(MSTLogicOrderBy instance);
    partial void UpdateMSTLogicOrderBy(MSTLogicOrderBy instance);
    partial void DeleteMSTLogicOrderBy(MSTLogicOrderBy instance);
    partial void InsertMSTLogicRelatedField(MSTLogicRelatedField instance);
    partial void UpdateMSTLogicRelatedField(MSTLogicRelatedField instance);
    partial void DeleteMSTLogicRelatedField(MSTLogicRelatedField instance);
    partial void InsertMSTLogicRoleAction(MSTLogicRoleAction instance);
    partial void UpdateMSTLogicRoleAction(MSTLogicRoleAction instance);
    partial void DeleteMSTLogicRoleAction(MSTLogicRoleAction instance);
    partial void InsertMSTMasterData(MSTMasterData instance);
    partial void UpdateMSTMasterData(MSTMasterData instance);
    partial void DeleteMSTMasterData(MSTMasterData instance);
    partial void InsertMSTMemoButton(MSTMemoButton instance);
    partial void UpdateMSTMemoButton(MSTMemoButton instance);
    partial void DeleteMSTMemoButton(MSTMemoButton instance);
    partial void InsertMSTMemoStatus(MSTMemoStatus instance);
    partial void UpdateMSTMemoStatus(MSTMemoStatus instance);
    partial void DeleteMSTMemoStatus(MSTMemoStatus instance);
    partial void InsertMSTMimeType(MSTMimeType instance);
    partial void UpdateMSTMimeType(MSTMimeType instance);
    partial void DeleteMSTMimeType(MSTMimeType instance);
    partial void InsertMSTPDFDesignConfig(MSTPDFDesignConfig instance);
    partial void UpdateMSTPDFDesignConfig(MSTPDFDesignConfig instance);
    partial void DeleteMSTPDFDesignConfig(MSTPDFDesignConfig instance);
    partial void InsertMSTPDFDesignItem(MSTPDFDesignItem instance);
    partial void UpdateMSTPDFDesignItem(MSTPDFDesignItem instance);
    partial void DeleteMSTPDFDesignItem(MSTPDFDesignItem instance);
    partial void InsertMSTPDFDesignSection(MSTPDFDesignSection instance);
    partial void UpdateMSTPDFDesignSection(MSTPDFDesignSection instance);
    partial void DeleteMSTPDFDesignSection(MSTPDFDesignSection instance);
    partial void InsertMSTPDFDesignSystemConfig(MSTPDFDesignSystemConfig instance);
    partial void UpdateMSTPDFDesignSystemConfig(MSTPDFDesignSystemConfig instance);
    partial void DeleteMSTPDFDesignSystemConfig(MSTPDFDesignSystemConfig instance);
    partial void InsertMSTPDFTemplate(MSTPDFTemplate instance);
    partial void UpdateMSTPDFTemplate(MSTPDFTemplate instance);
    partial void DeleteMSTPDFTemplate(MSTPDFTemplate instance);
    partial void InsertMSTPosition(MSTPosition instance);
    partial void UpdateMSTPosition(MSTPosition instance);
    partial void DeleteMSTPosition(MSTPosition instance);
    partial void InsertMSTPositionLevel(MSTPositionLevel instance);
    partial void UpdateMSTPositionLevel(MSTPositionLevel instance);
    partial void DeleteMSTPositionLevel(MSTPositionLevel instance);
    partial void InsertMSTProject(MSTProject instance);
    partial void UpdateMSTProject(MSTProject instance);
    partial void DeleteMSTProject(MSTProject instance);
    partial void InsertMSTReportTemplate(MSTReportTemplate instance);
    partial void UpdateMSTReportTemplate(MSTReportTemplate instance);
    partial void DeleteMSTReportTemplate(MSTReportTemplate instance);
    partial void InsertMSTReportTemplateFieldCollection(MSTReportTemplateFieldCollection instance);
    partial void UpdateMSTReportTemplateFieldCollection(MSTReportTemplateFieldCollection instance);
    partial void DeleteMSTReportTemplateFieldCollection(MSTReportTemplateFieldCollection instance);
    partial void InsertMSTReportTemplatePermission(MSTReportTemplatePermission instance);
    partial void UpdateMSTReportTemplatePermission(MSTReportTemplatePermission instance);
    partial void DeleteMSTReportTemplatePermission(MSTReportTemplatePermission instance);
    partial void InsertMSTReportTemplateSelectedForm(MSTReportTemplateSelectedForm instance);
    partial void UpdateMSTReportTemplateSelectedForm(MSTReportTemplateSelectedForm instance);
    partial void DeleteMSTReportTemplateSelectedForm(MSTReportTemplateSelectedForm instance);
    partial void InsertMSTRevisionCondition(MSTRevisionCondition instance);
    partial void UpdateMSTRevisionCondition(MSTRevisionCondition instance);
    partial void DeleteMSTRevisionCondition(MSTRevisionCondition instance);
    partial void InsertMSTRole(MSTRole instance);
    partial void UpdateMSTRole(MSTRole instance);
    partial void DeleteMSTRole(MSTRole instance);
    partial void InsertMSTSignatureWord(MSTSignatureWord instance);
    partial void UpdateMSTSignatureWord(MSTSignatureWord instance);
    partial void DeleteMSTSignatureWord(MSTSignatureWord instance);
    partial void InsertMSTSpecificType(MSTSpecificType instance);
    partial void UpdateMSTSpecificType(MSTSpecificType instance);
    partial void DeleteMSTSpecificType(MSTSpecificType instance);
    partial void InsertMSTTableColumn(MSTTableColumn instance);
    partial void UpdateMSTTableColumn(MSTTableColumn instance);
    partial void DeleteMSTTableColumn(MSTTableColumn instance);
    partial void InsertMSTTemConditionLogic(MSTTemConditionLogic instance);
    partial void UpdateMSTTemConditionLogic(MSTTemConditionLogic instance);
    partial void DeleteMSTTemConditionLogic(MSTTemConditionLogic instance);
    partial void InsertMSTTemConditionLogicItem(MSTTemConditionLogicItem instance);
    partial void UpdateMSTTemConditionLogicItem(MSTTemConditionLogicItem instance);
    partial void DeleteMSTTemConditionLogicItem(MSTTemConditionLogicItem instance);
    partial void InsertMSTTemLineApprove(MSTTemLineApprove instance);
    partial void UpdateMSTTemLineApprove(MSTTemLineApprove instance);
    partial void DeleteMSTTemLineApprove(MSTTemLineApprove instance);
    partial void InsertMSTTemplate(MSTTemplate instance);
    partial void UpdateMSTTemplate(MSTTemplate instance);
    partial void DeleteMSTTemplate(MSTTemplate instance);
    partial void InsertMSTTemplateControlVersion(MSTTemplateControlVersion instance);
    partial void UpdateMSTTemplateControlVersion(MSTTemplateControlVersion instance);
    partial void DeleteMSTTemplateControlVersion(MSTTemplateControlVersion instance);
    partial void InsertMSTTemplateEmail(MSTTemplateEmail instance);
    partial void UpdateMSTTemplateEmail(MSTTemplateEmail instance);
    partial void DeleteMSTTemplateEmail(MSTTemplateEmail instance);
    partial void InsertMSTTemplateLogic(MSTTemplateLogic instance);
    partial void UpdateMSTTemplateLogic(MSTTemplateLogic instance);
    partial void DeleteMSTTemplateLogic(MSTTemplateLogic instance);
    partial void InsertMSTTemplateRefConfig(MSTTemplateRefConfig instance);
    partial void UpdateMSTTemplateRefConfig(MSTTemplateRefConfig instance);
    partial void DeleteMSTTemplateRefConfig(MSTTemplateRefConfig instance);
    partial void InsertMSTTemplateRefControlConfig(MSTTemplateRefControlConfig instance);
    partial void UpdateMSTTemplateRefControlConfig(MSTTemplateRefControlConfig instance);
    partial void DeleteMSTTemplateRefControlConfig(MSTTemplateRefControlConfig instance);
    partial void InsertMSTTemplateRefDoc(MSTTemplateRefDoc instance);
    partial void UpdateMSTTemplateRefDoc(MSTTemplateRefDoc instance);
    partial void DeleteMSTTemplateRefDoc(MSTTemplateRefDoc instance);
    partial void InsertMSTTemplateRefDocSelectedControl(MSTTemplateRefDocSelectedControl instance);
    partial void UpdateMSTTemplateRefDocSelectedControl(MSTTemplateRefDocSelectedControl instance);
    partial void DeleteMSTTemplateRefDocSelectedControl(MSTTemplateRefDocSelectedControl instance);
    partial void InsertMSTTemplateRefDocSelectedTableControl(MSTTemplateRefDocSelectedTableControl instance);
    partial void UpdateMSTTemplateRefDocSelectedTableControl(MSTTemplateRefDocSelectedTableControl instance);
    partial void DeleteMSTTemplateRefDocSelectedTableControl(MSTTemplateRefDocSelectedTableControl instance);
    partial void InsertMSTTemSpecificApprover(MSTTemSpecificApprover instance);
    partial void UpdateMSTTemSpecificApprover(MSTTemSpecificApprover instance);
    partial void DeleteMSTTemSpecificApprover(MSTTemSpecificApprover instance);
    partial void InsertMSTUserPermission(MSTUserPermission instance);
    partial void UpdateMSTUserPermission(MSTUserPermission instance);
    partial void DeleteMSTUserPermission(MSTUserPermission instance);
    partial void InsertTRNActionHistory(TRNActionHistory instance);
    partial void UpdateTRNActionHistory(TRNActionHistory instance);
    partial void DeleteTRNActionHistory(TRNActionHistory instance);
    partial void InsertTRNAttachFile(TRNAttachFile instance);
    partial void UpdateTRNAttachFile(TRNAttachFile instance);
    partial void DeleteTRNAttachFile(TRNAttachFile instance);
    partial void InsertTRNControlRunning(TRNControlRunning instance);
    partial void UpdateTRNControlRunning(TRNControlRunning instance);
    partial void DeleteTRNControlRunning(TRNControlRunning instance);
    partial void InsertTRNDelegate(TRNDelegate instance);
    partial void UpdateTRNDelegate(TRNDelegate instance);
    partial void DeleteTRNDelegate(TRNDelegate instance);
    partial void InsertTRNDelegateDetail(TRNDelegateDetail instance);
    partial void UpdateTRNDelegateDetail(TRNDelegateDetail instance);
    partial void DeleteTRNDelegateDetail(TRNDelegateDetail instance);
    partial void InsertTRNLeaveBalance(TRNLeaveBalance instance);
    partial void UpdateTRNLeaveBalance(TRNLeaveBalance instance);
    partial void DeleteTRNLeaveBalance(TRNLeaveBalance instance);
    partial void InsertTRNLineApprove(TRNLineApprove instance);
    partial void UpdateTRNLineApprove(TRNLineApprove instance);
    partial void DeleteTRNLineApprove(TRNLineApprove instance);
    partial void InsertTRNMemo(TRNMemo instance);
    partial void UpdateTRNMemo(TRNMemo instance);
    partial void DeleteTRNMemo(TRNMemo instance);
    partial void InsertTRNMemoData(TRNMemoData instance);
    partial void UpdateTRNMemoData(TRNMemoData instance);
    partial void DeleteTRNMemoData(TRNMemoData instance);
    partial void InsertTRNMemoDataHistory(TRNMemoDataHistory instance);
    partial void UpdateTRNMemoDataHistory(TRNMemoDataHistory instance);
    partial void DeleteTRNMemoDataHistory(TRNMemoDataHistory instance);
    partial void InsertTRNMemoTableData(TRNMemoTableData instance);
    partial void UpdateTRNMemoTableData(TRNMemoTableData instance);
    partial void DeleteTRNMemoTableData(TRNMemoTableData instance);
    partial void InsertTRNMemoTableDataHistory(TRNMemoTableDataHistory instance);
    partial void UpdateTRNMemoTableDataHistory(TRNMemoTableDataHistory instance);
    partial void DeleteTRNMemoTableDataHistory(TRNMemoTableDataHistory instance);
    partial void InsertTRNReadMemo(TRNReadMemo instance);
    partial void UpdateTRNReadMemo(TRNReadMemo instance);
    partial void DeleteTRNReadMemo(TRNReadMemo instance);
    partial void InsertTRNReferenceDoc(TRNReferenceDoc instance);
    partial void UpdateTRNReferenceDoc(TRNReferenceDoc instance);
    partial void DeleteTRNReferenceDoc(TRNReferenceDoc instance);
    partial void InsertTRNReleasedDocument(TRNReleasedDocument instance);
    partial void UpdateTRNReleasedDocument(TRNReleasedDocument instance);
    partial void DeleteTRNReleasedDocument(TRNReleasedDocument instance);
    partial void InsertTRNSendMail(TRNSendMail instance);
    partial void UpdateTRNSendMail(TRNSendMail instance);
    partial void DeleteTRNSendMail(TRNSendMail instance);
    #endregion
		
		public DBR3DataContext() : 
				base(global::DbR3.Properties.Settings.Default.WolfApproveCore_TechconsbizR3ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBR3DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBR3DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBR3DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBR3DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<LAlignment> LAlignments
		{
			get
			{
				return this.GetTable<LAlignment>();
			}
		}
		
		public System.Data.Linq.Table<TRNSessionData> TRNSessionDatas
		{
			get
			{
				return this.GetTable<TRNSessionData>();
			}
		}
		
		public System.Data.Linq.Table<LAttachGroup> LAttachGroups
		{
			get
			{
				return this.GetTable<LAttachGroup>();
			}
		}
		
		public System.Data.Linq.Table<LAuthorizeAction> LAuthorizeActions
		{
			get
			{
				return this.GetTable<LAuthorizeAction>();
			}
		}
		
		public System.Data.Linq.Table<LAuthorizeType> LAuthorizeTypes
		{
			get
			{
				return this.GetTable<LAuthorizeType>();
			}
		}
		
		public System.Data.Linq.Table<LControlType> LControlTypes
		{
			get
			{
				return this.GetTable<LControlType>();
			}
		}
		
		public System.Data.Linq.Table<LDisplayApproveType> LDisplayApproveTypes
		{
			get
			{
				return this.GetTable<LDisplayApproveType>();
			}
		}
		
		public System.Data.Linq.Table<LDisplayCompany> LDisplayCompanies
		{
			get
			{
				return this.GetTable<LDisplayCompany>();
			}
		}
		
		public System.Data.Linq.Table<LDisplayDepartment> LDisplayDepartments
		{
			get
			{
				return this.GetTable<LDisplayDepartment>();
			}
		}
		
		public System.Data.Linq.Table<LDisplayDivision> LDisplayDivisions
		{
			get
			{
				return this.GetTable<LDisplayDivision>();
			}
		}
		
		public System.Data.Linq.Table<LDisplayDOA> LDisplayDOAs
		{
			get
			{
				return this.GetTable<LDisplayDOA>();
			}
		}
		
		public System.Data.Linq.Table<LDisplayEmployee> LDisplayEmployees
		{
			get
			{
				return this.GetTable<LDisplayEmployee>();
			}
		}
		
		public System.Data.Linq.Table<LDisplayMemoButton> LDisplayMemoButtons
		{
			get
			{
				return this.GetTable<LDisplayMemoButton>();
			}
		}
		
		public System.Data.Linq.Table<LDisplayMemoStatus> LDisplayMemoStatus
		{
			get
			{
				return this.GetTable<LDisplayMemoStatus>();
			}
		}
		
		public System.Data.Linq.Table<LDisplayPosition> LDisplayPositions
		{
			get
			{
				return this.GetTable<LDisplayPosition>();
			}
		}
		
		public System.Data.Linq.Table<LDisplayPositionLevel> LDisplayPositionLevels
		{
			get
			{
				return this.GetTable<LDisplayPositionLevel>();
			}
		}
		
		public System.Data.Linq.Table<LDisplayProject> LDisplayProjects
		{
			get
			{
				return this.GetTable<LDisplayProject>();
			}
		}
		
		public System.Data.Linq.Table<LDisplayRole> LDisplayRoles
		{
			get
			{
				return this.GetTable<LDisplayRole>();
			}
		}
		
		public System.Data.Linq.Table<LDisplaySignatureWord> LDisplaySignatureWords
		{
			get
			{
				return this.GetTable<LDisplaySignatureWord>();
			}
		}
		
		public System.Data.Linq.Table<LDisplaySpecificType> LDisplaySpecificTypes
		{
			get
			{
				return this.GetTable<LDisplaySpecificType>();
			}
		}
		
		public System.Data.Linq.Table<LFont> LFonts
		{
			get
			{
				return this.GetTable<LFont>();
			}
		}
		
		public System.Data.Linq.Table<LInterfaceMapType> LInterfaceMapTypes
		{
			get
			{
				return this.GetTable<LInterfaceMapType>();
			}
		}
		
		public System.Data.Linq.Table<LLeaveType> LLeaveTypes
		{
			get
			{
				return this.GetTable<LLeaveType>();
			}
		}
		
		public System.Data.Linq.Table<LLogicType> LLogicTypes
		{
			get
			{
				return this.GetTable<LLogicType>();
			}
		}
		
		public System.Data.Linq.Table<LMemoInformation> LMemoInformations
		{
			get
			{
				return this.GetTable<LMemoInformation>();
			}
		}
		
		public System.Data.Linq.Table<LMessage> LMessages
		{
			get
			{
				return this.GetTable<LMessage>();
			}
		}
		
		public System.Data.Linq.Table<LOperator> LOperators
		{
			get
			{
				return this.GetTable<LOperator>();
			}
		}
		
		public System.Data.Linq.Table<LPDFPageSize> LPDFPageSizes
		{
			get
			{
				return this.GetTable<LPDFPageSize>();
			}
		}
		
		public System.Data.Linq.Table<LSystemSiteLanguage> LSystemSiteLanguages
		{
			get
			{
				return this.GetTable<LSystemSiteLanguage>();
			}
		}
		
		public System.Data.Linq.Table<LTemplateRefDocControl> LTemplateRefDocControls
		{
			get
			{
				return this.GetTable<LTemplateRefDocControl>();
			}
		}
		
		public System.Data.Linq.Table<MSTAccount> MSTAccounts
		{
			get
			{
				return this.GetTable<MSTAccount>();
			}
		}
		
		public System.Data.Linq.Table<MSTAnnualLeave> MSTAnnualLeaves
		{
			get
			{
				return this.GetTable<MSTAnnualLeave>();
			}
		}
		
		public System.Data.Linq.Table<MSTAnnualLeaveRole> MSTAnnualLeaveRoles
		{
			get
			{
				return this.GetTable<MSTAnnualLeaveRole>();
			}
		}
		
		public System.Data.Linq.Table<MSTApiService> MSTApiServices
		{
			get
			{
				return this.GetTable<MSTApiService>();
			}
		}
		
		public System.Data.Linq.Table<MSTApproveType> MSTApproveTypes
		{
			get
			{
				return this.GetTable<MSTApproveType>();
			}
		}
		
		public System.Data.Linq.Table<MSTAuthorizedMenu> MSTAuthorizedMenus
		{
			get
			{
				return this.GetTable<MSTAuthorizedMenu>();
			}
		}
		
		public System.Data.Linq.Table<MSTAuthorizedMenuRole> MSTAuthorizedMenuRoles
		{
			get
			{
				return this.GetTable<MSTAuthorizedMenuRole>();
			}
		}
		
		public System.Data.Linq.Table<MSTAuthorizeFormControlView> MSTAuthorizeFormControlViews
		{
			get
			{
				return this.GetTable<MSTAuthorizeFormControlView>();
			}
		}
		
		public System.Data.Linq.Table<MSTAuthorizeTemplate> MSTAuthorizeTemplates
		{
			get
			{
				return this.GetTable<MSTAuthorizeTemplate>();
			}
		}
		
		public System.Data.Linq.Table<MSTAutoNumberFormat> MSTAutoNumberFormats
		{
			get
			{
				return this.GetTable<MSTAutoNumberFormat>();
			}
		}
		
		public System.Data.Linq.Table<MSTButtonActionService> MSTButtonActionServices
		{
			get
			{
				return this.GetTable<MSTButtonActionService>();
			}
		}
		
		public System.Data.Linq.Table<MSTButtonQuery> MSTButtonQueries
		{
			get
			{
				return this.GetTable<MSTButtonQuery>();
			}
		}
		
		public System.Data.Linq.Table<MSTCompany> MSTCompanies
		{
			get
			{
				return this.GetTable<MSTCompany>();
			}
		}
		
		public System.Data.Linq.Table<MSTConfiguration> MSTConfigurations
		{
			get
			{
				return this.GetTable<MSTConfiguration>();
			}
		}
		
		public System.Data.Linq.Table<MSTControl> MSTControls
		{
			get
			{
				return this.GetTable<MSTControl>();
			}
		}
		
		public System.Data.Linq.Table<MSTControlItem> MSTControlItems
		{
			get
			{
				return this.GetTable<MSTControlItem>();
			}
		}
		
		public System.Data.Linq.Table<MSTDepartment> MSTDepartments
		{
			get
			{
				return this.GetTable<MSTDepartment>();
			}
		}
		
		public System.Data.Linq.Table<MSTDivision> MSTDivisions
		{
			get
			{
				return this.GetTable<MSTDivision>();
			}
		}
		
		public System.Data.Linq.Table<MSTDOA> MSTDOAs
		{
			get
			{
				return this.GetTable<MSTDOA>();
			}
		}
		
		public System.Data.Linq.Table<MSTDOAItem> MSTDOAItems
		{
			get
			{
				return this.GetTable<MSTDOAItem>();
			}
		}
		
		public System.Data.Linq.Table<MSTEmailTemplate> MSTEmailTemplates
		{
			get
			{
				return this.GetTable<MSTEmailTemplate>();
			}
		}
		
		public System.Data.Linq.Table<MSTEmployee> MSTEmployees
		{
			get
			{
				return this.GetTable<MSTEmployee>();
			}
		}
		
		public System.Data.Linq.Table<MSTEmployeeDepartment> MSTEmployeeDepartments
		{
			get
			{
				return this.GetTable<MSTEmployeeDepartment>();
			}
		}
		
		public System.Data.Linq.Table<MSTEmployeePosition> MSTEmployeePositions
		{
			get
			{
				return this.GetTable<MSTEmployeePosition>();
			}
		}
		
		public System.Data.Linq.Table<MSTIAPI> MSTIAPIs
		{
			get
			{
				return this.GetTable<MSTIAPI>();
			}
		}
		
		public System.Data.Linq.Table<MSTIAPIHeadConfig> MSTIAPIHeadConfigs
		{
			get
			{
				return this.GetTable<MSTIAPIHeadConfig>();
			}
		}
		
		public System.Data.Linq.Table<MSTIConditionChangeField> MSTIConditionChangeFields
		{
			get
			{
				return this.GetTable<MSTIConditionChangeField>();
			}
		}
		
		public System.Data.Linq.Table<MSTIConditionFormatDate> MSTIConditionFormatDates
		{
			get
			{
				return this.GetTable<MSTIConditionFormatDate>();
			}
		}
		
		public System.Data.Linq.Table<MSTIConditionFormatReplace> MSTIConditionFormatReplaces
		{
			get
			{
				return this.GetTable<MSTIConditionFormatReplace>();
			}
		}
		
		public System.Data.Linq.Table<MSTIEvent> MSTIEvents
		{
			get
			{
				return this.GetTable<MSTIEvent>();
			}
		}
		
		public System.Data.Linq.Table<MSTILogicMapField> MSTILogicMapFields
		{
			get
			{
				return this.GetTable<MSTILogicMapField>();
			}
		}
		
		public System.Data.Linq.Table<MSTIMapItem> MSTIMapItems
		{
			get
			{
				return this.GetTable<MSTIMapItem>();
			}
		}
		
		public System.Data.Linq.Table<MSTIReturnMessage> MSTIReturnMessages
		{
			get
			{
				return this.GetTable<MSTIReturnMessage>();
			}
		}
		
		public System.Data.Linq.Table<MSTLineActionControl> MSTLineActionControls
		{
			get
			{
				return this.GetTable<MSTLineActionControl>();
			}
		}
		
		public System.Data.Linq.Table<MSTLineActionControlItem> MSTLineActionControlItems
		{
			get
			{
				return this.GetTable<MSTLineActionControlItem>();
			}
		}
		
		public System.Data.Linq.Table<MSTLogicActionControl> MSTLogicActionControls
		{
			get
			{
				return this.GetTable<MSTLogicActionControl>();
			}
		}
		
		public System.Data.Linq.Table<MSTLogicActionControlRole> MSTLogicActionControlRoles
		{
			get
			{
				return this.GetTable<MSTLogicActionControlRole>();
			}
		}
		
		public System.Data.Linq.Table<MSTLogicActionServiceVisible> MSTLogicActionServiceVisibles
		{
			get
			{
				return this.GetTable<MSTLogicActionServiceVisible>();
			}
		}
		
		public System.Data.Linq.Table<MSTLogicButtonActionService> MSTLogicButtonActionServices
		{
			get
			{
				return this.GetTable<MSTLogicButtonActionService>();
			}
		}
		
		public System.Data.Linq.Table<MSTLogicButtonMemoStatus> MSTLogicButtonMemoStatus
		{
			get
			{
				return this.GetTable<MSTLogicButtonMemoStatus>();
			}
		}
		
		public System.Data.Linq.Table<MSTLogicConditionGroup> MSTLogicConditionGroups
		{
			get
			{
				return this.GetTable<MSTLogicConditionGroup>();
			}
		}
		
		public System.Data.Linq.Table<MSTLogicConditionItem> MSTLogicConditionItems
		{
			get
			{
				return this.GetTable<MSTLogicConditionItem>();
			}
		}
		
		public System.Data.Linq.Table<MSTLogicOrderBy> MSTLogicOrderBies
		{
			get
			{
				return this.GetTable<MSTLogicOrderBy>();
			}
		}
		
		public System.Data.Linq.Table<MSTLogicRelatedField> MSTLogicRelatedFields
		{
			get
			{
				return this.GetTable<MSTLogicRelatedField>();
			}
		}
		
		public System.Data.Linq.Table<MSTLogicRoleAction> MSTLogicRoleActions
		{
			get
			{
				return this.GetTable<MSTLogicRoleAction>();
			}
		}
		
		public System.Data.Linq.Table<MSTMasterData> MSTMasterDatas
		{
			get
			{
				return this.GetTable<MSTMasterData>();
			}
		}
		
		public System.Data.Linq.Table<MSTMemoButton> MSTMemoButtons
		{
			get
			{
				return this.GetTable<MSTMemoButton>();
			}
		}
		
		public System.Data.Linq.Table<MSTMemoStatus> MSTMemoStatus
		{
			get
			{
				return this.GetTable<MSTMemoStatus>();
			}
		}
		
		public System.Data.Linq.Table<MSTMimeType> MSTMimeTypes
		{
			get
			{
				return this.GetTable<MSTMimeType>();
			}
		}
		
		public System.Data.Linq.Table<MSTPDFDesignConfig> MSTPDFDesignConfigs
		{
			get
			{
				return this.GetTable<MSTPDFDesignConfig>();
			}
		}
		
		public System.Data.Linq.Table<MSTPDFDesignItem> MSTPDFDesignItems
		{
			get
			{
				return this.GetTable<MSTPDFDesignItem>();
			}
		}
		
		public System.Data.Linq.Table<MSTPDFDesignSection> MSTPDFDesignSections
		{
			get
			{
				return this.GetTable<MSTPDFDesignSection>();
			}
		}
		
		public System.Data.Linq.Table<MSTPDFDesignSystemConfig> MSTPDFDesignSystemConfigs
		{
			get
			{
				return this.GetTable<MSTPDFDesignSystemConfig>();
			}
		}
		
		public System.Data.Linq.Table<MSTPDFTemplate> MSTPDFTemplates
		{
			get
			{
				return this.GetTable<MSTPDFTemplate>();
			}
		}
		
		public System.Data.Linq.Table<MSTPosition> MSTPositions
		{
			get
			{
				return this.GetTable<MSTPosition>();
			}
		}
		
		public System.Data.Linq.Table<MSTPositionLevel> MSTPositionLevels
		{
			get
			{
				return this.GetTable<MSTPositionLevel>();
			}
		}
		
		public System.Data.Linq.Table<MSTProject> MSTProjects
		{
			get
			{
				return this.GetTable<MSTProject>();
			}
		}
		
		public System.Data.Linq.Table<MSTProvince> MSTProvinces
		{
			get
			{
				return this.GetTable<MSTProvince>();
			}
		}
		
		public System.Data.Linq.Table<MSTReportTemplate> MSTReportTemplates
		{
			get
			{
				return this.GetTable<MSTReportTemplate>();
			}
		}
		
		public System.Data.Linq.Table<MSTReportTemplateFieldCollection> MSTReportTemplateFieldCollections
		{
			get
			{
				return this.GetTable<MSTReportTemplateFieldCollection>();
			}
		}
		
		public System.Data.Linq.Table<MSTReportTemplatePermission> MSTReportTemplatePermissions
		{
			get
			{
				return this.GetTable<MSTReportTemplatePermission>();
			}
		}
		
		public System.Data.Linq.Table<MSTReportTemplateSelectedForm> MSTReportTemplateSelectedForms
		{
			get
			{
				return this.GetTable<MSTReportTemplateSelectedForm>();
			}
		}
		
		public System.Data.Linq.Table<MSTRevisionCondition> MSTRevisionConditions
		{
			get
			{
				return this.GetTable<MSTRevisionCondition>();
			}
		}
		
		public System.Data.Linq.Table<MSTRole> MSTRoles
		{
			get
			{
				return this.GetTable<MSTRole>();
			}
		}
		
		public System.Data.Linq.Table<MSTSignatureWord> MSTSignatureWords
		{
			get
			{
				return this.GetTable<MSTSignatureWord>();
			}
		}
		
		public System.Data.Linq.Table<MSTSpecificType> MSTSpecificTypes
		{
			get
			{
				return this.GetTable<MSTSpecificType>();
			}
		}
		
		public System.Data.Linq.Table<MSTTableColumn> MSTTableColumns
		{
			get
			{
				return this.GetTable<MSTTableColumn>();
			}
		}
		
		public System.Data.Linq.Table<MSTTemConditionLogic> MSTTemConditionLogics
		{
			get
			{
				return this.GetTable<MSTTemConditionLogic>();
			}
		}
		
		public System.Data.Linq.Table<MSTTemConditionLogicItem> MSTTemConditionLogicItems
		{
			get
			{
				return this.GetTable<MSTTemConditionLogicItem>();
			}
		}
		
		public System.Data.Linq.Table<MSTTemLineApprove> MSTTemLineApproves
		{
			get
			{
				return this.GetTable<MSTTemLineApprove>();
			}
		}
		
		public System.Data.Linq.Table<MSTTemplate> MSTTemplates
		{
			get
			{
				return this.GetTable<MSTTemplate>();
			}
		}
		
		public System.Data.Linq.Table<MSTTemplateControlVersion> MSTTemplateControlVersions
		{
			get
			{
				return this.GetTable<MSTTemplateControlVersion>();
			}
		}
		
		public System.Data.Linq.Table<MSTTemplateEmail> MSTTemplateEmails
		{
			get
			{
				return this.GetTable<MSTTemplateEmail>();
			}
		}
		
		public System.Data.Linq.Table<MSTTemplateLogic> MSTTemplateLogics
		{
			get
			{
				return this.GetTable<MSTTemplateLogic>();
			}
		}
		
		public System.Data.Linq.Table<MSTTemplateRefConfig> MSTTemplateRefConfigs
		{
			get
			{
				return this.GetTable<MSTTemplateRefConfig>();
			}
		}
		
		public System.Data.Linq.Table<MSTTemplateRefControlConfig> MSTTemplateRefControlConfigs
		{
			get
			{
				return this.GetTable<MSTTemplateRefControlConfig>();
			}
		}
		
		public System.Data.Linq.Table<MSTTemplateRefDoc> MSTTemplateRefDocs
		{
			get
			{
				return this.GetTable<MSTTemplateRefDoc>();
			}
		}
		
		public System.Data.Linq.Table<MSTTemplateRefDocSelectedControl> MSTTemplateRefDocSelectedControls
		{
			get
			{
				return this.GetTable<MSTTemplateRefDocSelectedControl>();
			}
		}
		
		public System.Data.Linq.Table<MSTTemplateRefDocSelectedTableControl> MSTTemplateRefDocSelectedTableControls
		{
			get
			{
				return this.GetTable<MSTTemplateRefDocSelectedTableControl>();
			}
		}
		
		public System.Data.Linq.Table<MSTTemSpecificApprover> MSTTemSpecificApprovers
		{
			get
			{
				return this.GetTable<MSTTemSpecificApprover>();
			}
		}
		
		public System.Data.Linq.Table<MSTUserPermission> MSTUserPermissions
		{
			get
			{
				return this.GetTable<MSTUserPermission>();
			}
		}
		
		public System.Data.Linq.Table<TRNActionHistory> TRNActionHistories
		{
			get
			{
				return this.GetTable<TRNActionHistory>();
			}
		}
		
		public System.Data.Linq.Table<TRNAttachFile> TRNAttachFiles
		{
			get
			{
				return this.GetTable<TRNAttachFile>();
			}
		}
		
		public System.Data.Linq.Table<TRNControlRunning> TRNControlRunnings
		{
			get
			{
				return this.GetTable<TRNControlRunning>();
			}
		}
		
		public System.Data.Linq.Table<TRNDelegate> TRNDelegates
		{
			get
			{
				return this.GetTable<TRNDelegate>();
			}
		}
		
		public System.Data.Linq.Table<TRNDelegateDetail> TRNDelegateDetails
		{
			get
			{
				return this.GetTable<TRNDelegateDetail>();
			}
		}
		
		public System.Data.Linq.Table<TRNLeaveBalance> TRNLeaveBalances
		{
			get
			{
				return this.GetTable<TRNLeaveBalance>();
			}
		}
		
		public System.Data.Linq.Table<TRNLineApprove> TRNLineApproves
		{
			get
			{
				return this.GetTable<TRNLineApprove>();
			}
		}
		
		public System.Data.Linq.Table<TRNMemo> TRNMemos
		{
			get
			{
				return this.GetTable<TRNMemo>();
			}
		}
		
		public System.Data.Linq.Table<TRNMemoData> TRNMemoDatas
		{
			get
			{
				return this.GetTable<TRNMemoData>();
			}
		}
		
		public System.Data.Linq.Table<TRNMemoDataHistory> TRNMemoDataHistories
		{
			get
			{
				return this.GetTable<TRNMemoDataHistory>();
			}
		}
		
		public System.Data.Linq.Table<TRNMemoTableData> TRNMemoTableDatas
		{
			get
			{
				return this.GetTable<TRNMemoTableData>();
			}
		}
		
		public System.Data.Linq.Table<TRNMemoTableDataHistory> TRNMemoTableDataHistories
		{
			get
			{
				return this.GetTable<TRNMemoTableDataHistory>();
			}
		}
		
		public System.Data.Linq.Table<TRNReadMemo> TRNReadMemos
		{
			get
			{
				return this.GetTable<TRNReadMemo>();
			}
		}
		
		public System.Data.Linq.Table<TRNReferenceDoc> TRNReferenceDocs
		{
			get
			{
				return this.GetTable<TRNReferenceDoc>();
			}
		}
		
		public System.Data.Linq.Table<TRNReleasedDocument> TRNReleasedDocuments
		{
			get
			{
				return this.GetTable<TRNReleasedDocument>();
			}
		}
		
		public System.Data.Linq.Table<TRNSendMail> TRNSendMails
		{
			get
			{
				return this.GetTable<TRNSendMail>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LAlignment")]
	public partial class LAlignment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AlignmentId;
		
		private string _Code;
		
		private string _Description;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAlignmentIdChanging(int value);
    partial void OnAlignmentIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public LAlignment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlignmentId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AlignmentId
		{
			get
			{
				return this._AlignmentId;
			}
			set
			{
				if ((this._AlignmentId != value))
				{
					this.OnAlignmentIdChanging(value);
					this.SendPropertyChanging();
					this._AlignmentId = value;
					this.SendPropertyChanged("AlignmentId");
					this.OnAlignmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRNSessionData")]
	public partial class TRNSessionData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private System.Data.Linq.Binary _Value;
		
		private System.DateTimeOffset _ExpiresAtTime;
		
		private System.Nullable<long> _SlidingExpirationInSeconds;
		
		private System.Nullable<System.DateTimeOffset> _AbsoluteExpiration;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnValueChanging(System.Data.Linq.Binary value);
    partial void OnValueChanged();
    partial void OnExpiresAtTimeChanging(System.DateTimeOffset value);
    partial void OnExpiresAtTimeChanged();
    partial void OnSlidingExpirationInSecondsChanging(System.Nullable<long> value);
    partial void OnSlidingExpirationInSecondsChanged();
    partial void OnAbsoluteExpirationChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnAbsoluteExpirationChanged();
    #endregion
		
		public TRNSessionData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(449) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiresAtTime", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset ExpiresAtTime
		{
			get
			{
				return this._ExpiresAtTime;
			}
			set
			{
				if ((this._ExpiresAtTime != value))
				{
					this.OnExpiresAtTimeChanging(value);
					this.SendPropertyChanging();
					this._ExpiresAtTime = value;
					this.SendPropertyChanged("ExpiresAtTime");
					this.OnExpiresAtTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlidingExpirationInSeconds", DbType="BigInt")]
		public System.Nullable<long> SlidingExpirationInSeconds
		{
			get
			{
				return this._SlidingExpirationInSeconds;
			}
			set
			{
				if ((this._SlidingExpirationInSeconds != value))
				{
					this.OnSlidingExpirationInSecondsChanging(value);
					this.SendPropertyChanging();
					this._SlidingExpirationInSeconds = value;
					this.SendPropertyChanged("SlidingExpirationInSeconds");
					this.OnSlidingExpirationInSecondsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbsoluteExpiration", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> AbsoluteExpiration
		{
			get
			{
				return this._AbsoluteExpiration;
			}
			set
			{
				if ((this._AbsoluteExpiration != value))
				{
					this.OnAbsoluteExpirationChanging(value);
					this.SendPropertyChanging();
					this._AbsoluteExpiration = value;
					this.SendPropertyChanged("AbsoluteExpiration");
					this.OnAbsoluteExpirationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LAttachGroup")]
	public partial class LAttachGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AttachGroupId;
		
		private string _BasePath;
		
		private string _Description;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttachGroupIdChanging(int value);
    partial void OnAttachGroupIdChanged();
    partial void OnBasePathChanging(string value);
    partial void OnBasePathChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public LAttachGroup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachGroupId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AttachGroupId
		{
			get
			{
				return this._AttachGroupId;
			}
			set
			{
				if ((this._AttachGroupId != value))
				{
					this.OnAttachGroupIdChanging(value);
					this.SendPropertyChanging();
					this._AttachGroupId = value;
					this.SendPropertyChanged("AttachGroupId");
					this.OnAttachGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasePath", DbType="NVarChar(500)")]
		public string BasePath
		{
			get
			{
				return this._BasePath;
			}
			set
			{
				if ((this._BasePath != value))
				{
					this.OnBasePathChanging(value);
					this.SendPropertyChanging();
					this._BasePath = value;
					this.SendPropertyChanged("BasePath");
					this.OnBasePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LAuthorizeAction")]
	public partial class LAuthorizeAction
	{
		
		private int _AuthorizeActionId;
		
		private string _AuthorizeActionName;
		
		public LAuthorizeAction()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorizeActionId", DbType="Int NOT NULL")]
		public int AuthorizeActionId
		{
			get
			{
				return this._AuthorizeActionId;
			}
			set
			{
				if ((this._AuthorizeActionId != value))
				{
					this._AuthorizeActionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorizeActionName", DbType="NVarChar(50)")]
		public string AuthorizeActionName
		{
			get
			{
				return this._AuthorizeActionName;
			}
			set
			{
				if ((this._AuthorizeActionName != value))
				{
					this._AuthorizeActionName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LAuthorizeType")]
	public partial class LAuthorizeType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AuthTypeId;
		
		private string _AuthStatusName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAuthTypeIdChanging(int value);
    partial void OnAuthTypeIdChanged();
    partial void OnAuthStatusNameChanging(string value);
    partial void OnAuthStatusNameChanged();
    #endregion
		
		public LAuthorizeType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AuthTypeId
		{
			get
			{
				return this._AuthTypeId;
			}
			set
			{
				if ((this._AuthTypeId != value))
				{
					this.OnAuthTypeIdChanging(value);
					this.SendPropertyChanging();
					this._AuthTypeId = value;
					this.SendPropertyChanged("AuthTypeId");
					this.OnAuthTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthStatusName", DbType="NVarChar(50)")]
		public string AuthStatusName
		{
			get
			{
				return this._AuthStatusName;
			}
			set
			{
				if ((this._AuthStatusName != value))
				{
					this.OnAuthStatusNameChanging(value);
					this.SendPropertyChanging();
					this._AuthStatusName = value;
					this.SendPropertyChanged("AuthStatusName");
					this.OnAuthStatusNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LControlType")]
	public partial class LControlType
	{
		
		private int _ControlTypeId;
		
		private string _ControlTypeCode;
		
		private string _ControlTypeName;
		
		public LControlType()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlTypeId", DbType="Int NOT NULL")]
		public int ControlTypeId
		{
			get
			{
				return this._ControlTypeId;
			}
			set
			{
				if ((this._ControlTypeId != value))
				{
					this._ControlTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlTypeCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string ControlTypeCode
		{
			get
			{
				return this._ControlTypeCode;
			}
			set
			{
				if ((this._ControlTypeCode != value))
				{
					this._ControlTypeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlTypeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ControlTypeName
		{
			get
			{
				return this._ControlTypeName;
			}
			set
			{
				if ((this._ControlTypeName != value))
				{
					this._ControlTypeName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LDisplayApproveType")]
	public partial class LDisplayApproveType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DApproveId;
		
		private System.Nullable<int> _ApproveTypeId;
		
		private string _LanguageCode;
		
		private string _ApproveWord;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDApproveIdChanging(int value);
    partial void OnDApproveIdChanged();
    partial void OnApproveTypeIdChanging(System.Nullable<int> value);
    partial void OnApproveTypeIdChanged();
    partial void OnLanguageCodeChanging(string value);
    partial void OnLanguageCodeChanged();
    partial void OnApproveWordChanging(string value);
    partial void OnApproveWordChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public LDisplayApproveType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DApproveId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DApproveId
		{
			get
			{
				return this._DApproveId;
			}
			set
			{
				if ((this._DApproveId != value))
				{
					this.OnDApproveIdChanging(value);
					this.SendPropertyChanging();
					this._DApproveId = value;
					this.SendPropertyChanged("DApproveId");
					this.OnDApproveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveTypeId", DbType="Int")]
		public System.Nullable<int> ApproveTypeId
		{
			get
			{
				return this._ApproveTypeId;
			}
			set
			{
				if ((this._ApproveTypeId != value))
				{
					this.OnApproveTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ApproveTypeId = value;
					this.SendPropertyChanged("ApproveTypeId");
					this.OnApproveTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string LanguageCode
		{
			get
			{
				return this._LanguageCode;
			}
			set
			{
				if ((this._LanguageCode != value))
				{
					this.OnLanguageCodeChanging(value);
					this.SendPropertyChanging();
					this._LanguageCode = value;
					this.SendPropertyChanged("LanguageCode");
					this.OnLanguageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveWord", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string ApproveWord
		{
			get
			{
				return this._ApproveWord;
			}
			set
			{
				if ((this._ApproveWord != value))
				{
					this.OnApproveWordChanging(value);
					this.SendPropertyChanging();
					this._ApproveWord = value;
					this.SendPropertyChanged("ApproveWord");
					this.OnApproveWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LDisplayCompany")]
	public partial class LDisplayCompany : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DComId;
		
		private System.Nullable<int> _DivisionId;
		
		private int _CompanyId;
		
		private string _LanguageCode;
		
		private string _Name;
		
		private string _Address;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDComIdChanging(int value);
    partial void OnDComIdChanged();
    partial void OnDivisionIdChanging(System.Nullable<int> value);
    partial void OnDivisionIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnLanguageCodeChanging(string value);
    partial void OnLanguageCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public LDisplayCompany()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DComId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DComId
		{
			get
			{
				return this._DComId;
			}
			set
			{
				if ((this._DComId != value))
				{
					this.OnDComIdChanging(value);
					this.SendPropertyChanging();
					this._DComId = value;
					this.SendPropertyChanged("DComId");
					this.OnDComIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionId", DbType="Int")]
		public System.Nullable<int> DivisionId
		{
			get
			{
				return this._DivisionId;
			}
			set
			{
				if ((this._DivisionId != value))
				{
					this.OnDivisionIdChanging(value);
					this.SendPropertyChanging();
					this._DivisionId = value;
					this.SendPropertyChanged("DivisionId");
					this.OnDivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string LanguageCode
		{
			get
			{
				return this._LanguageCode;
			}
			set
			{
				if ((this._LanguageCode != value))
				{
					this.OnLanguageCodeChanging(value);
					this.SendPropertyChanging();
					this._LanguageCode = value;
					this.SendPropertyChanged("LanguageCode");
					this.OnLanguageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LDisplayDepartment")]
	public partial class LDisplayDepartment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DDId;
		
		private int _DepartmentId;
		
		private string _LanguageCode;
		
		private string _Name;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDDIdChanging(int value);
    partial void OnDDIdChanged();
    partial void OnDepartmentIdChanging(int value);
    partial void OnDepartmentIdChanged();
    partial void OnLanguageCodeChanging(string value);
    partial void OnLanguageCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public LDisplayDepartment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DDId
		{
			get
			{
				return this._DDId;
			}
			set
			{
				if ((this._DDId != value))
				{
					this.OnDDIdChanging(value);
					this.SendPropertyChanging();
					this._DDId = value;
					this.SendPropertyChanged("DDId");
					this.OnDDIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="Int NOT NULL")]
		public int DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string LanguageCode
		{
			get
			{
				return this._LanguageCode;
			}
			set
			{
				if ((this._LanguageCode != value))
				{
					this.OnLanguageCodeChanging(value);
					this.SendPropertyChanging();
					this._LanguageCode = value;
					this.SendPropertyChanged("LanguageCode");
					this.OnLanguageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LDisplayDivision")]
	public partial class LDisplayDivision : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DDivId;
		
		private int _DivisionId;
		
		private string _LanguageCode;
		
		private string _Name;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDDivIdChanging(int value);
    partial void OnDDivIdChanged();
    partial void OnDivisionIdChanging(int value);
    partial void OnDivisionIdChanged();
    partial void OnLanguageCodeChanging(string value);
    partial void OnLanguageCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public LDisplayDivision()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDivId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DDivId
		{
			get
			{
				return this._DDivId;
			}
			set
			{
				if ((this._DDivId != value))
				{
					this.OnDDivIdChanging(value);
					this.SendPropertyChanging();
					this._DDivId = value;
					this.SendPropertyChanged("DDivId");
					this.OnDDivIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionId", DbType="Int NOT NULL")]
		public int DivisionId
		{
			get
			{
				return this._DivisionId;
			}
			set
			{
				if ((this._DivisionId != value))
				{
					this.OnDivisionIdChanging(value);
					this.SendPropertyChanging();
					this._DivisionId = value;
					this.SendPropertyChanged("DivisionId");
					this.OnDivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string LanguageCode
		{
			get
			{
				return this._LanguageCode;
			}
			set
			{
				if ((this._LanguageCode != value))
				{
					this.OnLanguageCodeChanging(value);
					this.SendPropertyChanging();
					this._LanguageCode = value;
					this.SendPropertyChanged("LanguageCode");
					this.OnLanguageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LDisplayDOA")]
	public partial class LDisplayDOA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DDOAId;
		
		private int _DOAId;
		
		private string _LanguageCode;
		
		private string _Name;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDDOAIdChanging(int value);
    partial void OnDDOAIdChanged();
    partial void OnDOAIdChanging(int value);
    partial void OnDOAIdChanged();
    partial void OnLanguageCodeChanging(string value);
    partial void OnLanguageCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public LDisplayDOA()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDOAId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DDOAId
		{
			get
			{
				return this._DDOAId;
			}
			set
			{
				if ((this._DDOAId != value))
				{
					this.OnDDOAIdChanging(value);
					this.SendPropertyChanging();
					this._DDOAId = value;
					this.SendPropertyChanged("DDOAId");
					this.OnDDOAIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOAId", DbType="Int NOT NULL")]
		public int DOAId
		{
			get
			{
				return this._DOAId;
			}
			set
			{
				if ((this._DOAId != value))
				{
					this.OnDOAIdChanging(value);
					this.SendPropertyChanging();
					this._DOAId = value;
					this.SendPropertyChanged("DOAId");
					this.OnDOAIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string LanguageCode
		{
			get
			{
				return this._LanguageCode;
			}
			set
			{
				if ((this._LanguageCode != value))
				{
					this.OnLanguageCodeChanging(value);
					this.SendPropertyChanging();
					this._LanguageCode = value;
					this.SendPropertyChanged("LanguageCode");
					this.OnLanguageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LDisplayEmployee")]
	public partial class LDisplayEmployee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DEId;
		
		private int _EmployeeId;
		
		private string _LanguageCode;
		
		private string _Name;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDEIdChanging(int value);
    partial void OnDEIdChanged();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnLanguageCodeChanging(string value);
    partial void OnLanguageCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public LDisplayEmployee()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DEId
		{
			get
			{
				return this._DEId;
			}
			set
			{
				if ((this._DEId != value))
				{
					this.OnDEIdChanging(value);
					this.SendPropertyChanging();
					this._DEId = value;
					this.SendPropertyChanged("DEId");
					this.OnDEIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL")]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string LanguageCode
		{
			get
			{
				return this._LanguageCode;
			}
			set
			{
				if ((this._LanguageCode != value))
				{
					this.OnLanguageCodeChanging(value);
					this.SendPropertyChanging();
					this._LanguageCode = value;
					this.SendPropertyChanged("LanguageCode");
					this.OnLanguageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LDisplayMemoButton")]
	public partial class LDisplayMemoButton : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DMBTId;
		
		private int _MemoBTId;
		
		private string _LanguageCode;
		
		private string _Name;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDMBTIdChanging(int value);
    partial void OnDMBTIdChanged();
    partial void OnMemoBTIdChanging(int value);
    partial void OnMemoBTIdChanged();
    partial void OnLanguageCodeChanging(string value);
    partial void OnLanguageCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public LDisplayMemoButton()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DMBTId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DMBTId
		{
			get
			{
				return this._DMBTId;
			}
			set
			{
				if ((this._DMBTId != value))
				{
					this.OnDMBTIdChanging(value);
					this.SendPropertyChanging();
					this._DMBTId = value;
					this.SendPropertyChanged("DMBTId");
					this.OnDMBTIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoBTId", DbType="Int NOT NULL")]
		public int MemoBTId
		{
			get
			{
				return this._MemoBTId;
			}
			set
			{
				if ((this._MemoBTId != value))
				{
					this.OnMemoBTIdChanging(value);
					this.SendPropertyChanging();
					this._MemoBTId = value;
					this.SendPropertyChanged("MemoBTId");
					this.OnMemoBTIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string LanguageCode
		{
			get
			{
				return this._LanguageCode;
			}
			set
			{
				if ((this._LanguageCode != value))
				{
					this.OnLanguageCodeChanging(value);
					this.SendPropertyChanging();
					this._LanguageCode = value;
					this.SendPropertyChanged("LanguageCode");
					this.OnLanguageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LDisplayMemoStatus")]
	public partial class LDisplayMemoStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DMSId;
		
		private int _MemoStatusId;
		
		private string _LanguageCode;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDMSIdChanging(int value);
    partial void OnDMSIdChanged();
    partial void OnMemoStatusIdChanging(int value);
    partial void OnMemoStatusIdChanged();
    partial void OnLanguageCodeChanging(string value);
    partial void OnLanguageCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public LDisplayMemoStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DMSId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DMSId
		{
			get
			{
				return this._DMSId;
			}
			set
			{
				if ((this._DMSId != value))
				{
					this.OnDMSIdChanging(value);
					this.SendPropertyChanging();
					this._DMSId = value;
					this.SendPropertyChanged("DMSId");
					this.OnDMSIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoStatusId", DbType="Int NOT NULL")]
		public int MemoStatusId
		{
			get
			{
				return this._MemoStatusId;
			}
			set
			{
				if ((this._MemoStatusId != value))
				{
					this.OnMemoStatusIdChanging(value);
					this.SendPropertyChanging();
					this._MemoStatusId = value;
					this.SendPropertyChanged("MemoStatusId");
					this.OnMemoStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string LanguageCode
		{
			get
			{
				return this._LanguageCode;
			}
			set
			{
				if ((this._LanguageCode != value))
				{
					this.OnLanguageCodeChanging(value);
					this.SendPropertyChanging();
					this._LanguageCode = value;
					this.SendPropertyChanged("LanguageCode");
					this.OnLanguageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LDisplayPosition")]
	public partial class LDisplayPosition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DPId;
		
		private int _PositionId;
		
		private string _LanguageCode;
		
		private string _Name;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDPIdChanging(int value);
    partial void OnDPIdChanged();
    partial void OnPositionIdChanging(int value);
    partial void OnPositionIdChanged();
    partial void OnLanguageCodeChanging(string value);
    partial void OnLanguageCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public LDisplayPosition()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DPId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DPId
		{
			get
			{
				return this._DPId;
			}
			set
			{
				if ((this._DPId != value))
				{
					this.OnDPIdChanging(value);
					this.SendPropertyChanging();
					this._DPId = value;
					this.SendPropertyChanged("DPId");
					this.OnDPIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionId", DbType="Int NOT NULL")]
		public int PositionId
		{
			get
			{
				return this._PositionId;
			}
			set
			{
				if ((this._PositionId != value))
				{
					this.OnPositionIdChanging(value);
					this.SendPropertyChanging();
					this._PositionId = value;
					this.SendPropertyChanged("PositionId");
					this.OnPositionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string LanguageCode
		{
			get
			{
				return this._LanguageCode;
			}
			set
			{
				if ((this._LanguageCode != value))
				{
					this.OnLanguageCodeChanging(value);
					this.SendPropertyChanging();
					this._LanguageCode = value;
					this.SendPropertyChanged("LanguageCode");
					this.OnLanguageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LDisplayPositionLevel")]
	public partial class LDisplayPositionLevel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DPLId;
		
		private int _PositionLevelId;
		
		private string _LanguageCode;
		
		private string _Name;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDPLIdChanging(int value);
    partial void OnDPLIdChanged();
    partial void OnPositionLevelIdChanging(int value);
    partial void OnPositionLevelIdChanged();
    partial void OnLanguageCodeChanging(string value);
    partial void OnLanguageCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public LDisplayPositionLevel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DPLId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DPLId
		{
			get
			{
				return this._DPLId;
			}
			set
			{
				if ((this._DPLId != value))
				{
					this.OnDPLIdChanging(value);
					this.SendPropertyChanging();
					this._DPLId = value;
					this.SendPropertyChanged("DPLId");
					this.OnDPLIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionLevelId", DbType="Int NOT NULL")]
		public int PositionLevelId
		{
			get
			{
				return this._PositionLevelId;
			}
			set
			{
				if ((this._PositionLevelId != value))
				{
					this.OnPositionLevelIdChanging(value);
					this.SendPropertyChanging();
					this._PositionLevelId = value;
					this.SendPropertyChanged("PositionLevelId");
					this.OnPositionLevelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string LanguageCode
		{
			get
			{
				return this._LanguageCode;
			}
			set
			{
				if ((this._LanguageCode != value))
				{
					this.OnLanguageCodeChanging(value);
					this.SendPropertyChanging();
					this._LanguageCode = value;
					this.SendPropertyChanged("LanguageCode");
					this.OnLanguageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LDisplayProject")]
	public partial class LDisplayProject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DProjectId;
		
		private int _ProjectId;
		
		private string _LanguageCode;
		
		private string _Name;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDProjectIdChanging(int value);
    partial void OnDProjectIdChanged();
    partial void OnProjectIdChanging(int value);
    partial void OnProjectIdChanged();
    partial void OnLanguageCodeChanging(string value);
    partial void OnLanguageCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public LDisplayProject()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DProjectId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DProjectId
		{
			get
			{
				return this._DProjectId;
			}
			set
			{
				if ((this._DProjectId != value))
				{
					this.OnDProjectIdChanging(value);
					this.SendPropertyChanging();
					this._DProjectId = value;
					this.SendPropertyChanged("DProjectId");
					this.OnDProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="Int NOT NULL")]
		public int ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string LanguageCode
		{
			get
			{
				return this._LanguageCode;
			}
			set
			{
				if ((this._LanguageCode != value))
				{
					this.OnLanguageCodeChanging(value);
					this.SendPropertyChanging();
					this._LanguageCode = value;
					this.SendPropertyChanged("LanguageCode");
					this.OnLanguageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LDisplayRole")]
	public partial class LDisplayRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DRId;
		
		private int _RoleId;
		
		private string _LanguageCode;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDRIdChanging(int value);
    partial void OnDRIdChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnLanguageCodeChanging(string value);
    partial void OnLanguageCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public LDisplayRole()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DRId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DRId
		{
			get
			{
				return this._DRId;
			}
			set
			{
				if ((this._DRId != value))
				{
					this.OnDRIdChanging(value);
					this.SendPropertyChanging();
					this._DRId = value;
					this.SendPropertyChanged("DRId");
					this.OnDRIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL")]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string LanguageCode
		{
			get
			{
				return this._LanguageCode;
			}
			set
			{
				if ((this._LanguageCode != value))
				{
					this.OnLanguageCodeChanging(value);
					this.SendPropertyChanging();
					this._LanguageCode = value;
					this.SendPropertyChanged("LanguageCode");
					this.OnLanguageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LDisplaySignatureWord")]
	public partial class LDisplaySignatureWord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DSignId;
		
		private System.Nullable<int> _SignId;
		
		private string _LanguageCode;
		
		private string _SignatureWord;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDSignIdChanging(int value);
    partial void OnDSignIdChanged();
    partial void OnSignIdChanging(System.Nullable<int> value);
    partial void OnSignIdChanged();
    partial void OnLanguageCodeChanging(string value);
    partial void OnLanguageCodeChanged();
    partial void OnSignatureWordChanging(string value);
    partial void OnSignatureWordChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public LDisplaySignatureWord()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DSignId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DSignId
		{
			get
			{
				return this._DSignId;
			}
			set
			{
				if ((this._DSignId != value))
				{
					this.OnDSignIdChanging(value);
					this.SendPropertyChanging();
					this._DSignId = value;
					this.SendPropertyChanged("DSignId");
					this.OnDSignIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignId", DbType="Int")]
		public System.Nullable<int> SignId
		{
			get
			{
				return this._SignId;
			}
			set
			{
				if ((this._SignId != value))
				{
					this.OnSignIdChanging(value);
					this.SendPropertyChanging();
					this._SignId = value;
					this.SendPropertyChanged("SignId");
					this.OnSignIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string LanguageCode
		{
			get
			{
				return this._LanguageCode;
			}
			set
			{
				if ((this._LanguageCode != value))
				{
					this.OnLanguageCodeChanging(value);
					this.SendPropertyChanging();
					this._LanguageCode = value;
					this.SendPropertyChanged("LanguageCode");
					this.OnLanguageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignatureWord", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string SignatureWord
		{
			get
			{
				return this._SignatureWord;
			}
			set
			{
				if ((this._SignatureWord != value))
				{
					this.OnSignatureWordChanging(value);
					this.SendPropertyChanging();
					this._SignatureWord = value;
					this.SendPropertyChanged("SignatureWord");
					this.OnSignatureWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LDisplaySpecificType")]
	public partial class LDisplaySpecificType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DSpecificTypeId;
		
		private System.Nullable<int> _SpecificTypeId;
		
		private string _LanguageCode;
		
		private string _Name;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDSpecificTypeIdChanging(int value);
    partial void OnDSpecificTypeIdChanged();
    partial void OnSpecificTypeIdChanging(System.Nullable<int> value);
    partial void OnSpecificTypeIdChanged();
    partial void OnLanguageCodeChanging(string value);
    partial void OnLanguageCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public LDisplaySpecificType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DSpecificTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DSpecificTypeId
		{
			get
			{
				return this._DSpecificTypeId;
			}
			set
			{
				if ((this._DSpecificTypeId != value))
				{
					this.OnDSpecificTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DSpecificTypeId = value;
					this.SendPropertyChanged("DSpecificTypeId");
					this.OnDSpecificTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecificTypeId", DbType="Int")]
		public System.Nullable<int> SpecificTypeId
		{
			get
			{
				return this._SpecificTypeId;
			}
			set
			{
				if ((this._SpecificTypeId != value))
				{
					this.OnSpecificTypeIdChanging(value);
					this.SendPropertyChanging();
					this._SpecificTypeId = value;
					this.SendPropertyChanged("SpecificTypeId");
					this.OnSpecificTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string LanguageCode
		{
			get
			{
				return this._LanguageCode;
			}
			set
			{
				if ((this._LanguageCode != value))
				{
					this.OnLanguageCodeChanging(value);
					this.SendPropertyChanging();
					this._LanguageCode = value;
					this.SendPropertyChanged("LanguageCode");
					this.OnLanguageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LFont")]
	public partial class LFont : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Category;
		
		private string _FontName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnFontNameChanging(string value);
    partial void OnFontNameChanged();
    #endregion
		
		public LFont()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="VarChar(50)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FontName", DbType="VarChar(100)")]
		public string FontName
		{
			get
			{
				return this._FontName;
			}
			set
			{
				if ((this._FontName != value))
				{
					this.OnFontNameChanging(value);
					this.SendPropertyChanging();
					this._FontName = value;
					this.SendPropertyChanged("FontName");
					this.OnFontNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LInterfaceMapType")]
	public partial class LInterfaceMapType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IMapTypeId;
		
		private string _TypeCode;
		
		private string _TypeName;
		
		private string _TypeGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIMapTypeIdChanging(int value);
    partial void OnIMapTypeIdChanged();
    partial void OnTypeCodeChanging(string value);
    partial void OnTypeCodeChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    partial void OnTypeGroupChanging(string value);
    partial void OnTypeGroupChanged();
    #endregion
		
		public LInterfaceMapType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMapTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IMapTypeId
		{
			get
			{
				return this._IMapTypeId;
			}
			set
			{
				if ((this._IMapTypeId != value))
				{
					this.OnIMapTypeIdChanging(value);
					this.SendPropertyChanging();
					this._IMapTypeId = value;
					this.SendPropertyChanged("IMapTypeId");
					this.OnIMapTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TypeCode
		{
			get
			{
				return this._TypeCode;
			}
			set
			{
				if ((this._TypeCode != value))
				{
					this.OnTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._TypeCode = value;
					this.SendPropertyChanged("TypeCode");
					this.OnTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="NVarChar(100)")]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeGroup", DbType="NVarChar(50)")]
		public string TypeGroup
		{
			get
			{
				return this._TypeGroup;
			}
			set
			{
				if ((this._TypeGroup != value))
				{
					this.OnTypeGroupChanging(value);
					this.SendPropertyChanging();
					this._TypeGroup = value;
					this.SendPropertyChanged("TypeGroup");
					this.OnTypeGroupChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LLeaveType")]
	public partial class LLeaveType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LeaveTypeId;
		
		private string _LeaveTypeCode;
		
		private string _LeaveNameEN;
		
		private string _LeaveNameTH;
		
		private string _Description;
		
		private System.Nullable<int> _CreateBy;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLeaveTypeIdChanging(int value);
    partial void OnLeaveTypeIdChanged();
    partial void OnLeaveTypeCodeChanging(string value);
    partial void OnLeaveTypeCodeChanged();
    partial void OnLeaveNameENChanging(string value);
    partial void OnLeaveNameENChanged();
    partial void OnLeaveNameTHChanging(string value);
    partial void OnLeaveNameTHChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreateByChanging(System.Nullable<int> value);
    partial void OnCreateByChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public LLeaveType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LeaveTypeId
		{
			get
			{
				return this._LeaveTypeId;
			}
			set
			{
				if ((this._LeaveTypeId != value))
				{
					this.OnLeaveTypeIdChanging(value);
					this.SendPropertyChanging();
					this._LeaveTypeId = value;
					this.SendPropertyChanged("LeaveTypeId");
					this.OnLeaveTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveTypeCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string LeaveTypeCode
		{
			get
			{
				return this._LeaveTypeCode;
			}
			set
			{
				if ((this._LeaveTypeCode != value))
				{
					this.OnLeaveTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._LeaveTypeCode = value;
					this.SendPropertyChanged("LeaveTypeCode");
					this.OnLeaveTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveNameEN", DbType="NVarChar(100)")]
		public string LeaveNameEN
		{
			get
			{
				return this._LeaveNameEN;
			}
			set
			{
				if ((this._LeaveNameEN != value))
				{
					this.OnLeaveNameENChanging(value);
					this.SendPropertyChanging();
					this._LeaveNameEN = value;
					this.SendPropertyChanged("LeaveNameEN");
					this.OnLeaveNameENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveNameTH", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LeaveNameTH
		{
			get
			{
				return this._LeaveNameTH;
			}
			set
			{
				if ((this._LeaveNameTH != value))
				{
					this.OnLeaveNameTHChanging(value);
					this.SendPropertyChanging();
					this._LeaveNameTH = value;
					this.SendPropertyChanged("LeaveNameTH");
					this.OnLeaveNameTHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="Int")]
		public System.Nullable<int> CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LLogicType")]
	public partial class LLogicType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogicTypeId;
		
		private string _LogicTypeCode;
		
		private string _LogicTypeName;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogicTypeIdChanging(int value);
    partial void OnLogicTypeIdChanged();
    partial void OnLogicTypeCodeChanging(string value);
    partial void OnLogicTypeCodeChanged();
    partial void OnLogicTypeNameChanging(string value);
    partial void OnLogicTypeNameChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public LLogicType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LogicTypeId
		{
			get
			{
				return this._LogicTypeId;
			}
			set
			{
				if ((this._LogicTypeId != value))
				{
					this.OnLogicTypeIdChanging(value);
					this.SendPropertyChanging();
					this._LogicTypeId = value;
					this.SendPropertyChanged("LogicTypeId");
					this.OnLogicTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicTypeCode", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string LogicTypeCode
		{
			get
			{
				return this._LogicTypeCode;
			}
			set
			{
				if ((this._LogicTypeCode != value))
				{
					this.OnLogicTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._LogicTypeCode = value;
					this.SendPropertyChanged("LogicTypeCode");
					this.OnLogicTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicTypeName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LogicTypeName
		{
			get
			{
				return this._LogicTypeName;
			}
			set
			{
				if ((this._LogicTypeName != value))
				{
					this.OnLogicTypeNameChanging(value);
					this.SendPropertyChanging();
					this._LogicTypeName = value;
					this.SendPropertyChanged("LogicTypeName");
					this.OnLogicTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LMemoInformation")]
	public partial class LMemoInformation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InfoId;
		
		private string _Code;
		
		private string _Name;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInfoIdChanging(int value);
    partial void OnInfoIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public LMemoInformation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfoId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int InfoId
		{
			get
			{
				return this._InfoId;
			}
			set
			{
				if ((this._InfoId != value))
				{
					this.OnInfoIdChanging(value);
					this.SendPropertyChanging();
					this._InfoId = value;
					this.SendPropertyChanged("InfoId");
					this.OnInfoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LMessage")]
	public partial class LMessage
	{
		
		private int _MessageId;
		
		private string _MessageCode;
		
		private string _Message;
		
		private string _MessageGroup;
		
		private string _LanguageCode;
		
		private System.Nullable<int> _ReturnCode;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _ModifiedBy;
		
		public LMessage()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int MessageId
		{
			get
			{
				return this._MessageId;
			}
			set
			{
				if ((this._MessageId != value))
				{
					this._MessageId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageCode", DbType="NVarChar(50)")]
		public string MessageCode
		{
			get
			{
				return this._MessageCode;
			}
			set
			{
				if ((this._MessageCode != value))
				{
					this._MessageCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(MAX)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageGroup", DbType="NVarChar(50)")]
		public string MessageGroup
		{
			get
			{
				return this._MessageGroup;
			}
			set
			{
				if ((this._MessageGroup != value))
				{
					this._MessageGroup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageCode", DbType="NVarChar(50)")]
		public string LanguageCode
		{
			get
			{
				return this._LanguageCode;
			}
			set
			{
				if ((this._LanguageCode != value))
				{
					this._LanguageCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnCode", DbType="Int")]
		public System.Nullable<int> ReturnCode
		{
			get
			{
				return this._ReturnCode;
			}
			set
			{
				if ((this._ReturnCode != value))
				{
					this._ReturnCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this._ModifiedBy = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOperator")]
	public partial class LOperator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OperateId;
		
		private string _Operator;
		
		private string _InSQL;
		
		private string _Description;
		
		private string _Example;
		
		private string _Group;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOperateIdChanging(int value);
    partial void OnOperateIdChanged();
    partial void OnOperatorChanging(string value);
    partial void OnOperatorChanged();
    partial void OnInSQLChanging(string value);
    partial void OnInSQLChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnExampleChanging(string value);
    partial void OnExampleChanged();
    partial void OnGroupChanging(string value);
    partial void OnGroupChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public LOperator()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperateId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OperateId
		{
			get
			{
				return this._OperateId;
			}
			set
			{
				if ((this._OperateId != value))
				{
					this.OnOperateIdChanging(value);
					this.SendPropertyChanging();
					this._OperateId = value;
					this.SendPropertyChanged("OperateId");
					this.OnOperateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Operator", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Operator
		{
			get
			{
				return this._Operator;
			}
			set
			{
				if ((this._Operator != value))
				{
					this.OnOperatorChanging(value);
					this.SendPropertyChanging();
					this._Operator = value;
					this.SendPropertyChanged("Operator");
					this.OnOperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InSQL", DbType="NVarChar(20)")]
		public string InSQL
		{
			get
			{
				return this._InSQL;
			}
			set
			{
				if ((this._InSQL != value))
				{
					this.OnInSQLChanging(value);
					this.SendPropertyChanging();
					this._InSQL = value;
					this.SendPropertyChanged("InSQL");
					this.OnInSQLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Example", DbType="NVarChar(50)")]
		public string Example
		{
			get
			{
				return this._Example;
			}
			set
			{
				if ((this._Example != value))
				{
					this.OnExampleChanging(value);
					this.SendPropertyChanging();
					this._Example = value;
					this.SendPropertyChanged("Example");
					this.OnExampleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Group]", Storage="_Group", DbType="NVarChar(20)")]
		public string Group
		{
			get
			{
				return this._Group;
			}
			set
			{
				if ((this._Group != value))
				{
					this.OnGroupChanging(value);
					this.SendPropertyChanging();
					this._Group = value;
					this.SendPropertyChanged("Group");
					this.OnGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LPDFPageSize")]
	public partial class LPDFPageSize : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Pagename;
		
		private System.Nullable<int> _H;
		
		private System.Nullable<int> _W;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPagenameChanging(string value);
    partial void OnPagenameChanged();
    partial void OnHChanging(System.Nullable<int> value);
    partial void OnHChanged();
    partial void OnWChanging(System.Nullable<int> value);
    partial void OnWChanged();
    #endregion
		
		public LPDFPageSize()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pagename", DbType="NVarChar(250)")]
		public string Pagename
		{
			get
			{
				return this._Pagename;
			}
			set
			{
				if ((this._Pagename != value))
				{
					this.OnPagenameChanging(value);
					this.SendPropertyChanging();
					this._Pagename = value;
					this.SendPropertyChanged("Pagename");
					this.OnPagenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H", DbType="Int")]
		public System.Nullable<int> H
		{
			get
			{
				return this._H;
			}
			set
			{
				if ((this._H != value))
				{
					this.OnHChanging(value);
					this.SendPropertyChanging();
					this._H = value;
					this.SendPropertyChanged("H");
					this.OnHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_W", DbType="Int")]
		public System.Nullable<int> W
		{
			get
			{
				return this._W;
			}
			set
			{
				if ((this._W != value))
				{
					this.OnWChanging(value);
					this.SendPropertyChanging();
					this._W = value;
					this.SendPropertyChanged("W");
					this.OnWChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LSystemSiteLanguage")]
	public partial class LSystemSiteLanguage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LanguageId;
		
		private string _LanguageCode;
		
		private string _LanguageName;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLanguageIdChanging(int value);
    partial void OnLanguageIdChanged();
    partial void OnLanguageCodeChanging(string value);
    partial void OnLanguageCodeChanged();
    partial void OnLanguageNameChanging(string value);
    partial void OnLanguageNameChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public LSystemSiteLanguage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LanguageId
		{
			get
			{
				return this._LanguageId;
			}
			set
			{
				if ((this._LanguageId != value))
				{
					this.OnLanguageIdChanging(value);
					this.SendPropertyChanging();
					this._LanguageId = value;
					this.SendPropertyChanged("LanguageId");
					this.OnLanguageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string LanguageCode
		{
			get
			{
				return this._LanguageCode;
			}
			set
			{
				if ((this._LanguageCode != value))
				{
					this.OnLanguageCodeChanging(value);
					this.SendPropertyChanging();
					this._LanguageCode = value;
					this.SendPropertyChanged("LanguageCode");
					this.OnLanguageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LanguageName
		{
			get
			{
				return this._LanguageName;
			}
			set
			{
				if ((this._LanguageName != value))
				{
					this.OnLanguageNameChanging(value);
					this.SendPropertyChanging();
					this._LanguageName = value;
					this.SendPropertyChanged("LanguageName");
					this.OnLanguageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LTemplateRefDocControl")]
	public partial class LTemplateRefDocControl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RefDocControlId;
		
		private string _Status;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRefDocControlIdChanging(int value);
    partial void OnRefDocControlIdChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public LTemplateRefDocControl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefDocControlId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RefDocControlId
		{
			get
			{
				return this._RefDocControlId;
			}
			set
			{
				if ((this._RefDocControlId != value))
				{
					this.OnRefDocControlIdChanging(value);
					this.SendPropertyChanging();
					this._RefDocControlId = value;
					this.SendPropertyChanged("RefDocControlId");
					this.OnRefDocControlIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTAccount")]
	public partial class MSTAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountId;
		
		private string _Username;
		
		private string _Password;
		
		private System.Nullable<bool> _IsVerify;
		
		private System.Nullable<bool> _IsActive;
		
		private string _ResetPasswordToken;
		
		private System.Nullable<System.DateTime> _ResetPasswordTokenExpire;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private int _EmployeeId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnIsVerifyChanging(System.Nullable<bool> value);
    partial void OnIsVerifyChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnResetPasswordTokenChanging(string value);
    partial void OnResetPasswordTokenChanged();
    partial void OnResetPasswordTokenExpireChanging(System.Nullable<System.DateTime> value);
    partial void OnResetPasswordTokenExpireChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    #endregion
		
		public MSTAccount()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVerify", DbType="Bit")]
		public System.Nullable<bool> IsVerify
		{
			get
			{
				return this._IsVerify;
			}
			set
			{
				if ((this._IsVerify != value))
				{
					this.OnIsVerifyChanging(value);
					this.SendPropertyChanging();
					this._IsVerify = value;
					this.SendPropertyChanged("IsVerify");
					this.OnIsVerifyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResetPasswordToken", DbType="NVarChar(255)")]
		public string ResetPasswordToken
		{
			get
			{
				return this._ResetPasswordToken;
			}
			set
			{
				if ((this._ResetPasswordToken != value))
				{
					this.OnResetPasswordTokenChanging(value);
					this.SendPropertyChanging();
					this._ResetPasswordToken = value;
					this.SendPropertyChanged("ResetPasswordToken");
					this.OnResetPasswordTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResetPasswordTokenExpire", DbType="DateTime")]
		public System.Nullable<System.DateTime> ResetPasswordTokenExpire
		{
			get
			{
				return this._ResetPasswordTokenExpire;
			}
			set
			{
				if ((this._ResetPasswordTokenExpire != value))
				{
					this.OnResetPasswordTokenExpireChanging(value);
					this.SendPropertyChanging();
					this._ResetPasswordTokenExpire = value;
					this.SendPropertyChanged("ResetPasswordTokenExpire");
					this.OnResetPasswordTokenExpireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL")]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTAnnualLeave")]
	public partial class MSTAnnualLeave : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ALId;
		
		private int _LeaveTypeId;
		
		private string _Year;
		
		private int _Total;
		
		private System.Nullable<int> _CompanyId;
		
		private System.Nullable<int> _BranchId;
		
		private System.Nullable<int> _DepartmentId;
		
		private string _Description;
		
		private System.Nullable<int> _Seq;
		
		private System.Nullable<int> _CreateBy;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnALIdChanging(int value);
    partial void OnALIdChanged();
    partial void OnLeaveTypeIdChanging(int value);
    partial void OnLeaveTypeIdChanged();
    partial void OnYearChanging(string value);
    partial void OnYearChanged();
    partial void OnTotalChanging(int value);
    partial void OnTotalChanged();
    partial void OnCompanyIdChanging(System.Nullable<int> value);
    partial void OnCompanyIdChanged();
    partial void OnBranchIdChanging(System.Nullable<int> value);
    partial void OnBranchIdChanged();
    partial void OnDepartmentIdChanging(System.Nullable<int> value);
    partial void OnDepartmentIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSeqChanging(System.Nullable<int> value);
    partial void OnSeqChanged();
    partial void OnCreateByChanging(System.Nullable<int> value);
    partial void OnCreateByChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MSTAnnualLeave()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ALId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ALId
		{
			get
			{
				return this._ALId;
			}
			set
			{
				if ((this._ALId != value))
				{
					this.OnALIdChanging(value);
					this.SendPropertyChanging();
					this._ALId = value;
					this.SendPropertyChanged("ALId");
					this.OnALIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveTypeId", DbType="Int NOT NULL")]
		public int LeaveTypeId
		{
			get
			{
				return this._LeaveTypeId;
			}
			set
			{
				if ((this._LeaveTypeId != value))
				{
					this.OnLeaveTypeIdChanging(value);
					this.SendPropertyChanging();
					this._LeaveTypeId = value;
					this.SendPropertyChanged("LeaveTypeId");
					this.OnLeaveTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="NVarChar(4) NOT NULL", CanBeNull=false)]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Int NOT NULL")]
		public int Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int")]
		public System.Nullable<int> CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int")]
		public System.Nullable<int> BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="Int")]
		public System.Nullable<int> DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seq", DbType="Int")]
		public System.Nullable<int> Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="Int")]
		public System.Nullable<int> CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTAnnualLeaveRole")]
	public partial class MSTAnnualLeaveRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ALRId;
		
		private int _LeaveTypeId;
		
		private int _EmployeeId;
		
		private System.Nullable<bool> _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnALRIdChanging(int value);
    partial void OnALRIdChanged();
    partial void OnLeaveTypeIdChanging(int value);
    partial void OnLeaveTypeIdChanged();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public MSTAnnualLeaveRole()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ALRId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ALRId
		{
			get
			{
				return this._ALRId;
			}
			set
			{
				if ((this._ALRId != value))
				{
					this.OnALRIdChanging(value);
					this.SendPropertyChanging();
					this._ALRId = value;
					this.SendPropertyChanged("ALRId");
					this.OnALRIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveTypeId", DbType="Int NOT NULL")]
		public int LeaveTypeId
		{
			get
			{
				return this._LeaveTypeId;
			}
			set
			{
				if ((this._LeaveTypeId != value))
				{
					this.OnLeaveTypeIdChanging(value);
					this.SendPropertyChanging();
					this._LeaveTypeId = value;
					this.SendPropertyChanged("LeaveTypeId");
					this.OnLeaveTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL")]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTApiService")]
	public partial class MSTApiService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ApiServiceId;
		
		private string _ApiServiceCode;
		
		private string _DescriptionEn;
		
		private string _DescriptionTh;
		
		private string _DataType;
		
		private string _ActionCommand;
		
		private string _ActionReturn;
		
		private string _FullClassName;
		
		private string _Flag;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<int> _CreateBy;
		
		private System.Nullable<System.DateTime> _ModifyDate;
		
		private System.Nullable<int> _ModifyBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApiServiceIdChanging(int value);
    partial void OnApiServiceIdChanged();
    partial void OnApiServiceCodeChanging(string value);
    partial void OnApiServiceCodeChanged();
    partial void OnDescriptionEnChanging(string value);
    partial void OnDescriptionEnChanged();
    partial void OnDescriptionThChanging(string value);
    partial void OnDescriptionThChanged();
    partial void OnDataTypeChanging(string value);
    partial void OnDataTypeChanged();
    partial void OnActionCommandChanging(string value);
    partial void OnActionCommandChanged();
    partial void OnActionReturnChanging(string value);
    partial void OnActionReturnChanged();
    partial void OnFullClassNameChanging(string value);
    partial void OnFullClassNameChanged();
    partial void OnFlagChanging(string value);
    partial void OnFlagChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateByChanging(System.Nullable<int> value);
    partial void OnCreateByChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    partial void OnModifyByChanging(System.Nullable<int> value);
    partial void OnModifyByChanged();
    #endregion
		
		public MSTApiService()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApiServiceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ApiServiceId
		{
			get
			{
				return this._ApiServiceId;
			}
			set
			{
				if ((this._ApiServiceId != value))
				{
					this.OnApiServiceIdChanging(value);
					this.SendPropertyChanging();
					this._ApiServiceId = value;
					this.SendPropertyChanged("ApiServiceId");
					this.OnApiServiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApiServiceCode", DbType="NVarChar(50)")]
		public string ApiServiceCode
		{
			get
			{
				return this._ApiServiceCode;
			}
			set
			{
				if ((this._ApiServiceCode != value))
				{
					this.OnApiServiceCodeChanging(value);
					this.SendPropertyChanging();
					this._ApiServiceCode = value;
					this.SendPropertyChanged("ApiServiceCode");
					this.OnApiServiceCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionEn", DbType="NVarChar(255)")]
		public string DescriptionEn
		{
			get
			{
				return this._DescriptionEn;
			}
			set
			{
				if ((this._DescriptionEn != value))
				{
					this.OnDescriptionEnChanging(value);
					this.SendPropertyChanging();
					this._DescriptionEn = value;
					this.SendPropertyChanged("DescriptionEn");
					this.OnDescriptionEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionTh", DbType="NVarChar(255)")]
		public string DescriptionTh
		{
			get
			{
				return this._DescriptionTh;
			}
			set
			{
				if ((this._DescriptionTh != value))
				{
					this.OnDescriptionThChanging(value);
					this.SendPropertyChanging();
					this._DescriptionTh = value;
					this.SendPropertyChanged("DescriptionTh");
					this.OnDescriptionThChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataType", DbType="NVarChar(50)")]
		public string DataType
		{
			get
			{
				return this._DataType;
			}
			set
			{
				if ((this._DataType != value))
				{
					this.OnDataTypeChanging(value);
					this.SendPropertyChanging();
					this._DataType = value;
					this.SendPropertyChanged("DataType");
					this.OnDataTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionCommand", DbType="NVarChar(10)")]
		public string ActionCommand
		{
			get
			{
				return this._ActionCommand;
			}
			set
			{
				if ((this._ActionCommand != value))
				{
					this.OnActionCommandChanging(value);
					this.SendPropertyChanging();
					this._ActionCommand = value;
					this.SendPropertyChanged("ActionCommand");
					this.OnActionCommandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionReturn", DbType="NVarChar(20)")]
		public string ActionReturn
		{
			get
			{
				return this._ActionReturn;
			}
			set
			{
				if ((this._ActionReturn != value))
				{
					this.OnActionReturnChanging(value);
					this.SendPropertyChanging();
					this._ActionReturn = value;
					this.SendPropertyChanged("ActionReturn");
					this.OnActionReturnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullClassName", DbType="NVarChar(MAX)")]
		public string FullClassName
		{
			get
			{
				return this._FullClassName;
			}
			set
			{
				if ((this._FullClassName != value))
				{
					this.OnFullClassNameChanging(value);
					this.SendPropertyChanging();
					this._FullClassName = value;
					this.SendPropertyChanged("FullClassName");
					this.OnFullClassNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flag", DbType="NVarChar(1)")]
		public string Flag
		{
			get
			{
				return this._Flag;
			}
			set
			{
				if ((this._Flag != value))
				{
					this.OnFlagChanging(value);
					this.SendPropertyChanging();
					this._Flag = value;
					this.SendPropertyChanged("Flag");
					this.OnFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="Int")]
		public System.Nullable<int> CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyBy", DbType="Int")]
		public System.Nullable<int> ModifyBy
		{
			get
			{
				return this._ModifyBy;
			}
			set
			{
				if ((this._ModifyBy != value))
				{
					this.OnModifyByChanging(value);
					this.SendPropertyChanging();
					this._ModifyBy = value;
					this.SendPropertyChanged("ModifyBy");
					this.OnModifyByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTApproveType")]
	public partial class MSTApproveType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ApproveTypeId;
		
		private string _MasterApproveCode;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApproveTypeIdChanging(int value);
    partial void OnApproveTypeIdChanged();
    partial void OnMasterApproveCodeChanging(string value);
    partial void OnMasterApproveCodeChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MSTApproveType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ApproveTypeId
		{
			get
			{
				return this._ApproveTypeId;
			}
			set
			{
				if ((this._ApproveTypeId != value))
				{
					this.OnApproveTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ApproveTypeId = value;
					this.SendPropertyChanged("ApproveTypeId");
					this.OnApproveTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MasterApproveCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string MasterApproveCode
		{
			get
			{
				return this._MasterApproveCode;
			}
			set
			{
				if ((this._MasterApproveCode != value))
				{
					this.OnMasterApproveCodeChanging(value);
					this.SendPropertyChanging();
					this._MasterApproveCode = value;
					this.SendPropertyChanged("MasterApproveCode");
					this.OnMasterApproveCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTAuthorizedMenu")]
	public partial class MSTAuthorizedMenu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AuthMenuId;
		
		private string _Process;
		
		private string _GroupMenu;
		
		private string _SubMenu;
		
		private string _ItemMenu;
		
		private System.Nullable<int> _OrderGroup;
		
		private System.Nullable<int> _OrderSub;
		
		private System.Nullable<int> _OrderItem;
		
		private System.Nullable<int> _InternalUrl;
		
		private string _Url;
		
		private string _IconPath;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAuthMenuIdChanging(int value);
    partial void OnAuthMenuIdChanged();
    partial void OnProcessChanging(string value);
    partial void OnProcessChanged();
    partial void OnGroupMenuChanging(string value);
    partial void OnGroupMenuChanged();
    partial void OnSubMenuChanging(string value);
    partial void OnSubMenuChanged();
    partial void OnItemMenuChanging(string value);
    partial void OnItemMenuChanged();
    partial void OnOrderGroupChanging(System.Nullable<int> value);
    partial void OnOrderGroupChanged();
    partial void OnOrderSubChanging(System.Nullable<int> value);
    partial void OnOrderSubChanged();
    partial void OnOrderItemChanging(System.Nullable<int> value);
    partial void OnOrderItemChanged();
    partial void OnInternalUrlChanging(System.Nullable<int> value);
    partial void OnInternalUrlChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnIconPathChanging(string value);
    partial void OnIconPathChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MSTAuthorizedMenu()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthMenuId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AuthMenuId
		{
			get
			{
				return this._AuthMenuId;
			}
			set
			{
				if ((this._AuthMenuId != value))
				{
					this.OnAuthMenuIdChanging(value);
					this.SendPropertyChanging();
					this._AuthMenuId = value;
					this.SendPropertyChanged("AuthMenuId");
					this.OnAuthMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process", DbType="NVarChar(3)")]
		public string Process
		{
			get
			{
				return this._Process;
			}
			set
			{
				if ((this._Process != value))
				{
					this.OnProcessChanging(value);
					this.SendPropertyChanging();
					this._Process = value;
					this.SendPropertyChanged("Process");
					this.OnProcessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupMenu", DbType="NVarChar(100)")]
		public string GroupMenu
		{
			get
			{
				return this._GroupMenu;
			}
			set
			{
				if ((this._GroupMenu != value))
				{
					this.OnGroupMenuChanging(value);
					this.SendPropertyChanging();
					this._GroupMenu = value;
					this.SendPropertyChanged("GroupMenu");
					this.OnGroupMenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubMenu", DbType="NVarChar(100)")]
		public string SubMenu
		{
			get
			{
				return this._SubMenu;
			}
			set
			{
				if ((this._SubMenu != value))
				{
					this.OnSubMenuChanging(value);
					this.SendPropertyChanging();
					this._SubMenu = value;
					this.SendPropertyChanged("SubMenu");
					this.OnSubMenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemMenu", DbType="NVarChar(50)")]
		public string ItemMenu
		{
			get
			{
				return this._ItemMenu;
			}
			set
			{
				if ((this._ItemMenu != value))
				{
					this.OnItemMenuChanging(value);
					this.SendPropertyChanging();
					this._ItemMenu = value;
					this.SendPropertyChanged("ItemMenu");
					this.OnItemMenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderGroup", DbType="Int")]
		public System.Nullable<int> OrderGroup
		{
			get
			{
				return this._OrderGroup;
			}
			set
			{
				if ((this._OrderGroup != value))
				{
					this.OnOrderGroupChanging(value);
					this.SendPropertyChanging();
					this._OrderGroup = value;
					this.SendPropertyChanged("OrderGroup");
					this.OnOrderGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderSub", DbType="Int")]
		public System.Nullable<int> OrderSub
		{
			get
			{
				return this._OrderSub;
			}
			set
			{
				if ((this._OrderSub != value))
				{
					this.OnOrderSubChanging(value);
					this.SendPropertyChanging();
					this._OrderSub = value;
					this.SendPropertyChanged("OrderSub");
					this.OnOrderSubChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderItem", DbType="Int")]
		public System.Nullable<int> OrderItem
		{
			get
			{
				return this._OrderItem;
			}
			set
			{
				if ((this._OrderItem != value))
				{
					this.OnOrderItemChanging(value);
					this.SendPropertyChanging();
					this._OrderItem = value;
					this.SendPropertyChanged("OrderItem");
					this.OnOrderItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternalUrl", DbType="Int")]
		public System.Nullable<int> InternalUrl
		{
			get
			{
				return this._InternalUrl;
			}
			set
			{
				if ((this._InternalUrl != value))
				{
					this.OnInternalUrlChanging(value);
					this.SendPropertyChanging();
					this._InternalUrl = value;
					this.SendPropertyChanged("InternalUrl");
					this.OnInternalUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(MAX)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IconPath", DbType="NVarChar(MAX)")]
		public string IconPath
		{
			get
			{
				return this._IconPath;
			}
			set
			{
				if ((this._IconPath != value))
				{
					this.OnIconPathChanging(value);
					this.SendPropertyChanging();
					this._IconPath = value;
					this.SendPropertyChanged("IconPath");
					this.OnIconPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTAuthorizedMenuRole")]
	public partial class MSTAuthorizedMenuRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AuthMenuId;
		
		private int _RoleId;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<bool> _IsEdit;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAuthMenuIdChanging(int value);
    partial void OnAuthMenuIdChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnIsEditChanging(System.Nullable<bool> value);
    partial void OnIsEditChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MSTAuthorizedMenuRole()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthMenuId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AuthMenuId
		{
			get
			{
				return this._AuthMenuId;
			}
			set
			{
				if ((this._AuthMenuId != value))
				{
					this.OnAuthMenuIdChanging(value);
					this.SendPropertyChanging();
					this._AuthMenuId = value;
					this.SendPropertyChanged("AuthMenuId");
					this.OnAuthMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEdit", DbType="Bit")]
		public System.Nullable<bool> IsEdit
		{
			get
			{
				return this._IsEdit;
			}
			set
			{
				if ((this._IsEdit != value))
				{
					this.OnIsEditChanging(value);
					this.SendPropertyChanging();
					this._IsEdit = value;
					this.SendPropertyChanged("IsEdit");
					this.OnIsEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTAuthorizeFormControlView")]
	public partial class MSTAuthorizeFormControlView : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AuthFormViewId;
		
		private System.Nullable<int> _ControlKey;
		
		private System.Nullable<int> _ColumnKey;
		
		private string _ValueType;
		
		private string _Information;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAuthFormViewIdChanging(int value);
    partial void OnAuthFormViewIdChanged();
    partial void OnControlKeyChanging(System.Nullable<int> value);
    partial void OnControlKeyChanged();
    partial void OnColumnKeyChanging(System.Nullable<int> value);
    partial void OnColumnKeyChanged();
    partial void OnValueTypeChanging(string value);
    partial void OnValueTypeChanged();
    partial void OnInformationChanging(string value);
    partial void OnInformationChanged();
    #endregion
		
		public MSTAuthorizeFormControlView()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthFormViewId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AuthFormViewId
		{
			get
			{
				return this._AuthFormViewId;
			}
			set
			{
				if ((this._AuthFormViewId != value))
				{
					this.OnAuthFormViewIdChanging(value);
					this.SendPropertyChanging();
					this._AuthFormViewId = value;
					this.SendPropertyChanged("AuthFormViewId");
					this.OnAuthFormViewIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlKey", DbType="Int")]
		public System.Nullable<int> ControlKey
		{
			get
			{
				return this._ControlKey;
			}
			set
			{
				if ((this._ControlKey != value))
				{
					this.OnControlKeyChanging(value);
					this.SendPropertyChanging();
					this._ControlKey = value;
					this.SendPropertyChanged("ControlKey");
					this.OnControlKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnKey", DbType="Int")]
		public System.Nullable<int> ColumnKey
		{
			get
			{
				return this._ColumnKey;
			}
			set
			{
				if ((this._ColumnKey != value))
				{
					this.OnColumnKeyChanging(value);
					this.SendPropertyChanging();
					this._ColumnKey = value;
					this.SendPropertyChanged("ColumnKey");
					this.OnColumnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueType", DbType="NVarChar(50)")]
		public string ValueType
		{
			get
			{
				return this._ValueType;
			}
			set
			{
				if ((this._ValueType != value))
				{
					this.OnValueTypeChanging(value);
					this.SendPropertyChanging();
					this._ValueType = value;
					this.SendPropertyChanged("ValueType");
					this.OnValueTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Information", DbType="NVarChar(MAX)")]
		public string Information
		{
			get
			{
				return this._Information;
			}
			set
			{
				if ((this._Information != value))
				{
					this.OnInformationChanging(value);
					this.SendPropertyChanging();
					this._Information = value;
					this.SendPropertyChanged("Information");
					this.OnInformationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTAuthorizeTemplate")]
	public partial class MSTAuthorizeTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AuthTemplateId;
		
		private int _AuthActionId;
		
		private int _AuthTypeId;
		
		private System.Nullable<int> _AuthFormViewId;
		
		private System.Nullable<int> _TemplateId;
		
		private System.Nullable<int> _TypeIdValue;
		
		private System.Nullable<bool> _IsAbove;
		
		private System.Nullable<bool> _IsView;
		
		private System.Nullable<bool> _IsPrint;
		
		private System.Nullable<bool> _IsCopy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAuthTemplateIdChanging(int value);
    partial void OnAuthTemplateIdChanged();
    partial void OnAuthActionIdChanging(int value);
    partial void OnAuthActionIdChanged();
    partial void OnAuthTypeIdChanging(int value);
    partial void OnAuthTypeIdChanged();
    partial void OnAuthFormViewIdChanging(System.Nullable<int> value);
    partial void OnAuthFormViewIdChanged();
    partial void OnTemplateIdChanging(System.Nullable<int> value);
    partial void OnTemplateIdChanged();
    partial void OnTypeIdValueChanging(System.Nullable<int> value);
    partial void OnTypeIdValueChanged();
    partial void OnIsAboveChanging(System.Nullable<bool> value);
    partial void OnIsAboveChanged();
    partial void OnIsViewChanging(System.Nullable<bool> value);
    partial void OnIsViewChanged();
    partial void OnIsPrintChanging(System.Nullable<bool> value);
    partial void OnIsPrintChanged();
    partial void OnIsCopyChanging(System.Nullable<bool> value);
    partial void OnIsCopyChanged();
    #endregion
		
		public MSTAuthorizeTemplate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthTemplateId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AuthTemplateId
		{
			get
			{
				return this._AuthTemplateId;
			}
			set
			{
				if ((this._AuthTemplateId != value))
				{
					this.OnAuthTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._AuthTemplateId = value;
					this.SendPropertyChanged("AuthTemplateId");
					this.OnAuthTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthActionId", DbType="Int NOT NULL")]
		public int AuthActionId
		{
			get
			{
				return this._AuthActionId;
			}
			set
			{
				if ((this._AuthActionId != value))
				{
					this.OnAuthActionIdChanging(value);
					this.SendPropertyChanging();
					this._AuthActionId = value;
					this.SendPropertyChanged("AuthActionId");
					this.OnAuthActionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthTypeId", DbType="Int NOT NULL")]
		public int AuthTypeId
		{
			get
			{
				return this._AuthTypeId;
			}
			set
			{
				if ((this._AuthTypeId != value))
				{
					this.OnAuthTypeIdChanging(value);
					this.SendPropertyChanging();
					this._AuthTypeId = value;
					this.SendPropertyChanged("AuthTypeId");
					this.OnAuthTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthFormViewId", DbType="Int")]
		public System.Nullable<int> AuthFormViewId
		{
			get
			{
				return this._AuthFormViewId;
			}
			set
			{
				if ((this._AuthFormViewId != value))
				{
					this.OnAuthFormViewIdChanging(value);
					this.SendPropertyChanging();
					this._AuthFormViewId = value;
					this.SendPropertyChanged("AuthFormViewId");
					this.OnAuthFormViewIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateId", DbType="Int")]
		public System.Nullable<int> TemplateId
		{
			get
			{
				return this._TemplateId;
			}
			set
			{
				if ((this._TemplateId != value))
				{
					this.OnTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._TemplateId = value;
					this.SendPropertyChanged("TemplateId");
					this.OnTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeIdValue", DbType="Int")]
		public System.Nullable<int> TypeIdValue
		{
			get
			{
				return this._TypeIdValue;
			}
			set
			{
				if ((this._TypeIdValue != value))
				{
					this.OnTypeIdValueChanging(value);
					this.SendPropertyChanging();
					this._TypeIdValue = value;
					this.SendPropertyChanged("TypeIdValue");
					this.OnTypeIdValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAbove", DbType="Bit")]
		public System.Nullable<bool> IsAbove
		{
			get
			{
				return this._IsAbove;
			}
			set
			{
				if ((this._IsAbove != value))
				{
					this.OnIsAboveChanging(value);
					this.SendPropertyChanging();
					this._IsAbove = value;
					this.SendPropertyChanged("IsAbove");
					this.OnIsAboveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsView", DbType="Bit")]
		public System.Nullable<bool> IsView
		{
			get
			{
				return this._IsView;
			}
			set
			{
				if ((this._IsView != value))
				{
					this.OnIsViewChanging(value);
					this.SendPropertyChanging();
					this._IsView = value;
					this.SendPropertyChanged("IsView");
					this.OnIsViewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrint", DbType="Bit")]
		public System.Nullable<bool> IsPrint
		{
			get
			{
				return this._IsPrint;
			}
			set
			{
				if ((this._IsPrint != value))
				{
					this.OnIsPrintChanging(value);
					this.SendPropertyChanging();
					this._IsPrint = value;
					this.SendPropertyChanged("IsPrint");
					this.OnIsPrintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCopy", DbType="Bit")]
		public System.Nullable<bool> IsCopy
		{
			get
			{
				return this._IsCopy;
			}
			set
			{
				if ((this._IsCopy != value))
				{
					this.OnIsCopyChanging(value);
					this.SendPropertyChanging();
					this._IsCopy = value;
					this.SendPropertyChanged("IsCopy");
					this.OnIsCopyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTAutoNumberFormat")]
	public partial class MSTAutoNumberFormat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AutoFormatId;
		
		private int _ControlId;
		
		private System.Nullable<int> _Seq;
		
		private string _Format;
		
		private string _Condition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAutoFormatIdChanging(int value);
    partial void OnAutoFormatIdChanged();
    partial void OnControlIdChanging(int value);
    partial void OnControlIdChanged();
    partial void OnSeqChanging(System.Nullable<int> value);
    partial void OnSeqChanged();
    partial void OnFormatChanging(string value);
    partial void OnFormatChanged();
    partial void OnConditionChanging(string value);
    partial void OnConditionChanged();
    #endregion
		
		public MSTAutoNumberFormat()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoFormatId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AutoFormatId
		{
			get
			{
				return this._AutoFormatId;
			}
			set
			{
				if ((this._AutoFormatId != value))
				{
					this.OnAutoFormatIdChanging(value);
					this.SendPropertyChanging();
					this._AutoFormatId = value;
					this.SendPropertyChanged("AutoFormatId");
					this.OnAutoFormatIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlId", DbType="Int NOT NULL")]
		public int ControlId
		{
			get
			{
				return this._ControlId;
			}
			set
			{
				if ((this._ControlId != value))
				{
					this.OnControlIdChanging(value);
					this.SendPropertyChanging();
					this._ControlId = value;
					this.SendPropertyChanged("ControlId");
					this.OnControlIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seq", DbType="Int")]
		public System.Nullable<int> Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Format", DbType="NVarChar(MAX)")]
		public string Format
		{
			get
			{
				return this._Format;
			}
			set
			{
				if ((this._Format != value))
				{
					this.OnFormatChanging(value);
					this.SendPropertyChanging();
					this._Format = value;
					this.SendPropertyChanged("Format");
					this.OnFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Condition", DbType="NVarChar(MAX)")]
		public string Condition
		{
			get
			{
				return this._Condition;
			}
			set
			{
				if ((this._Condition != value))
				{
					this.OnConditionChanging(value);
					this.SendPropertyChanging();
					this._Condition = value;
					this.SendPropertyChanged("Condition");
					this.OnConditionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTButtonActionService")]
	public partial class MSTButtonActionService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BTActionServiceId;
		
		private string _LabelCaption;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBTActionServiceIdChanging(int value);
    partial void OnBTActionServiceIdChanged();
    partial void OnLabelCaptionChanging(string value);
    partial void OnLabelCaptionChanged();
    #endregion
		
		public MSTButtonActionService()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BTActionServiceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BTActionServiceId
		{
			get
			{
				return this._BTActionServiceId;
			}
			set
			{
				if ((this._BTActionServiceId != value))
				{
					this.OnBTActionServiceIdChanging(value);
					this.SendPropertyChanging();
					this._BTActionServiceId = value;
					this.SendPropertyChanged("BTActionServiceId");
					this.OnBTActionServiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabelCaption", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LabelCaption
		{
			get
			{
				return this._LabelCaption;
			}
			set
			{
				if ((this._LabelCaption != value))
				{
					this.OnLabelCaptionChanging(value);
					this.SendPropertyChanging();
					this._LabelCaption = value;
					this.SendPropertyChanged("LabelCaption");
					this.OnLabelCaptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTButtonQuery")]
	public partial class MSTButtonQuery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ButtonQueryId;
		
		private System.Nullable<int> _ControlId;
		
		private string _Parameter;
		
		private System.Nullable<bool> _IsControlRef;
		
		private string _RefValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnButtonQueryIdChanging(int value);
    partial void OnButtonQueryIdChanged();
    partial void OnControlIdChanging(System.Nullable<int> value);
    partial void OnControlIdChanged();
    partial void OnParameterChanging(string value);
    partial void OnParameterChanged();
    partial void OnIsControlRefChanging(System.Nullable<bool> value);
    partial void OnIsControlRefChanged();
    partial void OnRefValueChanging(string value);
    partial void OnRefValueChanged();
    #endregion
		
		public MSTButtonQuery()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ButtonQueryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ButtonQueryId
		{
			get
			{
				return this._ButtonQueryId;
			}
			set
			{
				if ((this._ButtonQueryId != value))
				{
					this.OnButtonQueryIdChanging(value);
					this.SendPropertyChanging();
					this._ButtonQueryId = value;
					this.SendPropertyChanged("ButtonQueryId");
					this.OnButtonQueryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlId", DbType="Int")]
		public System.Nullable<int> ControlId
		{
			get
			{
				return this._ControlId;
			}
			set
			{
				if ((this._ControlId != value))
				{
					this.OnControlIdChanging(value);
					this.SendPropertyChanging();
					this._ControlId = value;
					this.SendPropertyChanged("ControlId");
					this.OnControlIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parameter", DbType="NVarChar(250)")]
		public string Parameter
		{
			get
			{
				return this._Parameter;
			}
			set
			{
				if ((this._Parameter != value))
				{
					this.OnParameterChanging(value);
					this.SendPropertyChanging();
					this._Parameter = value;
					this.SendPropertyChanged("Parameter");
					this.OnParameterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsControlRef", DbType="Bit")]
		public System.Nullable<bool> IsControlRef
		{
			get
			{
				return this._IsControlRef;
			}
			set
			{
				if ((this._IsControlRef != value))
				{
					this.OnIsControlRefChanging(value);
					this.SendPropertyChanging();
					this._IsControlRef = value;
					this.SendPropertyChanged("IsControlRef");
					this.OnIsControlRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefValue", DbType="NVarChar(250)")]
		public string RefValue
		{
			get
			{
				return this._RefValue;
			}
			set
			{
				if ((this._RefValue != value))
				{
					this.OnRefValueChanging(value);
					this.SendPropertyChanging();
					this._RefValue = value;
					this.SendPropertyChanged("RefValue");
					this.OnRefValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTCompany")]
	public partial class MSTCompany : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompanyId;
		
		private string _CompanyCode;
		
		private string _Tel;
		
		private string _Fax;
		
		private System.Nullable<int> _AccountId;
		
		private string _UrlWeb;
		
		private string _UrlLogo;
		
		private System.Nullable<bool> _IsActive;
		
		private string _BUCode;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnCompanyCodeChanging(string value);
    partial void OnCompanyCodeChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnAccountIdChanging(System.Nullable<int> value);
    partial void OnAccountIdChanged();
    partial void OnUrlWebChanging(string value);
    partial void OnUrlWebChanged();
    partial void OnUrlLogoChanging(string value);
    partial void OnUrlLogoChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnBUCodeChanging(string value);
    partial void OnBUCodeChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MSTCompany()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					this.OnCompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._CompanyCode = value;
					this.SendPropertyChanged("CompanyCode");
					this.OnCompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="NVarChar(100)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(100)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int")]
		public System.Nullable<int> AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlWeb", DbType="NVarChar(500)")]
		public string UrlWeb
		{
			get
			{
				return this._UrlWeb;
			}
			set
			{
				if ((this._UrlWeb != value))
				{
					this.OnUrlWebChanging(value);
					this.SendPropertyChanging();
					this._UrlWeb = value;
					this.SendPropertyChanged("UrlWeb");
					this.OnUrlWebChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlLogo", DbType="NVarChar(MAX)")]
		public string UrlLogo
		{
			get
			{
				return this._UrlLogo;
			}
			set
			{
				if ((this._UrlLogo != value))
				{
					this.OnUrlLogoChanging(value);
					this.SendPropertyChanging();
					this._UrlLogo = value;
					this.SendPropertyChanged("UrlLogo");
					this.OnUrlLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BUCode", DbType="NVarChar(50)")]
		public string BUCode
		{
			get
			{
				return this._BUCode;
			}
			set
			{
				if ((this._BUCode != value))
				{
					this.OnBUCodeChanging(value);
					this.SendPropertyChanging();
					this._BUCode = value;
					this.SendPropertyChanged("BUCode");
					this.OnBUCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTConfiguration")]
	public partial class MSTConfiguration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ConfigId;
		
		private string _ConfigCode;
		
		private string _ConfigValue;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConfigIdChanging(int value);
    partial void OnConfigIdChanged();
    partial void OnConfigCodeChanging(string value);
    partial void OnConfigCodeChanged();
    partial void OnConfigValueChanging(string value);
    partial void OnConfigValueChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MSTConfiguration()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfigId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ConfigId
		{
			get
			{
				return this._ConfigId;
			}
			set
			{
				if ((this._ConfigId != value))
				{
					this.OnConfigIdChanging(value);
					this.SendPropertyChanging();
					this._ConfigId = value;
					this.SendPropertyChanged("ConfigId");
					this.OnConfigIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfigCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string ConfigCode
		{
			get
			{
				return this._ConfigCode;
			}
			set
			{
				if ((this._ConfigCode != value))
				{
					this.OnConfigCodeChanging(value);
					this.SendPropertyChanging();
					this._ConfigCode = value;
					this.SendPropertyChanged("ConfigCode");
					this.OnConfigCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfigValue", DbType="NVarChar(250)")]
		public string ConfigValue
		{
			get
			{
				return this._ConfigValue;
			}
			set
			{
				if ((this._ConfigValue != value))
				{
					this.OnConfigValueChanging(value);
					this.SendPropertyChanging();
					this._ConfigValue = value;
					this.SendPropertyChanged("ConfigValue");
					this.OnConfigValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTControl")]
	public partial class MSTControl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ControlId;
		
		private int _TemplateId;
		
		private int _ControlKey;
		
		private int _ControlVersionId;
		
		private int _ControlTypeId;
		
		private string _Label;
		
		private string _AlterLabel;
		
		private string _TextButton;
		
		private string _Description;
		
		private string _DefaultValue;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<bool> _IsReadOnly;
		
		private System.Nullable<bool> _IsRequired;
		
		private System.Nullable<bool> _IsHideInPDF;
		
		private System.Nullable<bool> _IsNotCopy;
		
		private System.Nullable<bool> _IsReadAfterRequest;
		
		private int _H;
		
		private int _W;
		
		private int _X;
		
		private int _Y;
		
		private System.Nullable<bool> _IsText;
		
		private System.Nullable<int> _MaxLength;
		
		private System.Nullable<decimal> _Min;
		
		private System.Nullable<decimal> _Max;
		
		private string _Formula;
		
		private System.Nullable<int> _AlignmentId;
		
		private string _Symbol;
		
		private System.Nullable<bool> _IsSymbolLeft;
		
		private System.Nullable<bool> _IsShowComma;
		
		private System.Nullable<int> _AddYears;
		
		private System.Nullable<int> _AddMonths;
		
		private System.Nullable<int> _AddDays;
		
		private string _DisplayFormatDate;
		
		private System.Nullable<bool> _IsInline;
		
		private string _FileTypes;
		
		private string _Digit;
		
		private System.Nullable<bool> _IsExcelTransfer;
		
		private System.Nullable<bool> _IsAllowAction;
		
		private string _AllowAction;
		
		private System.Nullable<bool> _IsSummary;
		
		private System.Nullable<int> _ColumnWidth;
		
		private System.Nullable<bool> _IsMulti;
		
		private string _ObjectFit;
		
		private string _BackgroundColor;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<bool> _AddRow;
		
		private System.Nullable<bool> _InsertRow;
		
		private System.Nullable<bool> _MoveRow;
		
		private System.Nullable<bool> _DuplicateRow;
		
		private System.Nullable<bool> _DeleteRow;
		
		private string _TextColor;
		
		private EntitySet<TRNMemoDataHistory> _TRNMemoDataHistories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnControlIdChanging(int value);
    partial void OnControlIdChanged();
    partial void OnTemplateIdChanging(int value);
    partial void OnTemplateIdChanged();
    partial void OnControlKeyChanging(int value);
    partial void OnControlKeyChanged();
    partial void OnControlVersionIdChanging(int value);
    partial void OnControlVersionIdChanged();
    partial void OnControlTypeIdChanging(int value);
    partial void OnControlTypeIdChanged();
    partial void OnLabelChanging(string value);
    partial void OnLabelChanged();
    partial void OnAlterLabelChanging(string value);
    partial void OnAlterLabelChanged();
    partial void OnTextButtonChanging(string value);
    partial void OnTextButtonChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDefaultValueChanging(string value);
    partial void OnDefaultValueChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnIsReadOnlyChanging(System.Nullable<bool> value);
    partial void OnIsReadOnlyChanged();
    partial void OnIsRequiredChanging(System.Nullable<bool> value);
    partial void OnIsRequiredChanged();
    partial void OnIsHideInPDFChanging(System.Nullable<bool> value);
    partial void OnIsHideInPDFChanged();
    partial void OnIsNotCopyChanging(System.Nullable<bool> value);
    partial void OnIsNotCopyChanged();
    partial void OnIsReadAfterRequestChanging(System.Nullable<bool> value);
    partial void OnIsReadAfterRequestChanged();
    partial void OnHChanging(int value);
    partial void OnHChanged();
    partial void OnWChanging(int value);
    partial void OnWChanged();
    partial void OnXChanging(int value);
    partial void OnXChanged();
    partial void OnYChanging(int value);
    partial void OnYChanged();
    partial void OnIsTextChanging(System.Nullable<bool> value);
    partial void OnIsTextChanged();
    partial void OnMaxLengthChanging(System.Nullable<int> value);
    partial void OnMaxLengthChanged();
    partial void OnMinChanging(System.Nullable<decimal> value);
    partial void OnMinChanged();
    partial void OnMaxChanging(System.Nullable<decimal> value);
    partial void OnMaxChanged();
    partial void OnFormulaChanging(string value);
    partial void OnFormulaChanged();
    partial void OnAlignmentIdChanging(System.Nullable<int> value);
    partial void OnAlignmentIdChanged();
    partial void OnSymbolChanging(string value);
    partial void OnSymbolChanged();
    partial void OnIsSymbolLeftChanging(System.Nullable<bool> value);
    partial void OnIsSymbolLeftChanged();
    partial void OnIsShowCommaChanging(System.Nullable<bool> value);
    partial void OnIsShowCommaChanged();
    partial void OnAddYearsChanging(System.Nullable<int> value);
    partial void OnAddYearsChanged();
    partial void OnAddMonthsChanging(System.Nullable<int> value);
    partial void OnAddMonthsChanged();
    partial void OnAddDaysChanging(System.Nullable<int> value);
    partial void OnAddDaysChanged();
    partial void OnDisplayFormatDateChanging(string value);
    partial void OnDisplayFormatDateChanged();
    partial void OnIsInlineChanging(System.Nullable<bool> value);
    partial void OnIsInlineChanged();
    partial void OnFileTypesChanging(string value);
    partial void OnFileTypesChanged();
    partial void OnDigitChanging(string value);
    partial void OnDigitChanged();
    partial void OnIsExcelTransferChanging(System.Nullable<bool> value);
    partial void OnIsExcelTransferChanged();
    partial void OnIsAllowActionChanging(System.Nullable<bool> value);
    partial void OnIsAllowActionChanged();
    partial void OnAllowActionChanging(string value);
    partial void OnAllowActionChanged();
    partial void OnIsSummaryChanging(System.Nullable<bool> value);
    partial void OnIsSummaryChanged();
    partial void OnColumnWidthChanging(System.Nullable<int> value);
    partial void OnColumnWidthChanged();
    partial void OnIsMultiChanging(System.Nullable<bool> value);
    partial void OnIsMultiChanged();
    partial void OnObjectFitChanging(string value);
    partial void OnObjectFitChanged();
    partial void OnBackgroundColorChanging(string value);
    partial void OnBackgroundColorChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnAddRowChanging(System.Nullable<bool> value);
    partial void OnAddRowChanged();
    partial void OnInsertRowChanging(System.Nullable<bool> value);
    partial void OnInsertRowChanged();
    partial void OnMoveRowChanging(System.Nullable<bool> value);
    partial void OnMoveRowChanged();
    partial void OnDuplicateRowChanging(System.Nullable<bool> value);
    partial void OnDuplicateRowChanged();
    partial void OnDeleteRowChanging(System.Nullable<bool> value);
    partial void OnDeleteRowChanged();
    partial void OnTextColorChanging(string value);
    partial void OnTextColorChanged();
    #endregion
		
		public MSTControl()
		{
			this._TRNMemoDataHistories = new EntitySet<TRNMemoDataHistory>(new Action<TRNMemoDataHistory>(this.attach_TRNMemoDataHistories), new Action<TRNMemoDataHistory>(this.detach_TRNMemoDataHistories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ControlId
		{
			get
			{
				return this._ControlId;
			}
			set
			{
				if ((this._ControlId != value))
				{
					this.OnControlIdChanging(value);
					this.SendPropertyChanging();
					this._ControlId = value;
					this.SendPropertyChanged("ControlId");
					this.OnControlIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateId", DbType="Int NOT NULL")]
		public int TemplateId
		{
			get
			{
				return this._TemplateId;
			}
			set
			{
				if ((this._TemplateId != value))
				{
					this.OnTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._TemplateId = value;
					this.SendPropertyChanged("TemplateId");
					this.OnTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlKey", DbType="Int NOT NULL")]
		public int ControlKey
		{
			get
			{
				return this._ControlKey;
			}
			set
			{
				if ((this._ControlKey != value))
				{
					this.OnControlKeyChanging(value);
					this.SendPropertyChanging();
					this._ControlKey = value;
					this.SendPropertyChanged("ControlKey");
					this.OnControlKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlVersionId", DbType="Int NOT NULL")]
		public int ControlVersionId
		{
			get
			{
				return this._ControlVersionId;
			}
			set
			{
				if ((this._ControlVersionId != value))
				{
					this.OnControlVersionIdChanging(value);
					this.SendPropertyChanging();
					this._ControlVersionId = value;
					this.SendPropertyChanged("ControlVersionId");
					this.OnControlVersionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlTypeId", DbType="Int NOT NULL")]
		public int ControlTypeId
		{
			get
			{
				return this._ControlTypeId;
			}
			set
			{
				if ((this._ControlTypeId != value))
				{
					this.OnControlTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ControlTypeId = value;
					this.SendPropertyChanged("ControlTypeId");
					this.OnControlTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Label", DbType="NVarChar(250)")]
		public string Label
		{
			get
			{
				return this._Label;
			}
			set
			{
				if ((this._Label != value))
				{
					this.OnLabelChanging(value);
					this.SendPropertyChanging();
					this._Label = value;
					this.SendPropertyChanged("Label");
					this.OnLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlterLabel", DbType="NVarChar(250)")]
		public string AlterLabel
		{
			get
			{
				return this._AlterLabel;
			}
			set
			{
				if ((this._AlterLabel != value))
				{
					this.OnAlterLabelChanging(value);
					this.SendPropertyChanging();
					this._AlterLabel = value;
					this.SendPropertyChanged("AlterLabel");
					this.OnAlterLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TextButton", DbType="NVarChar(250)")]
		public string TextButton
		{
			get
			{
				return this._TextButton;
			}
			set
			{
				if ((this._TextButton != value))
				{
					this.OnTextButtonChanging(value);
					this.SendPropertyChanging();
					this._TextButton = value;
					this.SendPropertyChanged("TextButton");
					this.OnTextButtonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultValue", DbType="NVarChar(MAX)")]
		public string DefaultValue
		{
			get
			{
				return this._DefaultValue;
			}
			set
			{
				if ((this._DefaultValue != value))
				{
					this.OnDefaultValueChanging(value);
					this.SendPropertyChanging();
					this._DefaultValue = value;
					this.SendPropertyChanged("DefaultValue");
					this.OnDefaultValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReadOnly", DbType="Bit")]
		public System.Nullable<bool> IsReadOnly
		{
			get
			{
				return this._IsReadOnly;
			}
			set
			{
				if ((this._IsReadOnly != value))
				{
					this.OnIsReadOnlyChanging(value);
					this.SendPropertyChanging();
					this._IsReadOnly = value;
					this.SendPropertyChanged("IsReadOnly");
					this.OnIsReadOnlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequired", DbType="Bit")]
		public System.Nullable<bool> IsRequired
		{
			get
			{
				return this._IsRequired;
			}
			set
			{
				if ((this._IsRequired != value))
				{
					this.OnIsRequiredChanging(value);
					this.SendPropertyChanging();
					this._IsRequired = value;
					this.SendPropertyChanged("IsRequired");
					this.OnIsRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHideInPDF", DbType="Bit")]
		public System.Nullable<bool> IsHideInPDF
		{
			get
			{
				return this._IsHideInPDF;
			}
			set
			{
				if ((this._IsHideInPDF != value))
				{
					this.OnIsHideInPDFChanging(value);
					this.SendPropertyChanging();
					this._IsHideInPDF = value;
					this.SendPropertyChanged("IsHideInPDF");
					this.OnIsHideInPDFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNotCopy", DbType="Bit")]
		public System.Nullable<bool> IsNotCopy
		{
			get
			{
				return this._IsNotCopy;
			}
			set
			{
				if ((this._IsNotCopy != value))
				{
					this.OnIsNotCopyChanging(value);
					this.SendPropertyChanging();
					this._IsNotCopy = value;
					this.SendPropertyChanged("IsNotCopy");
					this.OnIsNotCopyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReadAfterRequest", DbType="Bit")]
		public System.Nullable<bool> IsReadAfterRequest
		{
			get
			{
				return this._IsReadAfterRequest;
			}
			set
			{
				if ((this._IsReadAfterRequest != value))
				{
					this.OnIsReadAfterRequestChanging(value);
					this.SendPropertyChanging();
					this._IsReadAfterRequest = value;
					this.SendPropertyChanged("IsReadAfterRequest");
					this.OnIsReadAfterRequestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H", DbType="Int NOT NULL")]
		public int H
		{
			get
			{
				return this._H;
			}
			set
			{
				if ((this._H != value))
				{
					this.OnHChanging(value);
					this.SendPropertyChanging();
					this._H = value;
					this.SendPropertyChanged("H");
					this.OnHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_W", DbType="Int NOT NULL")]
		public int W
		{
			get
			{
				return this._W;
			}
			set
			{
				if ((this._W != value))
				{
					this.OnWChanging(value);
					this.SendPropertyChanging();
					this._W = value;
					this.SendPropertyChanged("W");
					this.OnWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_X", DbType="Int NOT NULL")]
		public int X
		{
			get
			{
				return this._X;
			}
			set
			{
				if ((this._X != value))
				{
					this.OnXChanging(value);
					this.SendPropertyChanging();
					this._X = value;
					this.SendPropertyChanged("X");
					this.OnXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Y", DbType="Int NOT NULL")]
		public int Y
		{
			get
			{
				return this._Y;
			}
			set
			{
				if ((this._Y != value))
				{
					this.OnYChanging(value);
					this.SendPropertyChanging();
					this._Y = value;
					this.SendPropertyChanged("Y");
					this.OnYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsText", DbType="Bit")]
		public System.Nullable<bool> IsText
		{
			get
			{
				return this._IsText;
			}
			set
			{
				if ((this._IsText != value))
				{
					this.OnIsTextChanging(value);
					this.SendPropertyChanging();
					this._IsText = value;
					this.SendPropertyChanged("IsText");
					this.OnIsTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxLength", DbType="Int")]
		public System.Nullable<int> MaxLength
		{
			get
			{
				return this._MaxLength;
			}
			set
			{
				if ((this._MaxLength != value))
				{
					this.OnMaxLengthChanging(value);
					this.SendPropertyChanging();
					this._MaxLength = value;
					this.SendPropertyChanged("MaxLength");
					this.OnMaxLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Min", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Min
		{
			get
			{
				return this._Min;
			}
			set
			{
				if ((this._Min != value))
				{
					this.OnMinChanging(value);
					this.SendPropertyChanging();
					this._Min = value;
					this.SendPropertyChanged("Min");
					this.OnMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Max", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Max
		{
			get
			{
				return this._Max;
			}
			set
			{
				if ((this._Max != value))
				{
					this.OnMaxChanging(value);
					this.SendPropertyChanging();
					this._Max = value;
					this.SendPropertyChanged("Max");
					this.OnMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Formula", DbType="NVarChar(MAX)")]
		public string Formula
		{
			get
			{
				return this._Formula;
			}
			set
			{
				if ((this._Formula != value))
				{
					this.OnFormulaChanging(value);
					this.SendPropertyChanging();
					this._Formula = value;
					this.SendPropertyChanged("Formula");
					this.OnFormulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlignmentId", DbType="Int")]
		public System.Nullable<int> AlignmentId
		{
			get
			{
				return this._AlignmentId;
			}
			set
			{
				if ((this._AlignmentId != value))
				{
					this.OnAlignmentIdChanging(value);
					this.SendPropertyChanging();
					this._AlignmentId = value;
					this.SendPropertyChanged("AlignmentId");
					this.OnAlignmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symbol", DbType="NVarChar(20)")]
		public string Symbol
		{
			get
			{
				return this._Symbol;
			}
			set
			{
				if ((this._Symbol != value))
				{
					this.OnSymbolChanging(value);
					this.SendPropertyChanging();
					this._Symbol = value;
					this.SendPropertyChanged("Symbol");
					this.OnSymbolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSymbolLeft", DbType="Bit")]
		public System.Nullable<bool> IsSymbolLeft
		{
			get
			{
				return this._IsSymbolLeft;
			}
			set
			{
				if ((this._IsSymbolLeft != value))
				{
					this.OnIsSymbolLeftChanging(value);
					this.SendPropertyChanging();
					this._IsSymbolLeft = value;
					this.SendPropertyChanged("IsSymbolLeft");
					this.OnIsSymbolLeftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsShowComma", DbType="Bit")]
		public System.Nullable<bool> IsShowComma
		{
			get
			{
				return this._IsShowComma;
			}
			set
			{
				if ((this._IsShowComma != value))
				{
					this.OnIsShowCommaChanging(value);
					this.SendPropertyChanging();
					this._IsShowComma = value;
					this.SendPropertyChanged("IsShowComma");
					this.OnIsShowCommaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddYears", DbType="Int")]
		public System.Nullable<int> AddYears
		{
			get
			{
				return this._AddYears;
			}
			set
			{
				if ((this._AddYears != value))
				{
					this.OnAddYearsChanging(value);
					this.SendPropertyChanging();
					this._AddYears = value;
					this.SendPropertyChanged("AddYears");
					this.OnAddYearsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddMonths", DbType="Int")]
		public System.Nullable<int> AddMonths
		{
			get
			{
				return this._AddMonths;
			}
			set
			{
				if ((this._AddMonths != value))
				{
					this.OnAddMonthsChanging(value);
					this.SendPropertyChanging();
					this._AddMonths = value;
					this.SendPropertyChanged("AddMonths");
					this.OnAddMonthsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddDays", DbType="Int")]
		public System.Nullable<int> AddDays
		{
			get
			{
				return this._AddDays;
			}
			set
			{
				if ((this._AddDays != value))
				{
					this.OnAddDaysChanging(value);
					this.SendPropertyChanging();
					this._AddDays = value;
					this.SendPropertyChanged("AddDays");
					this.OnAddDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayFormatDate", DbType="NVarChar(30)")]
		public string DisplayFormatDate
		{
			get
			{
				return this._DisplayFormatDate;
			}
			set
			{
				if ((this._DisplayFormatDate != value))
				{
					this.OnDisplayFormatDateChanging(value);
					this.SendPropertyChanging();
					this._DisplayFormatDate = value;
					this.SendPropertyChanged("DisplayFormatDate");
					this.OnDisplayFormatDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInline", DbType="Bit")]
		public System.Nullable<bool> IsInline
		{
			get
			{
				return this._IsInline;
			}
			set
			{
				if ((this._IsInline != value))
				{
					this.OnIsInlineChanging(value);
					this.SendPropertyChanging();
					this._IsInline = value;
					this.SendPropertyChanged("IsInline");
					this.OnIsInlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileTypes", DbType="NVarChar(100)")]
		public string FileTypes
		{
			get
			{
				return this._FileTypes;
			}
			set
			{
				if ((this._FileTypes != value))
				{
					this.OnFileTypesChanging(value);
					this.SendPropertyChanging();
					this._FileTypes = value;
					this.SendPropertyChanged("FileTypes");
					this.OnFileTypesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Digit", DbType="NVarChar(2)")]
		public string Digit
		{
			get
			{
				return this._Digit;
			}
			set
			{
				if ((this._Digit != value))
				{
					this.OnDigitChanging(value);
					this.SendPropertyChanging();
					this._Digit = value;
					this.SendPropertyChanged("Digit");
					this.OnDigitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsExcelTransfer", DbType="Bit")]
		public System.Nullable<bool> IsExcelTransfer
		{
			get
			{
				return this._IsExcelTransfer;
			}
			set
			{
				if ((this._IsExcelTransfer != value))
				{
					this.OnIsExcelTransferChanging(value);
					this.SendPropertyChanging();
					this._IsExcelTransfer = value;
					this.SendPropertyChanged("IsExcelTransfer");
					this.OnIsExcelTransferChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAllowAction", DbType="Bit")]
		public System.Nullable<bool> IsAllowAction
		{
			get
			{
				return this._IsAllowAction;
			}
			set
			{
				if ((this._IsAllowAction != value))
				{
					this.OnIsAllowActionChanging(value);
					this.SendPropertyChanging();
					this._IsAllowAction = value;
					this.SendPropertyChanged("IsAllowAction");
					this.OnIsAllowActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowAction", DbType="NVarChar(MAX)")]
		public string AllowAction
		{
			get
			{
				return this._AllowAction;
			}
			set
			{
				if ((this._AllowAction != value))
				{
					this.OnAllowActionChanging(value);
					this.SendPropertyChanging();
					this._AllowAction = value;
					this.SendPropertyChanged("AllowAction");
					this.OnAllowActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSummary", DbType="Bit")]
		public System.Nullable<bool> IsSummary
		{
			get
			{
				return this._IsSummary;
			}
			set
			{
				if ((this._IsSummary != value))
				{
					this.OnIsSummaryChanging(value);
					this.SendPropertyChanging();
					this._IsSummary = value;
					this.SendPropertyChanged("IsSummary");
					this.OnIsSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnWidth", DbType="Int")]
		public System.Nullable<int> ColumnWidth
		{
			get
			{
				return this._ColumnWidth;
			}
			set
			{
				if ((this._ColumnWidth != value))
				{
					this.OnColumnWidthChanging(value);
					this.SendPropertyChanging();
					this._ColumnWidth = value;
					this.SendPropertyChanged("ColumnWidth");
					this.OnColumnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMulti", DbType="Bit")]
		public System.Nullable<bool> IsMulti
		{
			get
			{
				return this._IsMulti;
			}
			set
			{
				if ((this._IsMulti != value))
				{
					this.OnIsMultiChanging(value);
					this.SendPropertyChanging();
					this._IsMulti = value;
					this.SendPropertyChanged("IsMulti");
					this.OnIsMultiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectFit", DbType="NVarChar(30)")]
		public string ObjectFit
		{
			get
			{
				return this._ObjectFit;
			}
			set
			{
				if ((this._ObjectFit != value))
				{
					this.OnObjectFitChanging(value);
					this.SendPropertyChanging();
					this._ObjectFit = value;
					this.SendPropertyChanged("ObjectFit");
					this.OnObjectFitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackgroundColor", DbType="NVarChar(7)")]
		public string BackgroundColor
		{
			get
			{
				return this._BackgroundColor;
			}
			set
			{
				if ((this._BackgroundColor != value))
				{
					this.OnBackgroundColorChanging(value);
					this.SendPropertyChanging();
					this._BackgroundColor = value;
					this.SendPropertyChanged("BackgroundColor");
					this.OnBackgroundColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddRow", DbType="Bit")]
		public System.Nullable<bool> AddRow
		{
			get
			{
				return this._AddRow;
			}
			set
			{
				if ((this._AddRow != value))
				{
					this.OnAddRowChanging(value);
					this.SendPropertyChanging();
					this._AddRow = value;
					this.SendPropertyChanged("AddRow");
					this.OnAddRowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertRow", DbType="Bit")]
		public System.Nullable<bool> InsertRow
		{
			get
			{
				return this._InsertRow;
			}
			set
			{
				if ((this._InsertRow != value))
				{
					this.OnInsertRowChanging(value);
					this.SendPropertyChanging();
					this._InsertRow = value;
					this.SendPropertyChanged("InsertRow");
					this.OnInsertRowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoveRow", DbType="Bit")]
		public System.Nullable<bool> MoveRow
		{
			get
			{
				return this._MoveRow;
			}
			set
			{
				if ((this._MoveRow != value))
				{
					this.OnMoveRowChanging(value);
					this.SendPropertyChanging();
					this._MoveRow = value;
					this.SendPropertyChanged("MoveRow");
					this.OnMoveRowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DuplicateRow", DbType="Bit")]
		public System.Nullable<bool> DuplicateRow
		{
			get
			{
				return this._DuplicateRow;
			}
			set
			{
				if ((this._DuplicateRow != value))
				{
					this.OnDuplicateRowChanging(value);
					this.SendPropertyChanging();
					this._DuplicateRow = value;
					this.SendPropertyChanged("DuplicateRow");
					this.OnDuplicateRowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteRow", DbType="Bit")]
		public System.Nullable<bool> DeleteRow
		{
			get
			{
				return this._DeleteRow;
			}
			set
			{
				if ((this._DeleteRow != value))
				{
					this.OnDeleteRowChanging(value);
					this.SendPropertyChanging();
					this._DeleteRow = value;
					this.SendPropertyChanged("DeleteRow");
					this.OnDeleteRowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TextColor", DbType="NVarChar(7)")]
		public string TextColor
		{
			get
			{
				return this._TextColor;
			}
			set
			{
				if ((this._TextColor != value))
				{
					this.OnTextColorChanging(value);
					this.SendPropertyChanging();
					this._TextColor = value;
					this.SendPropertyChanged("TextColor");
					this.OnTextColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MSTControl_TRNMemoDataHistory", Storage="_TRNMemoDataHistories", ThisKey="ControlId", OtherKey="ControlId")]
		public EntitySet<TRNMemoDataHistory> TRNMemoDataHistories
		{
			get
			{
				return this._TRNMemoDataHistories;
			}
			set
			{
				this._TRNMemoDataHistories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TRNMemoDataHistories(TRNMemoDataHistory entity)
		{
			this.SendPropertyChanging();
			entity.MSTControl = this;
		}
		
		private void detach_TRNMemoDataHistories(TRNMemoDataHistory entity)
		{
			this.SendPropertyChanging();
			entity.MSTControl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTControlItem")]
	public partial class MSTControlItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ControlItemId;
		
		private int _ControlId;
		
		private string _Value;
		
		private System.Nullable<bool> _IsDefault;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnControlItemIdChanging(int value);
    partial void OnControlItemIdChanged();
    partial void OnControlIdChanging(int value);
    partial void OnControlIdChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnIsDefaultChanging(System.Nullable<bool> value);
    partial void OnIsDefaultChanged();
    #endregion
		
		public MSTControlItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ControlItemId
		{
			get
			{
				return this._ControlItemId;
			}
			set
			{
				if ((this._ControlItemId != value))
				{
					this.OnControlItemIdChanging(value);
					this.SendPropertyChanging();
					this._ControlItemId = value;
					this.SendPropertyChanged("ControlItemId");
					this.OnControlItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlId", DbType="Int NOT NULL")]
		public int ControlId
		{
			get
			{
				return this._ControlId;
			}
			set
			{
				if ((this._ControlId != value))
				{
					this.OnControlIdChanging(value);
					this.SendPropertyChanging();
					this._ControlId = value;
					this.SendPropertyChanged("ControlId");
					this.OnControlIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(250)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit")]
		public System.Nullable<bool> IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTDepartment")]
	public partial class MSTDepartment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DepartmentId;
		
		private System.Nullable<int> _ParentId;
		
		private System.Nullable<int> _DivisionId;
		
		private string _DepartmentCode;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _AccountId;
		
		private System.Nullable<int> _LeaderId;
		
		private string _CompanyCode;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartmentIdChanging(int value);
    partial void OnDepartmentIdChanged();
    partial void OnParentIdChanging(System.Nullable<int> value);
    partial void OnParentIdChanged();
    partial void OnDivisionIdChanging(System.Nullable<int> value);
    partial void OnDivisionIdChanged();
    partial void OnDepartmentCodeChanging(string value);
    partial void OnDepartmentCodeChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnAccountIdChanging(System.Nullable<int> value);
    partial void OnAccountIdChanged();
    partial void OnLeaderIdChanging(System.Nullable<int> value);
    partial void OnLeaderIdChanged();
    partial void OnCompanyCodeChanging(string value);
    partial void OnCompanyCodeChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MSTDepartment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int")]
		public System.Nullable<int> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionId", DbType="Int")]
		public System.Nullable<int> DivisionId
		{
			get
			{
				return this._DivisionId;
			}
			set
			{
				if ((this._DivisionId != value))
				{
					this.OnDivisionIdChanging(value);
					this.SendPropertyChanging();
					this._DivisionId = value;
					this.SendPropertyChanged("DivisionId");
					this.OnDivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(20)")]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this.OnDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCode = value;
					this.SendPropertyChanged("DepartmentCode");
					this.OnDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int")]
		public System.Nullable<int> AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaderId", DbType="Int")]
		public System.Nullable<int> LeaderId
		{
			get
			{
				return this._LeaderId;
			}
			set
			{
				if ((this._LeaderId != value))
				{
					this.OnLeaderIdChanging(value);
					this.SendPropertyChanging();
					this._LeaderId = value;
					this.SendPropertyChanged("LeaderId");
					this.OnLeaderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCode", DbType="NVarChar(50)")]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					this.OnCompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._CompanyCode = value;
					this.SendPropertyChanged("CompanyCode");
					this.OnCompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTDivision")]
	public partial class MSTDivision : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DivisionId;
		
		private string _DivisionCode;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _AccountId;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDivisionIdChanging(int value);
    partial void OnDivisionIdChanged();
    partial void OnDivisionCodeChanging(string value);
    partial void OnDivisionCodeChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnAccountIdChanging(System.Nullable<int> value);
    partial void OnAccountIdChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MSTDivision()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DivisionId
		{
			get
			{
				return this._DivisionId;
			}
			set
			{
				if ((this._DivisionId != value))
				{
					this.OnDivisionIdChanging(value);
					this.SendPropertyChanging();
					this._DivisionId = value;
					this.SendPropertyChanged("DivisionId");
					this.OnDivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionCode", DbType="NVarChar(500)")]
		public string DivisionCode
		{
			get
			{
				return this._DivisionCode;
			}
			set
			{
				if ((this._DivisionCode != value))
				{
					this.OnDivisionCodeChanging(value);
					this.SendPropertyChanging();
					this._DivisionCode = value;
					this.SendPropertyChanged("DivisionCode");
					this.OnDivisionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int")]
		public System.Nullable<int> AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTDOA")]
	public partial class MSTDOA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DOAId;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDOAIdChanging(int value);
    partial void OnDOAIdChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MSTDOA()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOAId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DOAId
		{
			get
			{
				return this._DOAId;
			}
			set
			{
				if ((this._DOAId != value))
				{
					this.OnDOAIdChanging(value);
					this.SendPropertyChanging();
					this._DOAId = value;
					this.SendPropertyChanged("DOAId");
					this.OnDOAIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTDOAItem")]
	public partial class MSTDOAItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DOAItemId;
		
		private System.Nullable<decimal> _Min;
		
		private System.Nullable<decimal> _Max;
		
		private System.Nullable<int> _ApproveId;
		
		private System.Nullable<int> _PositionLevelId;
		
		private System.Nullable<int> _DOAId;
		
		private System.Nullable<int> _Seq;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDOAItemIdChanging(int value);
    partial void OnDOAItemIdChanged();
    partial void OnMinChanging(System.Nullable<decimal> value);
    partial void OnMinChanged();
    partial void OnMaxChanging(System.Nullable<decimal> value);
    partial void OnMaxChanged();
    partial void OnApproveIdChanging(System.Nullable<int> value);
    partial void OnApproveIdChanged();
    partial void OnPositionLevelIdChanging(System.Nullable<int> value);
    partial void OnPositionLevelIdChanged();
    partial void OnDOAIdChanging(System.Nullable<int> value);
    partial void OnDOAIdChanged();
    partial void OnSeqChanging(System.Nullable<int> value);
    partial void OnSeqChanged();
    #endregion
		
		public MSTDOAItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOAItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DOAItemId
		{
			get
			{
				return this._DOAItemId;
			}
			set
			{
				if ((this._DOAItemId != value))
				{
					this.OnDOAItemIdChanging(value);
					this.SendPropertyChanging();
					this._DOAItemId = value;
					this.SendPropertyChanged("DOAItemId");
					this.OnDOAItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Min", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Min
		{
			get
			{
				return this._Min;
			}
			set
			{
				if ((this._Min != value))
				{
					this.OnMinChanging(value);
					this.SendPropertyChanging();
					this._Min = value;
					this.SendPropertyChanged("Min");
					this.OnMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Max", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Max
		{
			get
			{
				return this._Max;
			}
			set
			{
				if ((this._Max != value))
				{
					this.OnMaxChanging(value);
					this.SendPropertyChanging();
					this._Max = value;
					this.SendPropertyChanged("Max");
					this.OnMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveId", DbType="Int")]
		public System.Nullable<int> ApproveId
		{
			get
			{
				return this._ApproveId;
			}
			set
			{
				if ((this._ApproveId != value))
				{
					this.OnApproveIdChanging(value);
					this.SendPropertyChanging();
					this._ApproveId = value;
					this.SendPropertyChanged("ApproveId");
					this.OnApproveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionLevelId", DbType="Int")]
		public System.Nullable<int> PositionLevelId
		{
			get
			{
				return this._PositionLevelId;
			}
			set
			{
				if ((this._PositionLevelId != value))
				{
					this.OnPositionLevelIdChanging(value);
					this.SendPropertyChanging();
					this._PositionLevelId = value;
					this.SendPropertyChanged("PositionLevelId");
					this.OnPositionLevelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOAId", DbType="Int")]
		public System.Nullable<int> DOAId
		{
			get
			{
				return this._DOAId;
			}
			set
			{
				if ((this._DOAId != value))
				{
					this.OnDOAIdChanging(value);
					this.SendPropertyChanging();
					this._DOAId = value;
					this.SendPropertyChanged("DOAId");
					this.OnDOAIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seq", DbType="Int")]
		public System.Nullable<int> Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTEmailTemplate")]
	public partial class MSTEmailTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmailTemplateId;
		
		private System.Nullable<int> _TemplateId;
		
		private string _FormState;
		
		private string _EmailTo;
		
		private string _EmailCC;
		
		private string _EmailSubject;
		
		private string _EmailBody;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmailTemplateIdChanging(int value);
    partial void OnEmailTemplateIdChanged();
    partial void OnTemplateIdChanging(System.Nullable<int> value);
    partial void OnTemplateIdChanged();
    partial void OnFormStateChanging(string value);
    partial void OnFormStateChanged();
    partial void OnEmailToChanging(string value);
    partial void OnEmailToChanged();
    partial void OnEmailCCChanging(string value);
    partial void OnEmailCCChanged();
    partial void OnEmailSubjectChanging(string value);
    partial void OnEmailSubjectChanged();
    partial void OnEmailBodyChanging(string value);
    partial void OnEmailBodyChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MSTEmailTemplate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailTemplateId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmailTemplateId
		{
			get
			{
				return this._EmailTemplateId;
			}
			set
			{
				if ((this._EmailTemplateId != value))
				{
					this.OnEmailTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._EmailTemplateId = value;
					this.SendPropertyChanged("EmailTemplateId");
					this.OnEmailTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateId", DbType="Int")]
		public System.Nullable<int> TemplateId
		{
			get
			{
				return this._TemplateId;
			}
			set
			{
				if ((this._TemplateId != value))
				{
					this.OnTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._TemplateId = value;
					this.SendPropertyChanged("TemplateId");
					this.OnTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormState", DbType="VarChar(100)")]
		public string FormState
		{
			get
			{
				return this._FormState;
			}
			set
			{
				if ((this._FormState != value))
				{
					this.OnFormStateChanging(value);
					this.SendPropertyChanging();
					this._FormState = value;
					this.SendPropertyChanged("FormState");
					this.OnFormStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailTo", DbType="VarChar(250)")]
		public string EmailTo
		{
			get
			{
				return this._EmailTo;
			}
			set
			{
				if ((this._EmailTo != value))
				{
					this.OnEmailToChanging(value);
					this.SendPropertyChanging();
					this._EmailTo = value;
					this.SendPropertyChanged("EmailTo");
					this.OnEmailToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailCC", DbType="VarChar(250)")]
		public string EmailCC
		{
			get
			{
				return this._EmailCC;
			}
			set
			{
				if ((this._EmailCC != value))
				{
					this.OnEmailCCChanging(value);
					this.SendPropertyChanging();
					this._EmailCC = value;
					this.SendPropertyChanged("EmailCC");
					this.OnEmailCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailSubject", DbType="VarChar(250)")]
		public string EmailSubject
		{
			get
			{
				return this._EmailSubject;
			}
			set
			{
				if ((this._EmailSubject != value))
				{
					this.OnEmailSubjectChanging(value);
					this.SendPropertyChanging();
					this._EmailSubject = value;
					this.SendPropertyChanged("EmailSubject");
					this.OnEmailSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailBody", DbType="VarChar(MAX)")]
		public string EmailBody
		{
			get
			{
				return this._EmailBody;
			}
			set
			{
				if ((this._EmailBody != value))
				{
					this.OnEmailBodyChanging(value);
					this.SendPropertyChanging();
					this._EmailBody = value;
					this.SendPropertyChanged("EmailBody");
					this.OnEmailBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTEmployee")]
	public partial class MSTEmployee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployeeId;
		
		private string _EmployeeCode;
		
		private string _Email;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _ReportToEmployeeId;
		
		private string _SignPicPath;
		
		private string _ProfilePicPath;
		
		private string _LanguageCode;
		
		private string _ADTitle;
		
		private System.Nullable<int> _DivisionId;
		
		private string _EMPL_RCD;
		
		private System.Nullable<int> _EmployeeLevel;
		
		private string _Userid_Line;
		
		private System.Nullable<System.DateTime> _EffectiveDate;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnEmployeeCodeChanging(string value);
    partial void OnEmployeeCodeChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnReportToEmployeeIdChanging(System.Nullable<int> value);
    partial void OnReportToEmployeeIdChanged();
    partial void OnSignPicPathChanging(string value);
    partial void OnSignPicPathChanged();
    partial void OnProfilePicPathChanging(string value);
    partial void OnProfilePicPathChanged();
    partial void OnLanguageCodeChanging(string value);
    partial void OnLanguageCodeChanged();
    partial void OnADTitleChanging(string value);
    partial void OnADTitleChanged();
    partial void OnDivisionIdChanging(System.Nullable<int> value);
    partial void OnDivisionIdChanged();
    partial void OnEMPL_RCDChanging(string value);
    partial void OnEMPL_RCDChanged();
    partial void OnEmployeeLevelChanging(System.Nullable<int> value);
    partial void OnEmployeeLevelChanged();
    partial void OnUserid_LineChanging(string value);
    partial void OnUserid_LineChanged();
    partial void OnEffectiveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEffectiveDateChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MSTEmployee()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="NVarChar(10)")]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					this.OnEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCode = value;
					this.SendPropertyChanged("EmployeeCode");
					this.OnEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportToEmployeeId", DbType="Int")]
		public System.Nullable<int> ReportToEmployeeId
		{
			get
			{
				return this._ReportToEmployeeId;
			}
			set
			{
				if ((this._ReportToEmployeeId != value))
				{
					this.OnReportToEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._ReportToEmployeeId = value;
					this.SendPropertyChanged("ReportToEmployeeId");
					this.OnReportToEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignPicPath", DbType="NVarChar(MAX)")]
		public string SignPicPath
		{
			get
			{
				return this._SignPicPath;
			}
			set
			{
				if ((this._SignPicPath != value))
				{
					this.OnSignPicPathChanging(value);
					this.SendPropertyChanging();
					this._SignPicPath = value;
					this.SendPropertyChanged("SignPicPath");
					this.OnSignPicPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfilePicPath", DbType="NVarChar(100)")]
		public string ProfilePicPath
		{
			get
			{
				return this._ProfilePicPath;
			}
			set
			{
				if ((this._ProfilePicPath != value))
				{
					this.OnProfilePicPathChanging(value);
					this.SendPropertyChanging();
					this._ProfilePicPath = value;
					this.SendPropertyChanged("ProfilePicPath");
					this.OnProfilePicPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string LanguageCode
		{
			get
			{
				return this._LanguageCode;
			}
			set
			{
				if ((this._LanguageCode != value))
				{
					this.OnLanguageCodeChanging(value);
					this.SendPropertyChanging();
					this._LanguageCode = value;
					this.SendPropertyChanged("LanguageCode");
					this.OnLanguageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADTitle", DbType="NVarChar(500)")]
		public string ADTitle
		{
			get
			{
				return this._ADTitle;
			}
			set
			{
				if ((this._ADTitle != value))
				{
					this.OnADTitleChanging(value);
					this.SendPropertyChanging();
					this._ADTitle = value;
					this.SendPropertyChanged("ADTitle");
					this.OnADTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionId", DbType="Int")]
		public System.Nullable<int> DivisionId
		{
			get
			{
				return this._DivisionId;
			}
			set
			{
				if ((this._DivisionId != value))
				{
					this.OnDivisionIdChanging(value);
					this.SendPropertyChanging();
					this._DivisionId = value;
					this.SendPropertyChanged("DivisionId");
					this.OnDivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMPL_RCD", DbType="NVarChar(500)")]
		public string EMPL_RCD
		{
			get
			{
				return this._EMPL_RCD;
			}
			set
			{
				if ((this._EMPL_RCD != value))
				{
					this.OnEMPL_RCDChanging(value);
					this.SendPropertyChanging();
					this._EMPL_RCD = value;
					this.SendPropertyChanged("EMPL_RCD");
					this.OnEMPL_RCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeLevel", DbType="Int")]
		public System.Nullable<int> EmployeeLevel
		{
			get
			{
				return this._EmployeeLevel;
			}
			set
			{
				if ((this._EmployeeLevel != value))
				{
					this.OnEmployeeLevelChanging(value);
					this.SendPropertyChanging();
					this._EmployeeLevel = value;
					this.SendPropertyChanged("EmployeeLevel");
					this.OnEmployeeLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Userid_Line", DbType="NVarChar(500)")]
		public string Userid_Line
		{
			get
			{
				return this._Userid_Line;
			}
			set
			{
				if ((this._Userid_Line != value))
				{
					this.OnUserid_LineChanging(value);
					this.SendPropertyChanging();
					this._Userid_Line = value;
					this.SendPropertyChanged("Userid_Line");
					this.OnUserid_LineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EffectiveDate
		{
			get
			{
				return this._EffectiveDate;
			}
			set
			{
				if ((this._EffectiveDate != value))
				{
					this.OnEffectiveDateChanging(value);
					this.SendPropertyChanging();
					this._EffectiveDate = value;
					this.SendPropertyChanged("EffectiveDate");
					this.OnEffectiveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTEmployeeDepartment")]
	public partial class MSTEmployeeDepartment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployeeId;
		
		private int _DepartmentId;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnDepartmentIdChanging(int value);
    partial void OnDepartmentIdChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MSTEmployeeDepartment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTEmployeePosition")]
	public partial class MSTEmployeePosition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployeeId;
		
		private int _PositionId;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnPositionIdChanging(int value);
    partial void OnPositionIdChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MSTEmployeePosition()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PositionId
		{
			get
			{
				return this._PositionId;
			}
			set
			{
				if ((this._PositionId != value))
				{
					this.OnPositionIdChanging(value);
					this.SendPropertyChanging();
					this._PositionId = value;
					this.SendPropertyChanged("PositionId");
					this.OnPositionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTIAPI")]
	public partial class MSTIAPI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IAPIId;
		
		private int _LogicId;
		
		private string _URL;
		
		private System.Nullable<bool> _AutoSave;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIAPIIdChanging(int value);
    partial void OnIAPIIdChanged();
    partial void OnLogicIdChanging(int value);
    partial void OnLogicIdChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnAutoSaveChanging(System.Nullable<bool> value);
    partial void OnAutoSaveChanged();
    #endregion
		
		public MSTIAPI()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IAPIId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IAPIId
		{
			get
			{
				return this._IAPIId;
			}
			set
			{
				if ((this._IAPIId != value))
				{
					this.OnIAPIIdChanging(value);
					this.SendPropertyChanging();
					this._IAPIId = value;
					this.SendPropertyChanged("IAPIId");
					this.OnIAPIIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicId", DbType="Int NOT NULL")]
		public int LogicId
		{
			get
			{
				return this._LogicId;
			}
			set
			{
				if ((this._LogicId != value))
				{
					this.OnLogicIdChanging(value);
					this.SendPropertyChanging();
					this._LogicId = value;
					this.SendPropertyChanged("LogicId");
					this.OnLogicIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoSave", DbType="Bit")]
		public System.Nullable<bool> AutoSave
		{
			get
			{
				return this._AutoSave;
			}
			set
			{
				if ((this._AutoSave != value))
				{
					this.OnAutoSaveChanging(value);
					this.SendPropertyChanging();
					this._AutoSave = value;
					this.SendPropertyChanged("AutoSave");
					this.OnAutoSaveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTIAPIHeadConfig")]
	public partial class MSTIAPIHeadConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IAPIHConfigId;
		
		private int _IAPIId;
		
		private string _HeaderKey;
		
		private string _HeaderValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIAPIHConfigIdChanging(int value);
    partial void OnIAPIHConfigIdChanged();
    partial void OnIAPIIdChanging(int value);
    partial void OnIAPIIdChanged();
    partial void OnHeaderKeyChanging(string value);
    partial void OnHeaderKeyChanged();
    partial void OnHeaderValueChanging(string value);
    partial void OnHeaderValueChanged();
    #endregion
		
		public MSTIAPIHeadConfig()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IAPIHConfigId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IAPIHConfigId
		{
			get
			{
				return this._IAPIHConfigId;
			}
			set
			{
				if ((this._IAPIHConfigId != value))
				{
					this.OnIAPIHConfigIdChanging(value);
					this.SendPropertyChanging();
					this._IAPIHConfigId = value;
					this.SendPropertyChanged("IAPIHConfigId");
					this.OnIAPIHConfigIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IAPIId", DbType="Int NOT NULL")]
		public int IAPIId
		{
			get
			{
				return this._IAPIId;
			}
			set
			{
				if ((this._IAPIId != value))
				{
					this.OnIAPIIdChanging(value);
					this.SendPropertyChanging();
					this._IAPIId = value;
					this.SendPropertyChanged("IAPIId");
					this.OnIAPIIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeaderKey", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HeaderKey
		{
			get
			{
				return this._HeaderKey;
			}
			set
			{
				if ((this._HeaderKey != value))
				{
					this.OnHeaderKeyChanging(value);
					this.SendPropertyChanging();
					this._HeaderKey = value;
					this.SendPropertyChanged("HeaderKey");
					this.OnHeaderKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeaderValue", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HeaderValue
		{
			get
			{
				return this._HeaderValue;
			}
			set
			{
				if ((this._HeaderValue != value))
				{
					this.OnHeaderValueChanging(value);
					this.SendPropertyChanging();
					this._HeaderValue = value;
					this.SendPropertyChanged("HeaderValue");
					this.OnHeaderValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTIConditionChangeField")]
	public partial class MSTIConditionChangeField : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IChangeFieldId;
		
		private int _LogicId;
		
		private int _ControlKey;
		
		private string _DBField;
		
		private string _DBSourceName;
		
		private string _DBFieldWhere;
		
		private string _Condition;
		
		private bool _IsInformation;
		
		private System.Nullable<int> _InfoId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIChangeFieldIdChanging(int value);
    partial void OnIChangeFieldIdChanged();
    partial void OnLogicIdChanging(int value);
    partial void OnLogicIdChanged();
    partial void OnControlKeyChanging(int value);
    partial void OnControlKeyChanged();
    partial void OnDBFieldChanging(string value);
    partial void OnDBFieldChanged();
    partial void OnDBSourceNameChanging(string value);
    partial void OnDBSourceNameChanged();
    partial void OnDBFieldWhereChanging(string value);
    partial void OnDBFieldWhereChanged();
    partial void OnConditionChanging(string value);
    partial void OnConditionChanged();
    partial void OnIsInformationChanging(bool value);
    partial void OnIsInformationChanged();
    partial void OnInfoIdChanging(System.Nullable<int> value);
    partial void OnInfoIdChanged();
    #endregion
		
		public MSTIConditionChangeField()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IChangeFieldId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IChangeFieldId
		{
			get
			{
				return this._IChangeFieldId;
			}
			set
			{
				if ((this._IChangeFieldId != value))
				{
					this.OnIChangeFieldIdChanging(value);
					this.SendPropertyChanging();
					this._IChangeFieldId = value;
					this.SendPropertyChanged("IChangeFieldId");
					this.OnIChangeFieldIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicId", DbType="Int NOT NULL")]
		public int LogicId
		{
			get
			{
				return this._LogicId;
			}
			set
			{
				if ((this._LogicId != value))
				{
					this.OnLogicIdChanging(value);
					this.SendPropertyChanging();
					this._LogicId = value;
					this.SendPropertyChanged("LogicId");
					this.OnLogicIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlKey", DbType="Int NOT NULL")]
		public int ControlKey
		{
			get
			{
				return this._ControlKey;
			}
			set
			{
				if ((this._ControlKey != value))
				{
					this.OnControlKeyChanging(value);
					this.SendPropertyChanging();
					this._ControlKey = value;
					this.SendPropertyChanged("ControlKey");
					this.OnControlKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DBField", DbType="NVarChar(100)")]
		public string DBField
		{
			get
			{
				return this._DBField;
			}
			set
			{
				if ((this._DBField != value))
				{
					this.OnDBFieldChanging(value);
					this.SendPropertyChanging();
					this._DBField = value;
					this.SendPropertyChanged("DBField");
					this.OnDBFieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DBSourceName", DbType="NVarChar(100)")]
		public string DBSourceName
		{
			get
			{
				return this._DBSourceName;
			}
			set
			{
				if ((this._DBSourceName != value))
				{
					this.OnDBSourceNameChanging(value);
					this.SendPropertyChanging();
					this._DBSourceName = value;
					this.SendPropertyChanged("DBSourceName");
					this.OnDBSourceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DBFieldWhere", DbType="NVarChar(100)")]
		public string DBFieldWhere
		{
			get
			{
				return this._DBFieldWhere;
			}
			set
			{
				if ((this._DBFieldWhere != value))
				{
					this.OnDBFieldWhereChanging(value);
					this.SendPropertyChanging();
					this._DBFieldWhere = value;
					this.SendPropertyChanged("DBFieldWhere");
					this.OnDBFieldWhereChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Condition", DbType="NVarChar(500)")]
		public string Condition
		{
			get
			{
				return this._Condition;
			}
			set
			{
				if ((this._Condition != value))
				{
					this.OnConditionChanging(value);
					this.SendPropertyChanging();
					this._Condition = value;
					this.SendPropertyChanged("Condition");
					this.OnConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInformation", DbType="Bit NOT NULL")]
		public bool IsInformation
		{
			get
			{
				return this._IsInformation;
			}
			set
			{
				if ((this._IsInformation != value))
				{
					this.OnIsInformationChanging(value);
					this.SendPropertyChanging();
					this._IsInformation = value;
					this.SendPropertyChanged("IsInformation");
					this.OnIsInformationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfoId", DbType="Int")]
		public System.Nullable<int> InfoId
		{
			get
			{
				return this._InfoId;
			}
			set
			{
				if ((this._InfoId != value))
				{
					this.OnInfoIdChanging(value);
					this.SendPropertyChanging();
					this._InfoId = value;
					this.SendPropertyChanged("InfoId");
					this.OnInfoIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTIConditionFormatDate")]
	public partial class MSTIConditionFormatDate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IFormatDateId;
		
		private int _LogicId;
		
		private int _ControlKey;
		
		private System.Nullable<int> _AddDay;
		
		private string _OldFormat;
		
		private string _NewFormat;
		
		private bool _IsInformation;
		
		private System.Nullable<int> _InfoId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIFormatDateIdChanging(int value);
    partial void OnIFormatDateIdChanged();
    partial void OnLogicIdChanging(int value);
    partial void OnLogicIdChanged();
    partial void OnControlKeyChanging(int value);
    partial void OnControlKeyChanged();
    partial void OnAddDayChanging(System.Nullable<int> value);
    partial void OnAddDayChanged();
    partial void OnOldFormatChanging(string value);
    partial void OnOldFormatChanged();
    partial void OnNewFormatChanging(string value);
    partial void OnNewFormatChanged();
    partial void OnIsInformationChanging(bool value);
    partial void OnIsInformationChanged();
    partial void OnInfoIdChanging(System.Nullable<int> value);
    partial void OnInfoIdChanged();
    #endregion
		
		public MSTIConditionFormatDate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IFormatDateId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IFormatDateId
		{
			get
			{
				return this._IFormatDateId;
			}
			set
			{
				if ((this._IFormatDateId != value))
				{
					this.OnIFormatDateIdChanging(value);
					this.SendPropertyChanging();
					this._IFormatDateId = value;
					this.SendPropertyChanged("IFormatDateId");
					this.OnIFormatDateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicId", DbType="Int NOT NULL")]
		public int LogicId
		{
			get
			{
				return this._LogicId;
			}
			set
			{
				if ((this._LogicId != value))
				{
					this.OnLogicIdChanging(value);
					this.SendPropertyChanging();
					this._LogicId = value;
					this.SendPropertyChanged("LogicId");
					this.OnLogicIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlKey", DbType="Int NOT NULL")]
		public int ControlKey
		{
			get
			{
				return this._ControlKey;
			}
			set
			{
				if ((this._ControlKey != value))
				{
					this.OnControlKeyChanging(value);
					this.SendPropertyChanging();
					this._ControlKey = value;
					this.SendPropertyChanged("ControlKey");
					this.OnControlKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddDay", DbType="Int")]
		public System.Nullable<int> AddDay
		{
			get
			{
				return this._AddDay;
			}
			set
			{
				if ((this._AddDay != value))
				{
					this.OnAddDayChanging(value);
					this.SendPropertyChanging();
					this._AddDay = value;
					this.SendPropertyChanged("AddDay");
					this.OnAddDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldFormat", DbType="NVarChar(50)")]
		public string OldFormat
		{
			get
			{
				return this._OldFormat;
			}
			set
			{
				if ((this._OldFormat != value))
				{
					this.OnOldFormatChanging(value);
					this.SendPropertyChanging();
					this._OldFormat = value;
					this.SendPropertyChanged("OldFormat");
					this.OnOldFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewFormat", DbType="NVarChar(50)")]
		public string NewFormat
		{
			get
			{
				return this._NewFormat;
			}
			set
			{
				if ((this._NewFormat != value))
				{
					this.OnNewFormatChanging(value);
					this.SendPropertyChanging();
					this._NewFormat = value;
					this.SendPropertyChanged("NewFormat");
					this.OnNewFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInformation", DbType="Bit NOT NULL")]
		public bool IsInformation
		{
			get
			{
				return this._IsInformation;
			}
			set
			{
				if ((this._IsInformation != value))
				{
					this.OnIsInformationChanging(value);
					this.SendPropertyChanging();
					this._IsInformation = value;
					this.SendPropertyChanged("IsInformation");
					this.OnIsInformationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfoId", DbType="Int")]
		public System.Nullable<int> InfoId
		{
			get
			{
				return this._InfoId;
			}
			set
			{
				if ((this._InfoId != value))
				{
					this.OnInfoIdChanging(value);
					this.SendPropertyChanging();
					this._InfoId = value;
					this.SendPropertyChanged("InfoId");
					this.OnInfoIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTIConditionFormatReplace")]
	public partial class MSTIConditionFormatReplace : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IFormatReplaceId;
		
		private int _ControlKey;
		
		private int _LogicId;
		
		private string _OldValue;
		
		private string _NewValue;
		
		private bool _IsInformation;
		
		private System.Nullable<int> _InfoId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIFormatReplaceIdChanging(int value);
    partial void OnIFormatReplaceIdChanged();
    partial void OnControlKeyChanging(int value);
    partial void OnControlKeyChanged();
    partial void OnLogicIdChanging(int value);
    partial void OnLogicIdChanged();
    partial void OnOldValueChanging(string value);
    partial void OnOldValueChanged();
    partial void OnNewValueChanging(string value);
    partial void OnNewValueChanged();
    partial void OnIsInformationChanging(bool value);
    partial void OnIsInformationChanged();
    partial void OnInfoIdChanging(System.Nullable<int> value);
    partial void OnInfoIdChanged();
    #endregion
		
		public MSTIConditionFormatReplace()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IFormatReplaceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IFormatReplaceId
		{
			get
			{
				return this._IFormatReplaceId;
			}
			set
			{
				if ((this._IFormatReplaceId != value))
				{
					this.OnIFormatReplaceIdChanging(value);
					this.SendPropertyChanging();
					this._IFormatReplaceId = value;
					this.SendPropertyChanged("IFormatReplaceId");
					this.OnIFormatReplaceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlKey", DbType="Int NOT NULL")]
		public int ControlKey
		{
			get
			{
				return this._ControlKey;
			}
			set
			{
				if ((this._ControlKey != value))
				{
					this.OnControlKeyChanging(value);
					this.SendPropertyChanging();
					this._ControlKey = value;
					this.SendPropertyChanged("ControlKey");
					this.OnControlKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicId", DbType="Int NOT NULL")]
		public int LogicId
		{
			get
			{
				return this._LogicId;
			}
			set
			{
				if ((this._LogicId != value))
				{
					this.OnLogicIdChanging(value);
					this.SendPropertyChanging();
					this._LogicId = value;
					this.SendPropertyChanged("LogicId");
					this.OnLogicIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldValue", DbType="NVarChar(100)")]
		public string OldValue
		{
			get
			{
				return this._OldValue;
			}
			set
			{
				if ((this._OldValue != value))
				{
					this.OnOldValueChanging(value);
					this.SendPropertyChanging();
					this._OldValue = value;
					this.SendPropertyChanged("OldValue");
					this.OnOldValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewValue", DbType="NVarChar(100)")]
		public string NewValue
		{
			get
			{
				return this._NewValue;
			}
			set
			{
				if ((this._NewValue != value))
				{
					this.OnNewValueChanging(value);
					this.SendPropertyChanging();
					this._NewValue = value;
					this.SendPropertyChanged("NewValue");
					this.OnNewValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInformation", DbType="Bit NOT NULL")]
		public bool IsInformation
		{
			get
			{
				return this._IsInformation;
			}
			set
			{
				if ((this._IsInformation != value))
				{
					this.OnIsInformationChanging(value);
					this.SendPropertyChanging();
					this._IsInformation = value;
					this.SendPropertyChanged("IsInformation");
					this.OnIsInformationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfoId", DbType="Int")]
		public System.Nullable<int> InfoId
		{
			get
			{
				return this._InfoId;
			}
			set
			{
				if ((this._InfoId != value))
				{
					this.OnInfoIdChanging(value);
					this.SendPropertyChanging();
					this._InfoId = value;
					this.SendPropertyChanged("InfoId");
					this.OnInfoIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTIEvent")]
	public partial class MSTIEvent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IEventId;
		
		private int _LogicId;
		
		private System.Nullable<int> _ControlKey;
		
		private System.Nullable<int> _MemoBTId;
		
		private int _BTActionServiceId;
		
		private int _MemoStatusId;
		
		private string _AssignValue;
		
		private System.Nullable<int> _OperateId;
		
		private System.Nullable<bool> _IsFirst;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIEventIdChanging(int value);
    partial void OnIEventIdChanged();
    partial void OnLogicIdChanging(int value);
    partial void OnLogicIdChanged();
    partial void OnControlKeyChanging(System.Nullable<int> value);
    partial void OnControlKeyChanged();
    partial void OnMemoBTIdChanging(System.Nullable<int> value);
    partial void OnMemoBTIdChanged();
    partial void OnBTActionServiceIdChanging(int value);
    partial void OnBTActionServiceIdChanged();
    partial void OnMemoStatusIdChanging(int value);
    partial void OnMemoStatusIdChanged();
    partial void OnAssignValueChanging(string value);
    partial void OnAssignValueChanged();
    partial void OnOperateIdChanging(System.Nullable<int> value);
    partial void OnOperateIdChanged();
    partial void OnIsFirstChanging(System.Nullable<bool> value);
    partial void OnIsFirstChanged();
    #endregion
		
		public MSTIEvent()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IEventId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IEventId
		{
			get
			{
				return this._IEventId;
			}
			set
			{
				if ((this._IEventId != value))
				{
					this.OnIEventIdChanging(value);
					this.SendPropertyChanging();
					this._IEventId = value;
					this.SendPropertyChanged("IEventId");
					this.OnIEventIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicId", DbType="Int NOT NULL")]
		public int LogicId
		{
			get
			{
				return this._LogicId;
			}
			set
			{
				if ((this._LogicId != value))
				{
					this.OnLogicIdChanging(value);
					this.SendPropertyChanging();
					this._LogicId = value;
					this.SendPropertyChanged("LogicId");
					this.OnLogicIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlKey", DbType="Int")]
		public System.Nullable<int> ControlKey
		{
			get
			{
				return this._ControlKey;
			}
			set
			{
				if ((this._ControlKey != value))
				{
					this.OnControlKeyChanging(value);
					this.SendPropertyChanging();
					this._ControlKey = value;
					this.SendPropertyChanged("ControlKey");
					this.OnControlKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoBTId", DbType="Int")]
		public System.Nullable<int> MemoBTId
		{
			get
			{
				return this._MemoBTId;
			}
			set
			{
				if ((this._MemoBTId != value))
				{
					this.OnMemoBTIdChanging(value);
					this.SendPropertyChanging();
					this._MemoBTId = value;
					this.SendPropertyChanged("MemoBTId");
					this.OnMemoBTIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BTActionServiceId", DbType="Int NOT NULL")]
		public int BTActionServiceId
		{
			get
			{
				return this._BTActionServiceId;
			}
			set
			{
				if ((this._BTActionServiceId != value))
				{
					this.OnBTActionServiceIdChanging(value);
					this.SendPropertyChanging();
					this._BTActionServiceId = value;
					this.SendPropertyChanged("BTActionServiceId");
					this.OnBTActionServiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoStatusId", DbType="Int NOT NULL")]
		public int MemoStatusId
		{
			get
			{
				return this._MemoStatusId;
			}
			set
			{
				if ((this._MemoStatusId != value))
				{
					this.OnMemoStatusIdChanging(value);
					this.SendPropertyChanging();
					this._MemoStatusId = value;
					this.SendPropertyChanged("MemoStatusId");
					this.OnMemoStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignValue", DbType="NVarChar(100)")]
		public string AssignValue
		{
			get
			{
				return this._AssignValue;
			}
			set
			{
				if ((this._AssignValue != value))
				{
					this.OnAssignValueChanging(value);
					this.SendPropertyChanging();
					this._AssignValue = value;
					this.SendPropertyChanged("AssignValue");
					this.OnAssignValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperateId", DbType="Int")]
		public System.Nullable<int> OperateId
		{
			get
			{
				return this._OperateId;
			}
			set
			{
				if ((this._OperateId != value))
				{
					this.OnOperateIdChanging(value);
					this.SendPropertyChanging();
					this._OperateId = value;
					this.SendPropertyChanged("OperateId");
					this.OnOperateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFirst", DbType="Bit")]
		public System.Nullable<bool> IsFirst
		{
			get
			{
				return this._IsFirst;
			}
			set
			{
				if ((this._IsFirst != value))
				{
					this.OnIsFirstChanging(value);
					this.SendPropertyChanging();
					this._IsFirst = value;
					this.SendPropertyChanged("IsFirst");
					this.OnIsFirstChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTILogicMapField")]
	public partial class MSTILogicMapField : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogicIMapId;
		
		private int _LogicId;
		
		private string _Head;
		
		private int _ControlKey;
		
		private int _IMapTypeId;
		
		private bool _IsReturn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogicIMapIdChanging(int value);
    partial void OnLogicIMapIdChanged();
    partial void OnLogicIdChanging(int value);
    partial void OnLogicIdChanged();
    partial void OnHeadChanging(string value);
    partial void OnHeadChanged();
    partial void OnControlKeyChanging(int value);
    partial void OnControlKeyChanged();
    partial void OnIMapTypeIdChanging(int value);
    partial void OnIMapTypeIdChanged();
    partial void OnIsReturnChanging(bool value);
    partial void OnIsReturnChanged();
    #endregion
		
		public MSTILogicMapField()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicIMapId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LogicIMapId
		{
			get
			{
				return this._LogicIMapId;
			}
			set
			{
				if ((this._LogicIMapId != value))
				{
					this.OnLogicIMapIdChanging(value);
					this.SendPropertyChanging();
					this._LogicIMapId = value;
					this.SendPropertyChanged("LogicIMapId");
					this.OnLogicIMapIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicId", DbType="Int NOT NULL")]
		public int LogicId
		{
			get
			{
				return this._LogicId;
			}
			set
			{
				if ((this._LogicId != value))
				{
					this.OnLogicIdChanging(value);
					this.SendPropertyChanging();
					this._LogicId = value;
					this.SendPropertyChanged("LogicId");
					this.OnLogicIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Head", DbType="NVarChar(100)")]
		public string Head
		{
			get
			{
				return this._Head;
			}
			set
			{
				if ((this._Head != value))
				{
					this.OnHeadChanging(value);
					this.SendPropertyChanging();
					this._Head = value;
					this.SendPropertyChanged("Head");
					this.OnHeadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlKey", DbType="Int NOT NULL")]
		public int ControlKey
		{
			get
			{
				return this._ControlKey;
			}
			set
			{
				if ((this._ControlKey != value))
				{
					this.OnControlKeyChanging(value);
					this.SendPropertyChanging();
					this._ControlKey = value;
					this.SendPropertyChanged("ControlKey");
					this.OnControlKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMapTypeId", DbType="Int NOT NULL")]
		public int IMapTypeId
		{
			get
			{
				return this._IMapTypeId;
			}
			set
			{
				if ((this._IMapTypeId != value))
				{
					this.OnIMapTypeIdChanging(value);
					this.SendPropertyChanging();
					this._IMapTypeId = value;
					this.SendPropertyChanged("IMapTypeId");
					this.OnIMapTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReturn", DbType="Bit NOT NULL")]
		public bool IsReturn
		{
			get
			{
				return this._IsReturn;
			}
			set
			{
				if ((this._IsReturn != value))
				{
					this.OnIsReturnChanging(value);
					this.SendPropertyChanging();
					this._IsReturn = value;
					this.SendPropertyChanged("IsReturn");
					this.OnIsReturnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTIMapItem")]
	public partial class MSTIMapItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MapItemId;
		
		private int _LogicIMapId;
		
		private string _KeyField;
		
		private int _IMapTypeId;
		
		private int _ControlKey;
		
		private string _AssignValue;
		
		private bool _IsInformation;
		
		private System.Nullable<int> _InfoId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMapItemIdChanging(int value);
    partial void OnMapItemIdChanged();
    partial void OnLogicIMapIdChanging(int value);
    partial void OnLogicIMapIdChanged();
    partial void OnKeyFieldChanging(string value);
    partial void OnKeyFieldChanged();
    partial void OnIMapTypeIdChanging(int value);
    partial void OnIMapTypeIdChanged();
    partial void OnControlKeyChanging(int value);
    partial void OnControlKeyChanged();
    partial void OnAssignValueChanging(string value);
    partial void OnAssignValueChanged();
    partial void OnIsInformationChanging(bool value);
    partial void OnIsInformationChanged();
    partial void OnInfoIdChanging(System.Nullable<int> value);
    partial void OnInfoIdChanged();
    #endregion
		
		public MSTIMapItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MapItemId
		{
			get
			{
				return this._MapItemId;
			}
			set
			{
				if ((this._MapItemId != value))
				{
					this.OnMapItemIdChanging(value);
					this.SendPropertyChanging();
					this._MapItemId = value;
					this.SendPropertyChanged("MapItemId");
					this.OnMapItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicIMapId", DbType="Int NOT NULL")]
		public int LogicIMapId
		{
			get
			{
				return this._LogicIMapId;
			}
			set
			{
				if ((this._LogicIMapId != value))
				{
					this.OnLogicIMapIdChanging(value);
					this.SendPropertyChanging();
					this._LogicIMapId = value;
					this.SendPropertyChanged("LogicIMapId");
					this.OnLogicIMapIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyField", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string KeyField
		{
			get
			{
				return this._KeyField;
			}
			set
			{
				if ((this._KeyField != value))
				{
					this.OnKeyFieldChanging(value);
					this.SendPropertyChanging();
					this._KeyField = value;
					this.SendPropertyChanged("KeyField");
					this.OnKeyFieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMapTypeId", DbType="Int NOT NULL")]
		public int IMapTypeId
		{
			get
			{
				return this._IMapTypeId;
			}
			set
			{
				if ((this._IMapTypeId != value))
				{
					this.OnIMapTypeIdChanging(value);
					this.SendPropertyChanging();
					this._IMapTypeId = value;
					this.SendPropertyChanged("IMapTypeId");
					this.OnIMapTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlKey", DbType="Int NOT NULL")]
		public int ControlKey
		{
			get
			{
				return this._ControlKey;
			}
			set
			{
				if ((this._ControlKey != value))
				{
					this.OnControlKeyChanging(value);
					this.SendPropertyChanging();
					this._ControlKey = value;
					this.SendPropertyChanged("ControlKey");
					this.OnControlKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignValue", DbType="NVarChar(100)")]
		public string AssignValue
		{
			get
			{
				return this._AssignValue;
			}
			set
			{
				if ((this._AssignValue != value))
				{
					this.OnAssignValueChanging(value);
					this.SendPropertyChanging();
					this._AssignValue = value;
					this.SendPropertyChanged("AssignValue");
					this.OnAssignValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInformation", DbType="Bit NOT NULL")]
		public bool IsInformation
		{
			get
			{
				return this._IsInformation;
			}
			set
			{
				if ((this._IsInformation != value))
				{
					this.OnIsInformationChanging(value);
					this.SendPropertyChanging();
					this._IsInformation = value;
					this.SendPropertyChanged("IsInformation");
					this.OnIsInformationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfoId", DbType="Int")]
		public System.Nullable<int> InfoId
		{
			get
			{
				return this._InfoId;
			}
			set
			{
				if ((this._InfoId != value))
				{
					this.OnInfoIdChanging(value);
					this.SendPropertyChanging();
					this._InfoId = value;
					this.SendPropertyChanged("InfoId");
					this.OnInfoIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTIReturnMessage")]
	public partial class MSTIReturnMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IAPIReturnId;
		
		private int _LogicId;
		
		private string _Head;
		
		private bool _IsSingle;
		
		private System.Nullable<int> _OperatorId;
		
		private System.Nullable<bool> _IsAllow;
		
		private string _MessageKey;
		
		private string _KeyField;
		
		private int _OperateId;
		
		private string _MatchValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIAPIReturnIdChanging(int value);
    partial void OnIAPIReturnIdChanged();
    partial void OnLogicIdChanging(int value);
    partial void OnLogicIdChanged();
    partial void OnHeadChanging(string value);
    partial void OnHeadChanged();
    partial void OnIsSingleChanging(bool value);
    partial void OnIsSingleChanged();
    partial void OnOperatorIdChanging(System.Nullable<int> value);
    partial void OnOperatorIdChanged();
    partial void OnIsAllowChanging(System.Nullable<bool> value);
    partial void OnIsAllowChanged();
    partial void OnMessageKeyChanging(string value);
    partial void OnMessageKeyChanged();
    partial void OnKeyFieldChanging(string value);
    partial void OnKeyFieldChanged();
    partial void OnOperateIdChanging(int value);
    partial void OnOperateIdChanged();
    partial void OnMatchValueChanging(string value);
    partial void OnMatchValueChanged();
    #endregion
		
		public MSTIReturnMessage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IAPIReturnId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IAPIReturnId
		{
			get
			{
				return this._IAPIReturnId;
			}
			set
			{
				if ((this._IAPIReturnId != value))
				{
					this.OnIAPIReturnIdChanging(value);
					this.SendPropertyChanging();
					this._IAPIReturnId = value;
					this.SendPropertyChanged("IAPIReturnId");
					this.OnIAPIReturnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicId", DbType="Int NOT NULL")]
		public int LogicId
		{
			get
			{
				return this._LogicId;
			}
			set
			{
				if ((this._LogicId != value))
				{
					this.OnLogicIdChanging(value);
					this.SendPropertyChanging();
					this._LogicId = value;
					this.SendPropertyChanged("LogicId");
					this.OnLogicIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Head", DbType="NVarChar(50)")]
		public string Head
		{
			get
			{
				return this._Head;
			}
			set
			{
				if ((this._Head != value))
				{
					this.OnHeadChanging(value);
					this.SendPropertyChanging();
					this._Head = value;
					this.SendPropertyChanged("Head");
					this.OnHeadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSingle", DbType="Bit NOT NULL")]
		public bool IsSingle
		{
			get
			{
				return this._IsSingle;
			}
			set
			{
				if ((this._IsSingle != value))
				{
					this.OnIsSingleChanging(value);
					this.SendPropertyChanging();
					this._IsSingle = value;
					this.SendPropertyChanged("IsSingle");
					this.OnIsSingleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatorId", DbType="Int")]
		public System.Nullable<int> OperatorId
		{
			get
			{
				return this._OperatorId;
			}
			set
			{
				if ((this._OperatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._OperatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAllow", DbType="Bit")]
		public System.Nullable<bool> IsAllow
		{
			get
			{
				return this._IsAllow;
			}
			set
			{
				if ((this._IsAllow != value))
				{
					this.OnIsAllowChanging(value);
					this.SendPropertyChanging();
					this._IsAllow = value;
					this.SendPropertyChanged("IsAllow");
					this.OnIsAllowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageKey", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MessageKey
		{
			get
			{
				return this._MessageKey;
			}
			set
			{
				if ((this._MessageKey != value))
				{
					this.OnMessageKeyChanging(value);
					this.SendPropertyChanging();
					this._MessageKey = value;
					this.SendPropertyChanged("MessageKey");
					this.OnMessageKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyField", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string KeyField
		{
			get
			{
				return this._KeyField;
			}
			set
			{
				if ((this._KeyField != value))
				{
					this.OnKeyFieldChanging(value);
					this.SendPropertyChanging();
					this._KeyField = value;
					this.SendPropertyChanged("KeyField");
					this.OnKeyFieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperateId", DbType="Int NOT NULL")]
		public int OperateId
		{
			get
			{
				return this._OperateId;
			}
			set
			{
				if ((this._OperateId != value))
				{
					this.OnOperateIdChanging(value);
					this.SendPropertyChanging();
					this._OperateId = value;
					this.SendPropertyChanged("OperateId");
					this.OnOperateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchValue", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MatchValue
		{
			get
			{
				return this._MatchValue;
			}
			set
			{
				if ((this._MatchValue != value))
				{
					this.OnMatchValueChanging(value);
					this.SendPropertyChanging();
					this._MatchValue = value;
					this.SendPropertyChanged("MatchValue");
					this.OnMatchValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTLineActionControl")]
	public partial class MSTLineActionControl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LineActionControlId;
		
		private int _TemLineId;
		
		private int _OperateId;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLineActionControlIdChanging(int value);
    partial void OnLineActionControlIdChanged();
    partial void OnTemLineIdChanging(int value);
    partial void OnTemLineIdChanged();
    partial void OnOperateIdChanging(int value);
    partial void OnOperateIdChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MSTLineActionControl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineActionControlId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LineActionControlId
		{
			get
			{
				return this._LineActionControlId;
			}
			set
			{
				if ((this._LineActionControlId != value))
				{
					this.OnLineActionControlIdChanging(value);
					this.SendPropertyChanging();
					this._LineActionControlId = value;
					this.SendPropertyChanged("LineActionControlId");
					this.OnLineActionControlIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemLineId", DbType="Int NOT NULL")]
		public int TemLineId
		{
			get
			{
				return this._TemLineId;
			}
			set
			{
				if ((this._TemLineId != value))
				{
					this.OnTemLineIdChanging(value);
					this.SendPropertyChanging();
					this._TemLineId = value;
					this.SendPropertyChanged("TemLineId");
					this.OnTemLineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperateId", DbType="Int NOT NULL")]
		public int OperateId
		{
			get
			{
				return this._OperateId;
			}
			set
			{
				if ((this._OperateId != value))
				{
					this.OnOperateIdChanging(value);
					this.SendPropertyChanging();
					this._OperateId = value;
					this.SendPropertyChanged("OperateId");
					this.OnOperateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTLineActionControlItem")]
	public partial class MSTLineActionControlItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _LineActionControlItemId;
		
		private int _ControlKey;
		
		private int _LineActionControlId;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLineActionControlItemIdChanging(long value);
    partial void OnLineActionControlItemIdChanged();
    partial void OnControlKeyChanging(int value);
    partial void OnControlKeyChanged();
    partial void OnLineActionControlIdChanging(int value);
    partial void OnLineActionControlIdChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MSTLineActionControlItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineActionControlItemId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long LineActionControlItemId
		{
			get
			{
				return this._LineActionControlItemId;
			}
			set
			{
				if ((this._LineActionControlItemId != value))
				{
					this.OnLineActionControlItemIdChanging(value);
					this.SendPropertyChanging();
					this._LineActionControlItemId = value;
					this.SendPropertyChanged("LineActionControlItemId");
					this.OnLineActionControlItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlKey", DbType="Int NOT NULL")]
		public int ControlKey
		{
			get
			{
				return this._ControlKey;
			}
			set
			{
				if ((this._ControlKey != value))
				{
					this.OnControlKeyChanging(value);
					this.SendPropertyChanging();
					this._ControlKey = value;
					this.SendPropertyChanged("ControlKey");
					this.OnControlKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineActionControlId", DbType="Int NOT NULL")]
		public int LineActionControlId
		{
			get
			{
				return this._LineActionControlId;
			}
			set
			{
				if ((this._LineActionControlId != value))
				{
					this.OnLineActionControlIdChanging(value);
					this.SendPropertyChanging();
					this._LineActionControlId = value;
					this.SendPropertyChanged("LineActionControlId");
					this.OnLineActionControlIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTLogicActionControl")]
	public partial class MSTLogicActionControl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogicActionControlId;
		
		private int _ControlKey;
		
		private int _LogicId;
		
		private System.Nullable<bool> _IsLoadToControl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogicActionControlIdChanging(int value);
    partial void OnLogicActionControlIdChanged();
    partial void OnControlKeyChanging(int value);
    partial void OnControlKeyChanged();
    partial void OnLogicIdChanging(int value);
    partial void OnLogicIdChanged();
    partial void OnIsLoadToControlChanging(System.Nullable<bool> value);
    partial void OnIsLoadToControlChanged();
    #endregion
		
		public MSTLogicActionControl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicActionControlId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LogicActionControlId
		{
			get
			{
				return this._LogicActionControlId;
			}
			set
			{
				if ((this._LogicActionControlId != value))
				{
					this.OnLogicActionControlIdChanging(value);
					this.SendPropertyChanging();
					this._LogicActionControlId = value;
					this.SendPropertyChanged("LogicActionControlId");
					this.OnLogicActionControlIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlKey", DbType="Int NOT NULL")]
		public int ControlKey
		{
			get
			{
				return this._ControlKey;
			}
			set
			{
				if ((this._ControlKey != value))
				{
					this.OnControlKeyChanging(value);
					this.SendPropertyChanging();
					this._ControlKey = value;
					this.SendPropertyChanged("ControlKey");
					this.OnControlKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicId", DbType="Int NOT NULL")]
		public int LogicId
		{
			get
			{
				return this._LogicId;
			}
			set
			{
				if ((this._LogicId != value))
				{
					this.OnLogicIdChanging(value);
					this.SendPropertyChanging();
					this._LogicId = value;
					this.SendPropertyChanged("LogicId");
					this.OnLogicIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLoadToControl", DbType="Bit")]
		public System.Nullable<bool> IsLoadToControl
		{
			get
			{
				return this._IsLoadToControl;
			}
			set
			{
				if ((this._IsLoadToControl != value))
				{
					this.OnIsLoadToControlChanging(value);
					this.SendPropertyChanging();
					this._IsLoadToControl = value;
					this.SendPropertyChanged("IsLoadToControl");
					this.OnIsLoadToControlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTLogicActionControlRole")]
	public partial class MSTLogicActionControlRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogicActionRoleId;
		
		private int _RoleId;
		
		private int _LogicId;
		
		private System.Nullable<int> _OperateId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogicActionRoleIdChanging(int value);
    partial void OnLogicActionRoleIdChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnLogicIdChanging(int value);
    partial void OnLogicIdChanged();
    partial void OnOperateIdChanging(System.Nullable<int> value);
    partial void OnOperateIdChanged();
    #endregion
		
		public MSTLogicActionControlRole()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicActionRoleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LogicActionRoleId
		{
			get
			{
				return this._LogicActionRoleId;
			}
			set
			{
				if ((this._LogicActionRoleId != value))
				{
					this.OnLogicActionRoleIdChanging(value);
					this.SendPropertyChanging();
					this._LogicActionRoleId = value;
					this.SendPropertyChanged("LogicActionRoleId");
					this.OnLogicActionRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL")]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicId", DbType="Int NOT NULL")]
		public int LogicId
		{
			get
			{
				return this._LogicId;
			}
			set
			{
				if ((this._LogicId != value))
				{
					this.OnLogicIdChanging(value);
					this.SendPropertyChanging();
					this._LogicId = value;
					this.SendPropertyChanged("LogicId");
					this.OnLogicIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperateId", DbType="Int")]
		public System.Nullable<int> OperateId
		{
			get
			{
				return this._OperateId;
			}
			set
			{
				if ((this._OperateId != value))
				{
					this.OnOperateIdChanging(value);
					this.SendPropertyChanging();
					this._OperateId = value;
					this.SendPropertyChanged("OperateId");
					this.OnOperateIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTLogicActionServiceVisible")]
	public partial class MSTLogicActionServiceVisible : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ASVisibleId;
		
		private int _LogicId;
		
		private int _MemoStatusId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnASVisibleIdChanging(int value);
    partial void OnASVisibleIdChanged();
    partial void OnLogicIdChanging(int value);
    partial void OnLogicIdChanged();
    partial void OnMemoStatusIdChanging(int value);
    partial void OnMemoStatusIdChanged();
    #endregion
		
		public MSTLogicActionServiceVisible()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ASVisibleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ASVisibleId
		{
			get
			{
				return this._ASVisibleId;
			}
			set
			{
				if ((this._ASVisibleId != value))
				{
					this.OnASVisibleIdChanging(value);
					this.SendPropertyChanging();
					this._ASVisibleId = value;
					this.SendPropertyChanged("ASVisibleId");
					this.OnASVisibleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicId", DbType="Int NOT NULL")]
		public int LogicId
		{
			get
			{
				return this._LogicId;
			}
			set
			{
				if ((this._LogicId != value))
				{
					this.OnLogicIdChanging(value);
					this.SendPropertyChanging();
					this._LogicId = value;
					this.SendPropertyChanged("LogicId");
					this.OnLogicIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoStatusId", DbType="Int NOT NULL")]
		public int MemoStatusId
		{
			get
			{
				return this._MemoStatusId;
			}
			set
			{
				if ((this._MemoStatusId != value))
				{
					this.OnMemoStatusIdChanging(value);
					this.SendPropertyChanging();
					this._MemoStatusId = value;
					this.SendPropertyChanged("MemoStatusId");
					this.OnMemoStatusIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTLogicButtonActionService")]
	public partial class MSTLogicButtonActionService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogicBTActionId;
		
		private int _LogicId;
		
		private int _BTActionServiceId;
		
		private int _ControlKey;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogicBTActionIdChanging(int value);
    partial void OnLogicBTActionIdChanged();
    partial void OnLogicIdChanging(int value);
    partial void OnLogicIdChanged();
    partial void OnBTActionServiceIdChanging(int value);
    partial void OnBTActionServiceIdChanged();
    partial void OnControlKeyChanging(int value);
    partial void OnControlKeyChanged();
    #endregion
		
		public MSTLogicButtonActionService()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicBTActionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LogicBTActionId
		{
			get
			{
				return this._LogicBTActionId;
			}
			set
			{
				if ((this._LogicBTActionId != value))
				{
					this.OnLogicBTActionIdChanging(value);
					this.SendPropertyChanging();
					this._LogicBTActionId = value;
					this.SendPropertyChanged("LogicBTActionId");
					this.OnLogicBTActionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicId", DbType="Int NOT NULL")]
		public int LogicId
		{
			get
			{
				return this._LogicId;
			}
			set
			{
				if ((this._LogicId != value))
				{
					this.OnLogicIdChanging(value);
					this.SendPropertyChanging();
					this._LogicId = value;
					this.SendPropertyChanged("LogicId");
					this.OnLogicIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BTActionServiceId", DbType="Int NOT NULL")]
		public int BTActionServiceId
		{
			get
			{
				return this._BTActionServiceId;
			}
			set
			{
				if ((this._BTActionServiceId != value))
				{
					this.OnBTActionServiceIdChanging(value);
					this.SendPropertyChanging();
					this._BTActionServiceId = value;
					this.SendPropertyChanged("BTActionServiceId");
					this.OnBTActionServiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlKey", DbType="Int NOT NULL")]
		public int ControlKey
		{
			get
			{
				return this._ControlKey;
			}
			set
			{
				if ((this._ControlKey != value))
				{
					this.OnControlKeyChanging(value);
					this.SendPropertyChanging();
					this._ControlKey = value;
					this.SendPropertyChanged("ControlKey");
					this.OnControlKeyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTLogicButtonMemoStatus")]
	public partial class MSTLogicButtonMemoStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogicBTStatusId;
		
		private int _LogicIId;
		
		private int _MemoStatusId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogicBTStatusIdChanging(int value);
    partial void OnLogicBTStatusIdChanged();
    partial void OnLogicIIdChanging(int value);
    partial void OnLogicIIdChanged();
    partial void OnMemoStatusIdChanging(int value);
    partial void OnMemoStatusIdChanged();
    #endregion
		
		public MSTLogicButtonMemoStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicBTStatusId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LogicBTStatusId
		{
			get
			{
				return this._LogicBTStatusId;
			}
			set
			{
				if ((this._LogicBTStatusId != value))
				{
					this.OnLogicBTStatusIdChanging(value);
					this.SendPropertyChanging();
					this._LogicBTStatusId = value;
					this.SendPropertyChanged("LogicBTStatusId");
					this.OnLogicBTStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicIId", DbType="Int NOT NULL")]
		public int LogicIId
		{
			get
			{
				return this._LogicIId;
			}
			set
			{
				if ((this._LogicIId != value))
				{
					this.OnLogicIIdChanging(value);
					this.SendPropertyChanging();
					this._LogicIId = value;
					this.SendPropertyChanged("LogicIId");
					this.OnLogicIIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoStatusId", DbType="Int NOT NULL")]
		public int MemoStatusId
		{
			get
			{
				return this._MemoStatusId;
			}
			set
			{
				if ((this._MemoStatusId != value))
				{
					this.OnMemoStatusIdChanging(value);
					this.SendPropertyChanging();
					this._MemoStatusId = value;
					this.SendPropertyChanged("MemoStatusId");
					this.OnMemoStatusIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTLogicConditionGroup")]
	public partial class MSTLogicConditionGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogicConditionGroupId;
		
		private int _LogicId;
		
		private string _LogicCondition;
		
		private System.Nullable<int> _ControlKey;
		
		private string _Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogicConditionGroupIdChanging(int value);
    partial void OnLogicConditionGroupIdChanged();
    partial void OnLogicIdChanging(int value);
    partial void OnLogicIdChanged();
    partial void OnLogicConditionChanging(string value);
    partial void OnLogicConditionChanged();
    partial void OnControlKeyChanging(System.Nullable<int> value);
    partial void OnControlKeyChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public MSTLogicConditionGroup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicConditionGroupId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LogicConditionGroupId
		{
			get
			{
				return this._LogicConditionGroupId;
			}
			set
			{
				if ((this._LogicConditionGroupId != value))
				{
					this.OnLogicConditionGroupIdChanging(value);
					this.SendPropertyChanging();
					this._LogicConditionGroupId = value;
					this.SendPropertyChanged("LogicConditionGroupId");
					this.OnLogicConditionGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicId", DbType="Int NOT NULL")]
		public int LogicId
		{
			get
			{
				return this._LogicId;
			}
			set
			{
				if ((this._LogicId != value))
				{
					this.OnLogicIdChanging(value);
					this.SendPropertyChanging();
					this._LogicId = value;
					this.SendPropertyChanged("LogicId");
					this.OnLogicIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicCondition", DbType="NVarChar(100)")]
		public string LogicCondition
		{
			get
			{
				return this._LogicCondition;
			}
			set
			{
				if ((this._LogicCondition != value))
				{
					this.OnLogicConditionChanging(value);
					this.SendPropertyChanging();
					this._LogicCondition = value;
					this.SendPropertyChanged("LogicCondition");
					this.OnLogicConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlKey", DbType="Int")]
		public System.Nullable<int> ControlKey
		{
			get
			{
				return this._ControlKey;
			}
			set
			{
				if ((this._ControlKey != value))
				{
					this.OnControlKeyChanging(value);
					this.SendPropertyChanging();
					this._ControlKey = value;
					this.SendPropertyChanged("ControlKey");
					this.OnControlKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(255)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTLogicConditionItem")]
	public partial class MSTLogicConditionItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogicConditionItemId;
		
		private int _LogicId;
		
		private string _ConditionName;
		
		private System.Nullable<int> _ControlKey;
		
		private string _DBField;
		
		private System.Nullable<int> _LogicalOperateId;
		
		private System.Nullable<int> _ComparisonOperateId;
		
		private string _Value;
		
		private System.Nullable<int> _InfoId;
		
		private System.Nullable<int> _Seq;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _NextRowRelation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogicConditionItemIdChanging(int value);
    partial void OnLogicConditionItemIdChanged();
    partial void OnLogicIdChanging(int value);
    partial void OnLogicIdChanged();
    partial void OnConditionNameChanging(string value);
    partial void OnConditionNameChanged();
    partial void OnControlKeyChanging(System.Nullable<int> value);
    partial void OnControlKeyChanged();
    partial void OnDBFieldChanging(string value);
    partial void OnDBFieldChanged();
    partial void OnLogicalOperateIdChanging(System.Nullable<int> value);
    partial void OnLogicalOperateIdChanged();
    partial void OnComparisonOperateIdChanging(System.Nullable<int> value);
    partial void OnComparisonOperateIdChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnInfoIdChanging(System.Nullable<int> value);
    partial void OnInfoIdChanged();
    partial void OnSeqChanging(System.Nullable<int> value);
    partial void OnSeqChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnNextRowRelationChanging(string value);
    partial void OnNextRowRelationChanged();
    #endregion
		
		public MSTLogicConditionItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicConditionItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LogicConditionItemId
		{
			get
			{
				return this._LogicConditionItemId;
			}
			set
			{
				if ((this._LogicConditionItemId != value))
				{
					this.OnLogicConditionItemIdChanging(value);
					this.SendPropertyChanging();
					this._LogicConditionItemId = value;
					this.SendPropertyChanged("LogicConditionItemId");
					this.OnLogicConditionItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicId", DbType="Int NOT NULL")]
		public int LogicId
		{
			get
			{
				return this._LogicId;
			}
			set
			{
				if ((this._LogicId != value))
				{
					this.OnLogicIdChanging(value);
					this.SendPropertyChanging();
					this._LogicId = value;
					this.SendPropertyChanged("LogicId");
					this.OnLogicIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionName", DbType="NVarChar(30)")]
		public string ConditionName
		{
			get
			{
				return this._ConditionName;
			}
			set
			{
				if ((this._ConditionName != value))
				{
					this.OnConditionNameChanging(value);
					this.SendPropertyChanging();
					this._ConditionName = value;
					this.SendPropertyChanged("ConditionName");
					this.OnConditionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlKey", DbType="Int")]
		public System.Nullable<int> ControlKey
		{
			get
			{
				return this._ControlKey;
			}
			set
			{
				if ((this._ControlKey != value))
				{
					this.OnControlKeyChanging(value);
					this.SendPropertyChanging();
					this._ControlKey = value;
					this.SendPropertyChanged("ControlKey");
					this.OnControlKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DBField", DbType="NVarChar(30)")]
		public string DBField
		{
			get
			{
				return this._DBField;
			}
			set
			{
				if ((this._DBField != value))
				{
					this.OnDBFieldChanging(value);
					this.SendPropertyChanging();
					this._DBField = value;
					this.SendPropertyChanged("DBField");
					this.OnDBFieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicalOperateId", DbType="Int")]
		public System.Nullable<int> LogicalOperateId
		{
			get
			{
				return this._LogicalOperateId;
			}
			set
			{
				if ((this._LogicalOperateId != value))
				{
					this.OnLogicalOperateIdChanging(value);
					this.SendPropertyChanging();
					this._LogicalOperateId = value;
					this.SendPropertyChanged("LogicalOperateId");
					this.OnLogicalOperateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComparisonOperateId", DbType="Int")]
		public System.Nullable<int> ComparisonOperateId
		{
			get
			{
				return this._ComparisonOperateId;
			}
			set
			{
				if ((this._ComparisonOperateId != value))
				{
					this.OnComparisonOperateIdChanging(value);
					this.SendPropertyChanging();
					this._ComparisonOperateId = value;
					this.SendPropertyChanged("ComparisonOperateId");
					this.OnComparisonOperateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(300)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfoId", DbType="Int")]
		public System.Nullable<int> InfoId
		{
			get
			{
				return this._InfoId;
			}
			set
			{
				if ((this._InfoId != value))
				{
					this.OnInfoIdChanging(value);
					this.SendPropertyChanging();
					this._InfoId = value;
					this.SendPropertyChanged("InfoId");
					this.OnInfoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seq", DbType="Int")]
		public System.Nullable<int> Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextRowRelation", DbType="NVarChar(10)")]
		public string NextRowRelation
		{
			get
			{
				return this._NextRowRelation;
			}
			set
			{
				if ((this._NextRowRelation != value))
				{
					this.OnNextRowRelationChanging(value);
					this.SendPropertyChanging();
					this._NextRowRelation = value;
					this.SendPropertyChanged("NextRowRelation");
					this.OnNextRowRelationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTLogicOrderBy")]
	public partial class MSTLogicOrderBy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogicOrderById;
		
		private int _LogicId;
		
		private string _FieldName;
		
		private System.Nullable<System.Guid> _IsASC;
		
		private System.Nullable<int> _Seq;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogicOrderByIdChanging(int value);
    partial void OnLogicOrderByIdChanged();
    partial void OnLogicIdChanging(int value);
    partial void OnLogicIdChanged();
    partial void OnFieldNameChanging(string value);
    partial void OnFieldNameChanged();
    partial void OnIsASCChanging(System.Nullable<System.Guid> value);
    partial void OnIsASCChanged();
    partial void OnSeqChanging(System.Nullable<int> value);
    partial void OnSeqChanged();
    #endregion
		
		public MSTLogicOrderBy()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicOrderById", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LogicOrderById
		{
			get
			{
				return this._LogicOrderById;
			}
			set
			{
				if ((this._LogicOrderById != value))
				{
					this.OnLogicOrderByIdChanging(value);
					this.SendPropertyChanging();
					this._LogicOrderById = value;
					this.SendPropertyChanged("LogicOrderById");
					this.OnLogicOrderByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicId", DbType="Int NOT NULL")]
		public int LogicId
		{
			get
			{
				return this._LogicId;
			}
			set
			{
				if ((this._LogicId != value))
				{
					this.OnLogicIdChanging(value);
					this.SendPropertyChanging();
					this._LogicId = value;
					this.SendPropertyChanged("LogicId");
					this.OnLogicIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FieldName
		{
			get
			{
				return this._FieldName;
			}
			set
			{
				if ((this._FieldName != value))
				{
					this.OnFieldNameChanging(value);
					this.SendPropertyChanging();
					this._FieldName = value;
					this.SendPropertyChanged("FieldName");
					this.OnFieldNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsASC", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IsASC
		{
			get
			{
				return this._IsASC;
			}
			set
			{
				if ((this._IsASC != value))
				{
					this.OnIsASCChanging(value);
					this.SendPropertyChanging();
					this._IsASC = value;
					this.SendPropertyChanged("IsASC");
					this.OnIsASCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seq", DbType="Int")]
		public System.Nullable<int> Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTLogicRelatedField")]
	public partial class MSTLogicRelatedField : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogicRelatedFieldId;
		
		private int _LogicId;
		
		private System.Nullable<int> _ControlKey;
		
		private string _FieldName;
		
		private System.Nullable<bool> _IsValue;
		
		private System.Nullable<int> _Seq;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogicRelatedFieldIdChanging(int value);
    partial void OnLogicRelatedFieldIdChanged();
    partial void OnLogicIdChanging(int value);
    partial void OnLogicIdChanged();
    partial void OnControlKeyChanging(System.Nullable<int> value);
    partial void OnControlKeyChanged();
    partial void OnFieldNameChanging(string value);
    partial void OnFieldNameChanged();
    partial void OnIsValueChanging(System.Nullable<bool> value);
    partial void OnIsValueChanged();
    partial void OnSeqChanging(System.Nullable<int> value);
    partial void OnSeqChanged();
    #endregion
		
		public MSTLogicRelatedField()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicRelatedFieldId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LogicRelatedFieldId
		{
			get
			{
				return this._LogicRelatedFieldId;
			}
			set
			{
				if ((this._LogicRelatedFieldId != value))
				{
					this.OnLogicRelatedFieldIdChanging(value);
					this.SendPropertyChanging();
					this._LogicRelatedFieldId = value;
					this.SendPropertyChanged("LogicRelatedFieldId");
					this.OnLogicRelatedFieldIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicId", DbType="Int NOT NULL")]
		public int LogicId
		{
			get
			{
				return this._LogicId;
			}
			set
			{
				if ((this._LogicId != value))
				{
					this.OnLogicIdChanging(value);
					this.SendPropertyChanging();
					this._LogicId = value;
					this.SendPropertyChanged("LogicId");
					this.OnLogicIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlKey", DbType="Int")]
		public System.Nullable<int> ControlKey
		{
			get
			{
				return this._ControlKey;
			}
			set
			{
				if ((this._ControlKey != value))
				{
					this.OnControlKeyChanging(value);
					this.SendPropertyChanging();
					this._ControlKey = value;
					this.SendPropertyChanged("ControlKey");
					this.OnControlKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FieldName
		{
			get
			{
				return this._FieldName;
			}
			set
			{
				if ((this._FieldName != value))
				{
					this.OnFieldNameChanging(value);
					this.SendPropertyChanging();
					this._FieldName = value;
					this.SendPropertyChanged("FieldName");
					this.OnFieldNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsValue", DbType="Bit")]
		public System.Nullable<bool> IsValue
		{
			get
			{
				return this._IsValue;
			}
			set
			{
				if ((this._IsValue != value))
				{
					this.OnIsValueChanging(value);
					this.SendPropertyChanging();
					this._IsValue = value;
					this.SendPropertyChanged("IsValue");
					this.OnIsValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seq", DbType="Int")]
		public System.Nullable<int> Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTLogicRoleAction")]
	public partial class MSTLogicRoleAction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogicRoleActionId;
		
		private int _LogicId;
		
		private int _RoleId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogicRoleActionIdChanging(int value);
    partial void OnLogicRoleActionIdChanged();
    partial void OnLogicIdChanging(int value);
    partial void OnLogicIdChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    #endregion
		
		public MSTLogicRoleAction()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicRoleActionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LogicRoleActionId
		{
			get
			{
				return this._LogicRoleActionId;
			}
			set
			{
				if ((this._LogicRoleActionId != value))
				{
					this.OnLogicRoleActionIdChanging(value);
					this.SendPropertyChanging();
					this._LogicRoleActionId = value;
					this.SendPropertyChanged("LogicRoleActionId");
					this.OnLogicRoleActionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicId", DbType="Int NOT NULL")]
		public int LogicId
		{
			get
			{
				return this._LogicId;
			}
			set
			{
				if ((this._LogicId != value))
				{
					this.OnLogicIdChanging(value);
					this.SendPropertyChanging();
					this._LogicId = value;
					this.SendPropertyChanged("LogicId");
					this.OnLogicIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL")]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTMasterData")]
	public partial class MSTMasterData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MasterId;
		
		private string _MasterType;
		
		private string _Value1;
		
		private string _Value2;
		
		private string _Value3;
		
		private string _Value4;
		
		private string _Value5;
		
		private string _Desciption;
		
		private System.Nullable<int> _Seq;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMasterIdChanging(int value);
    partial void OnMasterIdChanged();
    partial void OnMasterTypeChanging(string value);
    partial void OnMasterTypeChanged();
    partial void OnValue1Changing(string value);
    partial void OnValue1Changed();
    partial void OnValue2Changing(string value);
    partial void OnValue2Changed();
    partial void OnValue3Changing(string value);
    partial void OnValue3Changed();
    partial void OnValue4Changing(string value);
    partial void OnValue4Changed();
    partial void OnValue5Changing(string value);
    partial void OnValue5Changed();
    partial void OnDesciptionChanging(string value);
    partial void OnDesciptionChanged();
    partial void OnSeqChanging(System.Nullable<int> value);
    partial void OnSeqChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MSTMasterData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MasterId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MasterId
		{
			get
			{
				return this._MasterId;
			}
			set
			{
				if ((this._MasterId != value))
				{
					this.OnMasterIdChanging(value);
					this.SendPropertyChanging();
					this._MasterId = value;
					this.SendPropertyChanged("MasterId");
					this.OnMasterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MasterType", DbType="NVarChar(40)")]
		public string MasterType
		{
			get
			{
				return this._MasterType;
			}
			set
			{
				if ((this._MasterType != value))
				{
					this.OnMasterTypeChanging(value);
					this.SendPropertyChanging();
					this._MasterType = value;
					this.SendPropertyChanged("MasterType");
					this.OnMasterTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value1", DbType="NVarChar(MAX)")]
		public string Value1
		{
			get
			{
				return this._Value1;
			}
			set
			{
				if ((this._Value1 != value))
				{
					this.OnValue1Changing(value);
					this.SendPropertyChanging();
					this._Value1 = value;
					this.SendPropertyChanged("Value1");
					this.OnValue1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value2", DbType="NVarChar(MAX)")]
		public string Value2
		{
			get
			{
				return this._Value2;
			}
			set
			{
				if ((this._Value2 != value))
				{
					this.OnValue2Changing(value);
					this.SendPropertyChanging();
					this._Value2 = value;
					this.SendPropertyChanged("Value2");
					this.OnValue2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value3", DbType="NVarChar(MAX)")]
		public string Value3
		{
			get
			{
				return this._Value3;
			}
			set
			{
				if ((this._Value3 != value))
				{
					this.OnValue3Changing(value);
					this.SendPropertyChanging();
					this._Value3 = value;
					this.SendPropertyChanged("Value3");
					this.OnValue3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value4", DbType="NVarChar(MAX)")]
		public string Value4
		{
			get
			{
				return this._Value4;
			}
			set
			{
				if ((this._Value4 != value))
				{
					this.OnValue4Changing(value);
					this.SendPropertyChanging();
					this._Value4 = value;
					this.SendPropertyChanged("Value4");
					this.OnValue4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value5", DbType="NVarChar(MAX)")]
		public string Value5
		{
			get
			{
				return this._Value5;
			}
			set
			{
				if ((this._Value5 != value))
				{
					this.OnValue5Changing(value);
					this.SendPropertyChanging();
					this._Value5 = value;
					this.SendPropertyChanged("Value5");
					this.OnValue5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desciption", DbType="NVarChar(MAX)")]
		public string Desciption
		{
			get
			{
				return this._Desciption;
			}
			set
			{
				if ((this._Desciption != value))
				{
					this.OnDesciptionChanging(value);
					this.SendPropertyChanging();
					this._Desciption = value;
					this.SendPropertyChanged("Desciption");
					this.OnDesciptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seq", DbType="Int")]
		public System.Nullable<int> Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTMemoButton")]
	public partial class MSTMemoButton : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MemoBTId;
		
		private string _CommandName;
		
		private System.Nullable<int> _Seq;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMemoBTIdChanging(int value);
    partial void OnMemoBTIdChanged();
    partial void OnCommandNameChanging(string value);
    partial void OnCommandNameChanged();
    partial void OnSeqChanging(System.Nullable<int> value);
    partial void OnSeqChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MSTMemoButton()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoBTId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MemoBTId
		{
			get
			{
				return this._MemoBTId;
			}
			set
			{
				if ((this._MemoBTId != value))
				{
					this.OnMemoBTIdChanging(value);
					this.SendPropertyChanging();
					this._MemoBTId = value;
					this.SendPropertyChanged("MemoBTId");
					this.OnMemoBTIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommandName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CommandName
		{
			get
			{
				return this._CommandName;
			}
			set
			{
				if ((this._CommandName != value))
				{
					this.OnCommandNameChanging(value);
					this.SendPropertyChanging();
					this._CommandName = value;
					this.SendPropertyChanged("CommandName");
					this.OnCommandNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seq", DbType="Int")]
		public System.Nullable<int> Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTMemoStatus")]
	public partial class MSTMemoStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MemoStatusId;
		
		private string _MemoStatusCode;
		
		private System.Nullable<int> _Seq;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMemoStatusIdChanging(int value);
    partial void OnMemoStatusIdChanged();
    partial void OnMemoStatusCodeChanging(string value);
    partial void OnMemoStatusCodeChanged();
    partial void OnSeqChanging(System.Nullable<int> value);
    partial void OnSeqChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MSTMemoStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoStatusId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MemoStatusId
		{
			get
			{
				return this._MemoStatusId;
			}
			set
			{
				if ((this._MemoStatusId != value))
				{
					this.OnMemoStatusIdChanging(value);
					this.SendPropertyChanging();
					this._MemoStatusId = value;
					this.SendPropertyChanged("MemoStatusId");
					this.OnMemoStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoStatusCode", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string MemoStatusCode
		{
			get
			{
				return this._MemoStatusCode;
			}
			set
			{
				if ((this._MemoStatusCode != value))
				{
					this.OnMemoStatusCodeChanging(value);
					this.SendPropertyChanging();
					this._MemoStatusCode = value;
					this.SendPropertyChanged("MemoStatusCode");
					this.OnMemoStatusCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seq", DbType="Int")]
		public System.Nullable<int> Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTMimeType")]
	public partial class MSTMimeType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MimeTypeId;
		
		private string _MimeType;
		
		private string _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMimeTypeIdChanging(int value);
    partial void OnMimeTypeIdChanged();
    partial void OnMimeTypeChanging(string value);
    partial void OnMimeTypeChanged();
    partial void OnExtensionChanging(string value);
    partial void OnExtensionChanged();
    #endregion
		
		public MSTMimeType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MimeTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MimeTypeId
		{
			get
			{
				return this._MimeTypeId;
			}
			set
			{
				if ((this._MimeTypeId != value))
				{
					this.OnMimeTypeIdChanging(value);
					this.SendPropertyChanging();
					this._MimeTypeId = value;
					this.SendPropertyChanged("MimeTypeId");
					this.OnMimeTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MimeType", DbType="NVarChar(500)")]
		public string MimeType
		{
			get
			{
				return this._MimeType;
			}
			set
			{
				if ((this._MimeType != value))
				{
					this.OnMimeTypeChanging(value);
					this.SendPropertyChanging();
					this._MimeType = value;
					this.SendPropertyChanged("MimeType");
					this.OnMimeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extension", DbType="NVarChar(50)")]
		public string Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					this.OnExtensionChanging(value);
					this.SendPropertyChanging();
					this._Extension = value;
					this.SendPropertyChanged("Extension");
					this.OnExtensionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTPDFDesignConfig")]
	public partial class MSTPDFDesignConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LayoutID;
		
		private int _TemplateId;
		
		private string _Orientation;
		
		private string _PageSize;
		
		private System.Nullable<int> _CustomWidth;
		
		private System.Nullable<int> _CustomHeight;
		
		private int _GridSize;
		
		private int _PL;
		
		private int _PR;
		
		private int _PT;
		
		private int _PB;
		
		private string _BackgroundColor;
		
		private string _BackgroundImageURL;
		
		private System.DateTime _CreatedDate;
		
		private int _CreatedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<bool> _IsActive;
		
		private EntitySet<MSTPDFDesignSection> _MSTPDFDesignSections;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLayoutIDChanging(int value);
    partial void OnLayoutIDChanged();
    partial void OnTemplateIdChanging(int value);
    partial void OnTemplateIdChanged();
    partial void OnOrientationChanging(string value);
    partial void OnOrientationChanged();
    partial void OnPageSizeChanging(string value);
    partial void OnPageSizeChanged();
    partial void OnCustomWidthChanging(System.Nullable<int> value);
    partial void OnCustomWidthChanged();
    partial void OnCustomHeightChanging(System.Nullable<int> value);
    partial void OnCustomHeightChanged();
    partial void OnGridSizeChanging(int value);
    partial void OnGridSizeChanged();
    partial void OnPLChanging(int value);
    partial void OnPLChanged();
    partial void OnPRChanging(int value);
    partial void OnPRChanged();
    partial void OnPTChanging(int value);
    partial void OnPTChanged();
    partial void OnPBChanging(int value);
    partial void OnPBChanged();
    partial void OnBackgroundColorChanging(string value);
    partial void OnBackgroundColorChanged();
    partial void OnBackgroundImageURLChanging(string value);
    partial void OnBackgroundImageURLChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public MSTPDFDesignConfig()
		{
			this._MSTPDFDesignSections = new EntitySet<MSTPDFDesignSection>(new Action<MSTPDFDesignSection>(this.attach_MSTPDFDesignSections), new Action<MSTPDFDesignSection>(this.detach_MSTPDFDesignSections));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LayoutID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LayoutID
		{
			get
			{
				return this._LayoutID;
			}
			set
			{
				if ((this._LayoutID != value))
				{
					this.OnLayoutIDChanging(value);
					this.SendPropertyChanging();
					this._LayoutID = value;
					this.SendPropertyChanged("LayoutID");
					this.OnLayoutIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateId", DbType="Int NOT NULL")]
		public int TemplateId
		{
			get
			{
				return this._TemplateId;
			}
			set
			{
				if ((this._TemplateId != value))
				{
					this.OnTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._TemplateId = value;
					this.SendPropertyChanged("TemplateId");
					this.OnTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Orientation", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Orientation
		{
			get
			{
				return this._Orientation;
			}
			set
			{
				if ((this._Orientation != value))
				{
					this.OnOrientationChanging(value);
					this.SendPropertyChanging();
					this._Orientation = value;
					this.SendPropertyChanged("Orientation");
					this.OnOrientationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSize", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string PageSize
		{
			get
			{
				return this._PageSize;
			}
			set
			{
				if ((this._PageSize != value))
				{
					this.OnPageSizeChanging(value);
					this.SendPropertyChanging();
					this._PageSize = value;
					this.SendPropertyChanged("PageSize");
					this.OnPageSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomWidth", DbType="Int")]
		public System.Nullable<int> CustomWidth
		{
			get
			{
				return this._CustomWidth;
			}
			set
			{
				if ((this._CustomWidth != value))
				{
					this.OnCustomWidthChanging(value);
					this.SendPropertyChanging();
					this._CustomWidth = value;
					this.SendPropertyChanged("CustomWidth");
					this.OnCustomWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomHeight", DbType="Int")]
		public System.Nullable<int> CustomHeight
		{
			get
			{
				return this._CustomHeight;
			}
			set
			{
				if ((this._CustomHeight != value))
				{
					this.OnCustomHeightChanging(value);
					this.SendPropertyChanging();
					this._CustomHeight = value;
					this.SendPropertyChanged("CustomHeight");
					this.OnCustomHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GridSize", DbType="Int NOT NULL")]
		public int GridSize
		{
			get
			{
				return this._GridSize;
			}
			set
			{
				if ((this._GridSize != value))
				{
					this.OnGridSizeChanging(value);
					this.SendPropertyChanging();
					this._GridSize = value;
					this.SendPropertyChanged("GridSize");
					this.OnGridSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PL", DbType="Int NOT NULL")]
		public int PL
		{
			get
			{
				return this._PL;
			}
			set
			{
				if ((this._PL != value))
				{
					this.OnPLChanging(value);
					this.SendPropertyChanging();
					this._PL = value;
					this.SendPropertyChanged("PL");
					this.OnPLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR", DbType="Int NOT NULL")]
		public int PR
		{
			get
			{
				return this._PR;
			}
			set
			{
				if ((this._PR != value))
				{
					this.OnPRChanging(value);
					this.SendPropertyChanging();
					this._PR = value;
					this.SendPropertyChanged("PR");
					this.OnPRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PT", DbType="Int NOT NULL")]
		public int PT
		{
			get
			{
				return this._PT;
			}
			set
			{
				if ((this._PT != value))
				{
					this.OnPTChanging(value);
					this.SendPropertyChanging();
					this._PT = value;
					this.SendPropertyChanged("PT");
					this.OnPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PB", DbType="Int NOT NULL")]
		public int PB
		{
			get
			{
				return this._PB;
			}
			set
			{
				if ((this._PB != value))
				{
					this.OnPBChanging(value);
					this.SendPropertyChanging();
					this._PB = value;
					this.SendPropertyChanged("PB");
					this.OnPBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackgroundColor", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string BackgroundColor
		{
			get
			{
				return this._BackgroundColor;
			}
			set
			{
				if ((this._BackgroundColor != value))
				{
					this.OnBackgroundColorChanging(value);
					this.SendPropertyChanging();
					this._BackgroundColor = value;
					this.SendPropertyChanged("BackgroundColor");
					this.OnBackgroundColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackgroundImageURL", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string BackgroundImageURL
		{
			get
			{
				return this._BackgroundImageURL;
			}
			set
			{
				if ((this._BackgroundImageURL != value))
				{
					this.OnBackgroundImageURLChanging(value);
					this.SendPropertyChanging();
					this._BackgroundImageURL = value;
					this.SendPropertyChanged("BackgroundImageURL");
					this.OnBackgroundImageURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MSTPDFDesignConfig_MSTPDFDesignSection", Storage="_MSTPDFDesignSections", ThisKey="LayoutID", OtherKey="LayoutID")]
		public EntitySet<MSTPDFDesignSection> MSTPDFDesignSections
		{
			get
			{
				return this._MSTPDFDesignSections;
			}
			set
			{
				this._MSTPDFDesignSections.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MSTPDFDesignSections(MSTPDFDesignSection entity)
		{
			this.SendPropertyChanging();
			entity.MSTPDFDesignConfig = this;
		}
		
		private void detach_MSTPDFDesignSections(MSTPDFDesignSection entity)
		{
			this.SendPropertyChanging();
			entity.MSTPDFDesignConfig = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTPDFDesignItem")]
	public partial class MSTPDFDesignItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemID;
		
		private int _SectionID;
		
		private System.Nullable<int> _ControlKey;
		
		private System.Nullable<int> _MemoInfro;
		
		private string _Type;
		
		private int _x;
		
		private int _y;
		
		private int _w;
		
		private int _h;
		
		private System.Nullable<int> _Rotate;
		
		private string _LinkURL;
		
		private string _Value;
		
		private string _Font;
		
		private System.Nullable<int> _FontSize;
		
		private bool _IsBold;
		
		private bool _IsItalic;
		
		private string _TextJustify;
		
		private string _TextAlign;
		
		private string _TextColor;
		
		private string _Underline;
		
		private int _Layer;
		
		private bool _Strikethrough;
		
		private System.DateTime _CreatedDate;
		
		private int _CreatedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnSectionIDChanging(int value);
    partial void OnSectionIDChanged();
    partial void OnControlKeyChanging(System.Nullable<int> value);
    partial void OnControlKeyChanged();
    partial void OnMemoInfroChanging(System.Nullable<int> value);
    partial void OnMemoInfroChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnxChanging(int value);
    partial void OnxChanged();
    partial void OnyChanging(int value);
    partial void OnyChanged();
    partial void OnwChanging(int value);
    partial void OnwChanged();
    partial void OnhChanging(int value);
    partial void OnhChanged();
    partial void OnRotateChanging(System.Nullable<int> value);
    partial void OnRotateChanged();
    partial void OnLinkURLChanging(string value);
    partial void OnLinkURLChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnFontChanging(string value);
    partial void OnFontChanged();
    partial void OnFontSizeChanging(System.Nullable<int> value);
    partial void OnFontSizeChanged();
    partial void OnIsBoldChanging(bool value);
    partial void OnIsBoldChanged();
    partial void OnIsItalicChanging(bool value);
    partial void OnIsItalicChanged();
    partial void OnTextJustifyChanging(string value);
    partial void OnTextJustifyChanged();
    partial void OnTextAlignChanging(string value);
    partial void OnTextAlignChanged();
    partial void OnTextColorChanging(string value);
    partial void OnTextColorChanged();
    partial void OnUnderlineChanging(string value);
    partial void OnUnderlineChanged();
    partial void OnLayerChanging(int value);
    partial void OnLayerChanged();
    partial void OnStrikethroughChanging(bool value);
    partial void OnStrikethroughChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    #endregion
		
		public MSTPDFDesignItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionID", DbType="Int NOT NULL")]
		public int SectionID
		{
			get
			{
				return this._SectionID;
			}
			set
			{
				if ((this._SectionID != value))
				{
					this.OnSectionIDChanging(value);
					this.SendPropertyChanging();
					this._SectionID = value;
					this.SendPropertyChanged("SectionID");
					this.OnSectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlKey", DbType="Int")]
		public System.Nullable<int> ControlKey
		{
			get
			{
				return this._ControlKey;
			}
			set
			{
				if ((this._ControlKey != value))
				{
					this.OnControlKeyChanging(value);
					this.SendPropertyChanging();
					this._ControlKey = value;
					this.SendPropertyChanged("ControlKey");
					this.OnControlKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoInfro", DbType="Int")]
		public System.Nullable<int> MemoInfro
		{
			get
			{
				return this._MemoInfro;
			}
			set
			{
				if ((this._MemoInfro != value))
				{
					this.OnMemoInfroChanging(value);
					this.SendPropertyChanging();
					this._MemoInfro = value;
					this.SendPropertyChanged("MemoInfro");
					this.OnMemoInfroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_x", DbType="Int NOT NULL")]
		public int x
		{
			get
			{
				return this._x;
			}
			set
			{
				if ((this._x != value))
				{
					this.OnxChanging(value);
					this.SendPropertyChanging();
					this._x = value;
					this.SendPropertyChanged("x");
					this.OnxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_y", DbType="Int NOT NULL")]
		public int y
		{
			get
			{
				return this._y;
			}
			set
			{
				if ((this._y != value))
				{
					this.OnyChanging(value);
					this.SendPropertyChanging();
					this._y = value;
					this.SendPropertyChanged("y");
					this.OnyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_w", DbType="Int NOT NULL")]
		public int w
		{
			get
			{
				return this._w;
			}
			set
			{
				if ((this._w != value))
				{
					this.OnwChanging(value);
					this.SendPropertyChanging();
					this._w = value;
					this.SendPropertyChanged("w");
					this.OnwChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_h", DbType="Int NOT NULL")]
		public int h
		{
			get
			{
				return this._h;
			}
			set
			{
				if ((this._h != value))
				{
					this.OnhChanging(value);
					this.SendPropertyChanging();
					this._h = value;
					this.SendPropertyChanged("h");
					this.OnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rotate", DbType="Int")]
		public System.Nullable<int> Rotate
		{
			get
			{
				return this._Rotate;
			}
			set
			{
				if ((this._Rotate != value))
				{
					this.OnRotateChanging(value);
					this.SendPropertyChanging();
					this._Rotate = value;
					this.SendPropertyChanged("Rotate");
					this.OnRotateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkURL", DbType="NVarChar(500)")]
		public string LinkURL
		{
			get
			{
				return this._LinkURL;
			}
			set
			{
				if ((this._LinkURL != value))
				{
					this.OnLinkURLChanging(value);
					this.SendPropertyChanging();
					this._LinkURL = value;
					this.SendPropertyChanged("LinkURL");
					this.OnLinkURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(500)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Font", DbType="NVarChar(250)")]
		public string Font
		{
			get
			{
				return this._Font;
			}
			set
			{
				if ((this._Font != value))
				{
					this.OnFontChanging(value);
					this.SendPropertyChanging();
					this._Font = value;
					this.SendPropertyChanged("Font");
					this.OnFontChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FontSize", DbType="Int")]
		public System.Nullable<int> FontSize
		{
			get
			{
				return this._FontSize;
			}
			set
			{
				if ((this._FontSize != value))
				{
					this.OnFontSizeChanging(value);
					this.SendPropertyChanging();
					this._FontSize = value;
					this.SendPropertyChanged("FontSize");
					this.OnFontSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBold", DbType="Bit NOT NULL")]
		public bool IsBold
		{
			get
			{
				return this._IsBold;
			}
			set
			{
				if ((this._IsBold != value))
				{
					this.OnIsBoldChanging(value);
					this.SendPropertyChanging();
					this._IsBold = value;
					this.SendPropertyChanged("IsBold");
					this.OnIsBoldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsItalic", DbType="Bit NOT NULL")]
		public bool IsItalic
		{
			get
			{
				return this._IsItalic;
			}
			set
			{
				if ((this._IsItalic != value))
				{
					this.OnIsItalicChanging(value);
					this.SendPropertyChanging();
					this._IsItalic = value;
					this.SendPropertyChanged("IsItalic");
					this.OnIsItalicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TextJustify", DbType="NVarChar(250)")]
		public string TextJustify
		{
			get
			{
				return this._TextJustify;
			}
			set
			{
				if ((this._TextJustify != value))
				{
					this.OnTextJustifyChanging(value);
					this.SendPropertyChanging();
					this._TextJustify = value;
					this.SendPropertyChanged("TextJustify");
					this.OnTextJustifyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TextAlign", DbType="NVarChar(250)")]
		public string TextAlign
		{
			get
			{
				return this._TextAlign;
			}
			set
			{
				if ((this._TextAlign != value))
				{
					this.OnTextAlignChanging(value);
					this.SendPropertyChanging();
					this._TextAlign = value;
					this.SendPropertyChanged("TextAlign");
					this.OnTextAlignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TextColor", DbType="VarChar(20)")]
		public string TextColor
		{
			get
			{
				return this._TextColor;
			}
			set
			{
				if ((this._TextColor != value))
				{
					this.OnTextColorChanging(value);
					this.SendPropertyChanging();
					this._TextColor = value;
					this.SendPropertyChanged("TextColor");
					this.OnTextColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Underline", DbType="NVarChar(250)")]
		public string Underline
		{
			get
			{
				return this._Underline;
			}
			set
			{
				if ((this._Underline != value))
				{
					this.OnUnderlineChanging(value);
					this.SendPropertyChanging();
					this._Underline = value;
					this.SendPropertyChanged("Underline");
					this.OnUnderlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Layer", DbType="Int NOT NULL")]
		public int Layer
		{
			get
			{
				return this._Layer;
			}
			set
			{
				if ((this._Layer != value))
				{
					this.OnLayerChanging(value);
					this.SendPropertyChanging();
					this._Layer = value;
					this.SendPropertyChanged("Layer");
					this.OnLayerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Strikethrough", DbType="Bit NOT NULL")]
		public bool Strikethrough
		{
			get
			{
				return this._Strikethrough;
			}
			set
			{
				if ((this._Strikethrough != value))
				{
					this.OnStrikethroughChanging(value);
					this.SendPropertyChanging();
					this._Strikethrough = value;
					this.SendPropertyChanged("Strikethrough");
					this.OnStrikethroughChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTPDFDesignSection")]
	public partial class MSTPDFDesignSection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SectionID;
		
		private System.Nullable<int> _LayoutID;
		
		private string _SectionName;
		
		private int _h;
		
		private string _BackgroundColor;
		
		private string _BackgroundImageURL;
		
		private System.DateTime _CreatedDate;
		
		private int _CreatedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private EntitySet<MSTPDFDesignSystemConfig> _MSTPDFDesignSystemConfigs;
		
		private EntitySet<MSTPDFDesignSystemConfig> _MSTPDFDesignSystemConfigs1;
		
		private EntityRef<MSTPDFDesignConfig> _MSTPDFDesignConfig;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSectionIDChanging(int value);
    partial void OnSectionIDChanged();
    partial void OnLayoutIDChanging(System.Nullable<int> value);
    partial void OnLayoutIDChanged();
    partial void OnSectionNameChanging(string value);
    partial void OnSectionNameChanged();
    partial void OnhChanging(int value);
    partial void OnhChanged();
    partial void OnBackgroundColorChanging(string value);
    partial void OnBackgroundColorChanged();
    partial void OnBackgroundImageURLChanging(string value);
    partial void OnBackgroundImageURLChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    #endregion
		
		public MSTPDFDesignSection()
		{
			this._MSTPDFDesignSystemConfigs = new EntitySet<MSTPDFDesignSystemConfig>(new Action<MSTPDFDesignSystemConfig>(this.attach_MSTPDFDesignSystemConfigs), new Action<MSTPDFDesignSystemConfig>(this.detach_MSTPDFDesignSystemConfigs));
			this._MSTPDFDesignSystemConfigs1 = new EntitySet<MSTPDFDesignSystemConfig>(new Action<MSTPDFDesignSystemConfig>(this.attach_MSTPDFDesignSystemConfigs1), new Action<MSTPDFDesignSystemConfig>(this.detach_MSTPDFDesignSystemConfigs1));
			this._MSTPDFDesignConfig = default(EntityRef<MSTPDFDesignConfig>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SectionID
		{
			get
			{
				return this._SectionID;
			}
			set
			{
				if ((this._SectionID != value))
				{
					this.OnSectionIDChanging(value);
					this.SendPropertyChanging();
					this._SectionID = value;
					this.SendPropertyChanged("SectionID");
					this.OnSectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LayoutID", DbType="Int")]
		public System.Nullable<int> LayoutID
		{
			get
			{
				return this._LayoutID;
			}
			set
			{
				if ((this._LayoutID != value))
				{
					if (this._MSTPDFDesignConfig.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLayoutIDChanging(value);
					this.SendPropertyChanging();
					this._LayoutID = value;
					this.SendPropertyChanged("LayoutID");
					this.OnLayoutIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SectionName
		{
			get
			{
				return this._SectionName;
			}
			set
			{
				if ((this._SectionName != value))
				{
					this.OnSectionNameChanging(value);
					this.SendPropertyChanging();
					this._SectionName = value;
					this.SendPropertyChanged("SectionName");
					this.OnSectionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_h", DbType="Int NOT NULL")]
		public int h
		{
			get
			{
				return this._h;
			}
			set
			{
				if ((this._h != value))
				{
					this.OnhChanging(value);
					this.SendPropertyChanging();
					this._h = value;
					this.SendPropertyChanged("h");
					this.OnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackgroundColor", DbType="NVarChar(20)")]
		public string BackgroundColor
		{
			get
			{
				return this._BackgroundColor;
			}
			set
			{
				if ((this._BackgroundColor != value))
				{
					this.OnBackgroundColorChanging(value);
					this.SendPropertyChanging();
					this._BackgroundColor = value;
					this.SendPropertyChanged("BackgroundColor");
					this.OnBackgroundColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackgroundImageURL", DbType="NVarChar(500)")]
		public string BackgroundImageURL
		{
			get
			{
				return this._BackgroundImageURL;
			}
			set
			{
				if ((this._BackgroundImageURL != value))
				{
					this.OnBackgroundImageURLChanging(value);
					this.SendPropertyChanging();
					this._BackgroundImageURL = value;
					this.SendPropertyChanged("BackgroundImageURL");
					this.OnBackgroundImageURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MSTPDFDesignSection_MSTPDFDesignSystemConfig", Storage="_MSTPDFDesignSystemConfigs", ThisKey="SectionID", OtherKey="MasterFooterId")]
		public EntitySet<MSTPDFDesignSystemConfig> MSTPDFDesignSystemConfigs
		{
			get
			{
				return this._MSTPDFDesignSystemConfigs;
			}
			set
			{
				this._MSTPDFDesignSystemConfigs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MSTPDFDesignSection_MSTPDFDesignSystemConfig1", Storage="_MSTPDFDesignSystemConfigs1", ThisKey="SectionID", OtherKey="MasterHeaderId")]
		public EntitySet<MSTPDFDesignSystemConfig> MSTPDFDesignSystemConfigs1
		{
			get
			{
				return this._MSTPDFDesignSystemConfigs1;
			}
			set
			{
				this._MSTPDFDesignSystemConfigs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MSTPDFDesignConfig_MSTPDFDesignSection", Storage="_MSTPDFDesignConfig", ThisKey="LayoutID", OtherKey="LayoutID", IsForeignKey=true, DeleteRule="CASCADE")]
		public MSTPDFDesignConfig MSTPDFDesignConfig
		{
			get
			{
				return this._MSTPDFDesignConfig.Entity;
			}
			set
			{
				MSTPDFDesignConfig previousValue = this._MSTPDFDesignConfig.Entity;
				if (((previousValue != value) 
							|| (this._MSTPDFDesignConfig.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MSTPDFDesignConfig.Entity = null;
						previousValue.MSTPDFDesignSections.Remove(this);
					}
					this._MSTPDFDesignConfig.Entity = value;
					if ((value != null))
					{
						value.MSTPDFDesignSections.Add(this);
						this._LayoutID = value.LayoutID;
					}
					else
					{
						this._LayoutID = default(Nullable<int>);
					}
					this.SendPropertyChanged("MSTPDFDesignConfig");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MSTPDFDesignSystemConfigs(MSTPDFDesignSystemConfig entity)
		{
			this.SendPropertyChanging();
			entity.MSTPDFDesignSection = this;
		}
		
		private void detach_MSTPDFDesignSystemConfigs(MSTPDFDesignSystemConfig entity)
		{
			this.SendPropertyChanging();
			entity.MSTPDFDesignSection = null;
		}
		
		private void attach_MSTPDFDesignSystemConfigs1(MSTPDFDesignSystemConfig entity)
		{
			this.SendPropertyChanging();
			entity.MSTPDFDesignSection1 = this;
		}
		
		private void detach_MSTPDFDesignSystemConfigs1(MSTPDFDesignSystemConfig entity)
		{
			this.SendPropertyChanging();
			entity.MSTPDFDesignSection1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTPDFDesignSystemConfig")]
	public partial class MSTPDFDesignSystemConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PdfDesignId;
		
		private string _Waterrmark;
		
		private System.Nullable<int> _MasterHeaderId;
		
		private System.Nullable<int> _MasterFooterId;
		
		private string _Orientation;
		
		private string _PageSize;
		
		private System.Nullable<int> _CustomWidth;
		
		private System.Nullable<int> _CustomHeight;
		
		private System.Nullable<int> _GridSize;
		
		private System.Nullable<int> _PL;
		
		private System.Nullable<int> _PR;
		
		private System.Nullable<int> _PT;
		
		private System.Nullable<int> _PB;
		
		private string _BackgroundColor;
		
		private string _BackgroundImageURL;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private EntityRef<MSTPDFDesignSection> _MSTPDFDesignSection;
		
		private EntityRef<MSTPDFDesignSection> _MSTPDFDesignSection1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPdfDesignIdChanging(int value);
    partial void OnPdfDesignIdChanged();
    partial void OnWaterrmarkChanging(string value);
    partial void OnWaterrmarkChanged();
    partial void OnMasterHeaderIdChanging(System.Nullable<int> value);
    partial void OnMasterHeaderIdChanged();
    partial void OnMasterFooterIdChanging(System.Nullable<int> value);
    partial void OnMasterFooterIdChanged();
    partial void OnOrientationChanging(string value);
    partial void OnOrientationChanged();
    partial void OnPageSizeChanging(string value);
    partial void OnPageSizeChanged();
    partial void OnCustomWidthChanging(System.Nullable<int> value);
    partial void OnCustomWidthChanged();
    partial void OnCustomHeightChanging(System.Nullable<int> value);
    partial void OnCustomHeightChanged();
    partial void OnGridSizeChanging(System.Nullable<int> value);
    partial void OnGridSizeChanged();
    partial void OnPLChanging(System.Nullable<int> value);
    partial void OnPLChanged();
    partial void OnPRChanging(System.Nullable<int> value);
    partial void OnPRChanged();
    partial void OnPTChanging(System.Nullable<int> value);
    partial void OnPTChanged();
    partial void OnPBChanging(System.Nullable<int> value);
    partial void OnPBChanged();
    partial void OnBackgroundColorChanging(string value);
    partial void OnBackgroundColorChanged();
    partial void OnBackgroundImageURLChanging(string value);
    partial void OnBackgroundImageURLChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    #endregion
		
		public MSTPDFDesignSystemConfig()
		{
			this._MSTPDFDesignSection = default(EntityRef<MSTPDFDesignSection>);
			this._MSTPDFDesignSection1 = default(EntityRef<MSTPDFDesignSection>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PdfDesignId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PdfDesignId
		{
			get
			{
				return this._PdfDesignId;
			}
			set
			{
				if ((this._PdfDesignId != value))
				{
					this.OnPdfDesignIdChanging(value);
					this.SendPropertyChanging();
					this._PdfDesignId = value;
					this.SendPropertyChanged("PdfDesignId");
					this.OnPdfDesignIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Waterrmark", DbType="NVarChar(500)")]
		public string Waterrmark
		{
			get
			{
				return this._Waterrmark;
			}
			set
			{
				if ((this._Waterrmark != value))
				{
					this.OnWaterrmarkChanging(value);
					this.SendPropertyChanging();
					this._Waterrmark = value;
					this.SendPropertyChanged("Waterrmark");
					this.OnWaterrmarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MasterHeaderId", DbType="Int")]
		public System.Nullable<int> MasterHeaderId
		{
			get
			{
				return this._MasterHeaderId;
			}
			set
			{
				if ((this._MasterHeaderId != value))
				{
					if (this._MSTPDFDesignSection1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMasterHeaderIdChanging(value);
					this.SendPropertyChanging();
					this._MasterHeaderId = value;
					this.SendPropertyChanged("MasterHeaderId");
					this.OnMasterHeaderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MasterFooterId", DbType="Int")]
		public System.Nullable<int> MasterFooterId
		{
			get
			{
				return this._MasterFooterId;
			}
			set
			{
				if ((this._MasterFooterId != value))
				{
					if (this._MSTPDFDesignSection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMasterFooterIdChanging(value);
					this.SendPropertyChanging();
					this._MasterFooterId = value;
					this.SendPropertyChanged("MasterFooterId");
					this.OnMasterFooterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Orientation", DbType="NVarChar(50)")]
		public string Orientation
		{
			get
			{
				return this._Orientation;
			}
			set
			{
				if ((this._Orientation != value))
				{
					this.OnOrientationChanging(value);
					this.SendPropertyChanging();
					this._Orientation = value;
					this.SendPropertyChanged("Orientation");
					this.OnOrientationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSize", DbType="NVarChar(20)")]
		public string PageSize
		{
			get
			{
				return this._PageSize;
			}
			set
			{
				if ((this._PageSize != value))
				{
					this.OnPageSizeChanging(value);
					this.SendPropertyChanging();
					this._PageSize = value;
					this.SendPropertyChanged("PageSize");
					this.OnPageSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomWidth", DbType="Int")]
		public System.Nullable<int> CustomWidth
		{
			get
			{
				return this._CustomWidth;
			}
			set
			{
				if ((this._CustomWidth != value))
				{
					this.OnCustomWidthChanging(value);
					this.SendPropertyChanging();
					this._CustomWidth = value;
					this.SendPropertyChanged("CustomWidth");
					this.OnCustomWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomHeight", DbType="Int")]
		public System.Nullable<int> CustomHeight
		{
			get
			{
				return this._CustomHeight;
			}
			set
			{
				if ((this._CustomHeight != value))
				{
					this.OnCustomHeightChanging(value);
					this.SendPropertyChanging();
					this._CustomHeight = value;
					this.SendPropertyChanged("CustomHeight");
					this.OnCustomHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GridSize", DbType="Int")]
		public System.Nullable<int> GridSize
		{
			get
			{
				return this._GridSize;
			}
			set
			{
				if ((this._GridSize != value))
				{
					this.OnGridSizeChanging(value);
					this.SendPropertyChanging();
					this._GridSize = value;
					this.SendPropertyChanged("GridSize");
					this.OnGridSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PL", DbType="Int")]
		public System.Nullable<int> PL
		{
			get
			{
				return this._PL;
			}
			set
			{
				if ((this._PL != value))
				{
					this.OnPLChanging(value);
					this.SendPropertyChanging();
					this._PL = value;
					this.SendPropertyChanged("PL");
					this.OnPLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR", DbType="Int")]
		public System.Nullable<int> PR
		{
			get
			{
				return this._PR;
			}
			set
			{
				if ((this._PR != value))
				{
					this.OnPRChanging(value);
					this.SendPropertyChanging();
					this._PR = value;
					this.SendPropertyChanged("PR");
					this.OnPRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PT", DbType="Int")]
		public System.Nullable<int> PT
		{
			get
			{
				return this._PT;
			}
			set
			{
				if ((this._PT != value))
				{
					this.OnPTChanging(value);
					this.SendPropertyChanging();
					this._PT = value;
					this.SendPropertyChanged("PT");
					this.OnPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PB", DbType="Int")]
		public System.Nullable<int> PB
		{
			get
			{
				return this._PB;
			}
			set
			{
				if ((this._PB != value))
				{
					this.OnPBChanging(value);
					this.SendPropertyChanging();
					this._PB = value;
					this.SendPropertyChanged("PB");
					this.OnPBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackgroundColor", DbType="NVarChar(20)")]
		public string BackgroundColor
		{
			get
			{
				return this._BackgroundColor;
			}
			set
			{
				if ((this._BackgroundColor != value))
				{
					this.OnBackgroundColorChanging(value);
					this.SendPropertyChanging();
					this._BackgroundColor = value;
					this.SendPropertyChanged("BackgroundColor");
					this.OnBackgroundColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackgroundImageURL", DbType="NVarChar(500)")]
		public string BackgroundImageURL
		{
			get
			{
				return this._BackgroundImageURL;
			}
			set
			{
				if ((this._BackgroundImageURL != value))
				{
					this.OnBackgroundImageURLChanging(value);
					this.SendPropertyChanging();
					this._BackgroundImageURL = value;
					this.SendPropertyChanged("BackgroundImageURL");
					this.OnBackgroundImageURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MSTPDFDesignSection_MSTPDFDesignSystemConfig", Storage="_MSTPDFDesignSection", ThisKey="MasterFooterId", OtherKey="SectionID", IsForeignKey=true)]
		public MSTPDFDesignSection MSTPDFDesignSection
		{
			get
			{
				return this._MSTPDFDesignSection.Entity;
			}
			set
			{
				MSTPDFDesignSection previousValue = this._MSTPDFDesignSection.Entity;
				if (((previousValue != value) 
							|| (this._MSTPDFDesignSection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MSTPDFDesignSection.Entity = null;
						previousValue.MSTPDFDesignSystemConfigs.Remove(this);
					}
					this._MSTPDFDesignSection.Entity = value;
					if ((value != null))
					{
						value.MSTPDFDesignSystemConfigs.Add(this);
						this._MasterFooterId = value.SectionID;
					}
					else
					{
						this._MasterFooterId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MSTPDFDesignSection");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MSTPDFDesignSection_MSTPDFDesignSystemConfig1", Storage="_MSTPDFDesignSection1", ThisKey="MasterHeaderId", OtherKey="SectionID", IsForeignKey=true)]
		public MSTPDFDesignSection MSTPDFDesignSection1
		{
			get
			{
				return this._MSTPDFDesignSection1.Entity;
			}
			set
			{
				MSTPDFDesignSection previousValue = this._MSTPDFDesignSection1.Entity;
				if (((previousValue != value) 
							|| (this._MSTPDFDesignSection1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MSTPDFDesignSection1.Entity = null;
						previousValue.MSTPDFDesignSystemConfigs1.Remove(this);
					}
					this._MSTPDFDesignSection1.Entity = value;
					if ((value != null))
					{
						value.MSTPDFDesignSystemConfigs1.Add(this);
						this._MasterHeaderId = value.SectionID;
					}
					else
					{
						this._MasterHeaderId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MSTPDFDesignSection1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTPDFTemplate")]
	public partial class MSTPDFTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PDFId;
		
		private int _TemplateId;
		
		private string _JsonProps;
		
		private string _JsonLayout;
		
		private string _HeaderLayout;
		
		private string _BodyLayout;
		
		private string _FooterLayout;
		
		private bool _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPDFIdChanging(int value);
    partial void OnPDFIdChanged();
    partial void OnTemplateIdChanging(int value);
    partial void OnTemplateIdChanged();
    partial void OnJsonPropsChanging(string value);
    partial void OnJsonPropsChanged();
    partial void OnJsonLayoutChanging(string value);
    partial void OnJsonLayoutChanged();
    partial void OnHeaderLayoutChanging(string value);
    partial void OnHeaderLayoutChanged();
    partial void OnBodyLayoutChanging(string value);
    partial void OnBodyLayoutChanged();
    partial void OnFooterLayoutChanging(string value);
    partial void OnFooterLayoutChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public MSTPDFTemplate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDFId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PDFId
		{
			get
			{
				return this._PDFId;
			}
			set
			{
				if ((this._PDFId != value))
				{
					this.OnPDFIdChanging(value);
					this.SendPropertyChanging();
					this._PDFId = value;
					this.SendPropertyChanged("PDFId");
					this.OnPDFIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateId", DbType="Int NOT NULL")]
		public int TemplateId
		{
			get
			{
				return this._TemplateId;
			}
			set
			{
				if ((this._TemplateId != value))
				{
					this.OnTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._TemplateId = value;
					this.SendPropertyChanged("TemplateId");
					this.OnTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JsonProps", DbType="NVarChar(MAX)")]
		public string JsonProps
		{
			get
			{
				return this._JsonProps;
			}
			set
			{
				if ((this._JsonProps != value))
				{
					this.OnJsonPropsChanging(value);
					this.SendPropertyChanging();
					this._JsonProps = value;
					this.SendPropertyChanged("JsonProps");
					this.OnJsonPropsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JsonLayout", DbType="NVarChar(MAX)")]
		public string JsonLayout
		{
			get
			{
				return this._JsonLayout;
			}
			set
			{
				if ((this._JsonLayout != value))
				{
					this.OnJsonLayoutChanging(value);
					this.SendPropertyChanging();
					this._JsonLayout = value;
					this.SendPropertyChanged("JsonLayout");
					this.OnJsonLayoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeaderLayout", DbType="NVarChar(MAX)")]
		public string HeaderLayout
		{
			get
			{
				return this._HeaderLayout;
			}
			set
			{
				if ((this._HeaderLayout != value))
				{
					this.OnHeaderLayoutChanging(value);
					this.SendPropertyChanging();
					this._HeaderLayout = value;
					this.SendPropertyChanged("HeaderLayout");
					this.OnHeaderLayoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BodyLayout", DbType="NVarChar(MAX)")]
		public string BodyLayout
		{
			get
			{
				return this._BodyLayout;
			}
			set
			{
				if ((this._BodyLayout != value))
				{
					this.OnBodyLayoutChanging(value);
					this.SendPropertyChanging();
					this._BodyLayout = value;
					this.SendPropertyChanged("BodyLayout");
					this.OnBodyLayoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FooterLayout", DbType="NVarChar(MAX)")]
		public string FooterLayout
		{
			get
			{
				return this._FooterLayout;
			}
			set
			{
				if ((this._FooterLayout != value))
				{
					this.OnFooterLayoutChanging(value);
					this.SendPropertyChanging();
					this._FooterLayout = value;
					this.SendPropertyChanged("FooterLayout");
					this.OnFooterLayoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTPosition")]
	public partial class MSTPosition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PositionId;
		
		private System.Nullable<int> _PositionLevelId;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _AccountId;
		
		private string _CompanyCode;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPositionIdChanging(int value);
    partial void OnPositionIdChanged();
    partial void OnPositionLevelIdChanging(System.Nullable<int> value);
    partial void OnPositionLevelIdChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnAccountIdChanging(System.Nullable<int> value);
    partial void OnAccountIdChanged();
    partial void OnCompanyCodeChanging(string value);
    partial void OnCompanyCodeChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MSTPosition()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PositionId
		{
			get
			{
				return this._PositionId;
			}
			set
			{
				if ((this._PositionId != value))
				{
					this.OnPositionIdChanging(value);
					this.SendPropertyChanging();
					this._PositionId = value;
					this.SendPropertyChanged("PositionId");
					this.OnPositionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionLevelId", DbType="Int")]
		public System.Nullable<int> PositionLevelId
		{
			get
			{
				return this._PositionLevelId;
			}
			set
			{
				if ((this._PositionLevelId != value))
				{
					this.OnPositionLevelIdChanging(value);
					this.SendPropertyChanging();
					this._PositionLevelId = value;
					this.SendPropertyChanged("PositionLevelId");
					this.OnPositionLevelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int")]
		public System.Nullable<int> AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCode", DbType="NVarChar(50)")]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					this.OnCompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._CompanyCode = value;
					this.SendPropertyChanged("CompanyCode");
					this.OnCompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTPositionLevel")]
	public partial class MSTPositionLevel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PositionLevelId;
		
		private System.Nullable<int> _PositionLevel;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _AccountId;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPositionLevelIdChanging(int value);
    partial void OnPositionLevelIdChanged();
    partial void OnPositionLevelChanging(System.Nullable<int> value);
    partial void OnPositionLevelChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnAccountIdChanging(System.Nullable<int> value);
    partial void OnAccountIdChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MSTPositionLevel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionLevelId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PositionLevelId
		{
			get
			{
				return this._PositionLevelId;
			}
			set
			{
				if ((this._PositionLevelId != value))
				{
					this.OnPositionLevelIdChanging(value);
					this.SendPropertyChanging();
					this._PositionLevelId = value;
					this.SendPropertyChanged("PositionLevelId");
					this.OnPositionLevelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionLevel", DbType="Int")]
		public System.Nullable<int> PositionLevel
		{
			get
			{
				return this._PositionLevel;
			}
			set
			{
				if ((this._PositionLevel != value))
				{
					this.OnPositionLevelChanging(value);
					this.SendPropertyChanging();
					this._PositionLevel = value;
					this.SendPropertyChanged("PositionLevel");
					this.OnPositionLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int")]
		public System.Nullable<int> AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTProject")]
	public partial class MSTProject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProjectId;
		
		private string _ProjectName;
		
		private string _ProjectCode;
		
		private System.Nullable<bool> _IsActive;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _AccountId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectIdChanging(int value);
    partial void OnProjectIdChanged();
    partial void OnProjectNameChanging(string value);
    partial void OnProjectNameChanged();
    partial void OnProjectCodeChanging(string value);
    partial void OnProjectCodeChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnAccountIdChanging(System.Nullable<int> value);
    partial void OnAccountIdChanged();
    #endregion
		
		public MSTProject()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectName", DbType="NVarChar(500)")]
		public string ProjectName
		{
			get
			{
				return this._ProjectName;
			}
			set
			{
				if ((this._ProjectName != value))
				{
					this.OnProjectNameChanging(value);
					this.SendPropertyChanging();
					this._ProjectName = value;
					this.SendPropertyChanged("ProjectName");
					this.OnProjectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCode", DbType="NVarChar(50)")]
		public string ProjectCode
		{
			get
			{
				return this._ProjectCode;
			}
			set
			{
				if ((this._ProjectCode != value))
				{
					this.OnProjectCodeChanging(value);
					this.SendPropertyChanging();
					this._ProjectCode = value;
					this.SendPropertyChanged("ProjectCode");
					this.OnProjectCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="VarChar(500)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(500)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int")]
		public System.Nullable<int> AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTProvince")]
	public partial class MSTProvince
	{
		
		private System.Nullable<int> _ProvinceID;
		
		private string _Provincethai;
		
		private System.Nullable<int> _DistrictID;
		
		private string _Districtthai;
		
		private System.Nullable<int> _TambonID;
		
		private string _Tambonthai;
		
		private System.Nullable<int> _Postcode;
		
		public MSTProvince()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinceID", DbType="Int")]
		public System.Nullable<int> ProvinceID
		{
			get
			{
				return this._ProvinceID;
			}
			set
			{
				if ((this._ProvinceID != value))
				{
					this._ProvinceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Provincethai", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Provincethai
		{
			get
			{
				return this._Provincethai;
			}
			set
			{
				if ((this._Provincethai != value))
				{
					this._Provincethai = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Districtthai", DbType="NVarChar(50)")]
		public string Districtthai
		{
			get
			{
				return this._Districtthai;
			}
			set
			{
				if ((this._Districtthai != value))
				{
					this._Districtthai = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TambonID", DbType="Int")]
		public System.Nullable<int> TambonID
		{
			get
			{
				return this._TambonID;
			}
			set
			{
				if ((this._TambonID != value))
				{
					this._TambonID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tambonthai", DbType="NVarChar(50)")]
		public string Tambonthai
		{
			get
			{
				return this._Tambonthai;
			}
			set
			{
				if ((this._Tambonthai != value))
				{
					this._Tambonthai = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postcode", DbType="Int")]
		public System.Nullable<int> Postcode
		{
			get
			{
				return this._Postcode;
			}
			set
			{
				if ((this._Postcode != value))
				{
					this._Postcode = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTReportTemplate")]
	public partial class MSTReportTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReportTemplateId;
		
		private string _ReportName;
		
		private string _ReportDescription;
		
		private System.Nullable<bool> _IsPrivate;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<bool> _TemplateVersion;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReportTemplateIdChanging(int value);
    partial void OnReportTemplateIdChanged();
    partial void OnReportNameChanging(string value);
    partial void OnReportNameChanged();
    partial void OnReportDescriptionChanging(string value);
    partial void OnReportDescriptionChanged();
    partial void OnIsPrivateChanging(System.Nullable<bool> value);
    partial void OnIsPrivateChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnTemplateVersionChanging(System.Nullable<bool> value);
    partial void OnTemplateVersionChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MSTReportTemplate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportTemplateId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReportTemplateId
		{
			get
			{
				return this._ReportTemplateId;
			}
			set
			{
				if ((this._ReportTemplateId != value))
				{
					this.OnReportTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._ReportTemplateId = value;
					this.SendPropertyChanged("ReportTemplateId");
					this.OnReportTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportName", DbType="NVarChar(500)")]
		public string ReportName
		{
			get
			{
				return this._ReportName;
			}
			set
			{
				if ((this._ReportName != value))
				{
					this.OnReportNameChanging(value);
					this.SendPropertyChanging();
					this._ReportName = value;
					this.SendPropertyChanged("ReportName");
					this.OnReportNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportDescription", DbType="NVarChar(MAX)")]
		public string ReportDescription
		{
			get
			{
				return this._ReportDescription;
			}
			set
			{
				if ((this._ReportDescription != value))
				{
					this.OnReportDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ReportDescription = value;
					this.SendPropertyChanged("ReportDescription");
					this.OnReportDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrivate", DbType="Bit")]
		public System.Nullable<bool> IsPrivate
		{
			get
			{
				return this._IsPrivate;
			}
			set
			{
				if ((this._IsPrivate != value))
				{
					this.OnIsPrivateChanging(value);
					this.SendPropertyChanging();
					this._IsPrivate = value;
					this.SendPropertyChanged("IsPrivate");
					this.OnIsPrivateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateVersion", DbType="Bit")]
		public System.Nullable<bool> TemplateVersion
		{
			get
			{
				return this._TemplateVersion;
			}
			set
			{
				if ((this._TemplateVersion != value))
				{
					this.OnTemplateVersionChanging(value);
					this.SendPropertyChanging();
					this._TemplateVersion = value;
					this.SendPropertyChanged("TemplateVersion");
					this.OnTemplateVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTReportTemplateFieldCollection")]
	public partial class MSTReportTemplateFieldCollection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FieldColId;
		
		private int _ReportTemplateId;
		
		private System.Nullable<int> _TemplateId;
		
		private System.Nullable<int> _ControlKey;
		
		private System.Nullable<int> _ColumnKey;
		
		private System.Nullable<int> _Seq;
		
		private System.Nullable<int> _InfoId;
		
		private string _FilterText;
		
		private System.Nullable<bool> _IsShowHeader;
		
		private System.Nullable<int> _OperateId;
		
		private System.Nullable<System.DateTime> _DateFrom;
		
		private System.Nullable<System.DateTime> _DateTo;
		
		private System.Nullable<int> _width;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFieldColIdChanging(int value);
    partial void OnFieldColIdChanged();
    partial void OnReportTemplateIdChanging(int value);
    partial void OnReportTemplateIdChanged();
    partial void OnTemplateIdChanging(System.Nullable<int> value);
    partial void OnTemplateIdChanged();
    partial void OnControlKeyChanging(System.Nullable<int> value);
    partial void OnControlKeyChanged();
    partial void OnColumnKeyChanging(System.Nullable<int> value);
    partial void OnColumnKeyChanged();
    partial void OnSeqChanging(System.Nullable<int> value);
    partial void OnSeqChanged();
    partial void OnInfoIdChanging(System.Nullable<int> value);
    partial void OnInfoIdChanged();
    partial void OnFilterTextChanging(string value);
    partial void OnFilterTextChanged();
    partial void OnIsShowHeaderChanging(System.Nullable<bool> value);
    partial void OnIsShowHeaderChanged();
    partial void OnOperateIdChanging(System.Nullable<int> value);
    partial void OnOperateIdChanged();
    partial void OnDateFromChanging(System.Nullable<System.DateTime> value);
    partial void OnDateFromChanged();
    partial void OnDateToChanging(System.Nullable<System.DateTime> value);
    partial void OnDateToChanged();
    partial void OnwidthChanging(System.Nullable<int> value);
    partial void OnwidthChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MSTReportTemplateFieldCollection()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldColId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FieldColId
		{
			get
			{
				return this._FieldColId;
			}
			set
			{
				if ((this._FieldColId != value))
				{
					this.OnFieldColIdChanging(value);
					this.SendPropertyChanging();
					this._FieldColId = value;
					this.SendPropertyChanged("FieldColId");
					this.OnFieldColIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportTemplateId", DbType="Int NOT NULL")]
		public int ReportTemplateId
		{
			get
			{
				return this._ReportTemplateId;
			}
			set
			{
				if ((this._ReportTemplateId != value))
				{
					this.OnReportTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._ReportTemplateId = value;
					this.SendPropertyChanged("ReportTemplateId");
					this.OnReportTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateId", DbType="Int")]
		public System.Nullable<int> TemplateId
		{
			get
			{
				return this._TemplateId;
			}
			set
			{
				if ((this._TemplateId != value))
				{
					this.OnTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._TemplateId = value;
					this.SendPropertyChanged("TemplateId");
					this.OnTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlKey", DbType="Int")]
		public System.Nullable<int> ControlKey
		{
			get
			{
				return this._ControlKey;
			}
			set
			{
				if ((this._ControlKey != value))
				{
					this.OnControlKeyChanging(value);
					this.SendPropertyChanging();
					this._ControlKey = value;
					this.SendPropertyChanged("ControlKey");
					this.OnControlKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnKey", DbType="Int")]
		public System.Nullable<int> ColumnKey
		{
			get
			{
				return this._ColumnKey;
			}
			set
			{
				if ((this._ColumnKey != value))
				{
					this.OnColumnKeyChanging(value);
					this.SendPropertyChanging();
					this._ColumnKey = value;
					this.SendPropertyChanged("ColumnKey");
					this.OnColumnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seq", DbType="Int")]
		public System.Nullable<int> Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfoId", DbType="Int")]
		public System.Nullable<int> InfoId
		{
			get
			{
				return this._InfoId;
			}
			set
			{
				if ((this._InfoId != value))
				{
					this.OnInfoIdChanging(value);
					this.SendPropertyChanging();
					this._InfoId = value;
					this.SendPropertyChanged("InfoId");
					this.OnInfoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterText", DbType="NVarChar(500)")]
		public string FilterText
		{
			get
			{
				return this._FilterText;
			}
			set
			{
				if ((this._FilterText != value))
				{
					this.OnFilterTextChanging(value);
					this.SendPropertyChanging();
					this._FilterText = value;
					this.SendPropertyChanged("FilterText");
					this.OnFilterTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsShowHeader", DbType="Bit")]
		public System.Nullable<bool> IsShowHeader
		{
			get
			{
				return this._IsShowHeader;
			}
			set
			{
				if ((this._IsShowHeader != value))
				{
					this.OnIsShowHeaderChanging(value);
					this.SendPropertyChanging();
					this._IsShowHeader = value;
					this.SendPropertyChanged("IsShowHeader");
					this.OnIsShowHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperateId", DbType="Int")]
		public System.Nullable<int> OperateId
		{
			get
			{
				return this._OperateId;
			}
			set
			{
				if ((this._OperateId != value))
				{
					this.OnOperateIdChanging(value);
					this.SendPropertyChanging();
					this._OperateId = value;
					this.SendPropertyChanged("OperateId");
					this.OnOperateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateFrom
		{
			get
			{
				return this._DateFrom;
			}
			set
			{
				if ((this._DateFrom != value))
				{
					this.OnDateFromChanging(value);
					this.SendPropertyChanging();
					this._DateFrom = value;
					this.SendPropertyChanged("DateFrom");
					this.OnDateFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTo", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateTo
		{
			get
			{
				return this._DateTo;
			}
			set
			{
				if ((this._DateTo != value))
				{
					this.OnDateToChanging(value);
					this.SendPropertyChanging();
					this._DateTo = value;
					this.SendPropertyChanged("DateTo");
					this.OnDateToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_width", DbType="Int")]
		public System.Nullable<int> width
		{
			get
			{
				return this._width;
			}
			set
			{
				if ((this._width != value))
				{
					this.OnwidthChanging(value);
					this.SendPropertyChanging();
					this._width = value;
					this.SendPropertyChanged("width");
					this.OnwidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTReportTemplatePermission")]
	public partial class MSTReportTemplatePermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReportPermissionId;
		
		private int _ReportTemplateId;
		
		private System.Nullable<int> _RoleId;
		
		private System.Nullable<int> _EmployeeId;
		
		private System.Nullable<int> _PositionId;
		
		private System.Nullable<int> _DepartmentId;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReportPermissionIdChanging(int value);
    partial void OnReportPermissionIdChanged();
    partial void OnReportTemplateIdChanging(int value);
    partial void OnReportTemplateIdChanged();
    partial void OnRoleIdChanging(System.Nullable<int> value);
    partial void OnRoleIdChanged();
    partial void OnEmployeeIdChanging(System.Nullable<int> value);
    partial void OnEmployeeIdChanged();
    partial void OnPositionIdChanging(System.Nullable<int> value);
    partial void OnPositionIdChanged();
    partial void OnDepartmentIdChanging(System.Nullable<int> value);
    partial void OnDepartmentIdChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MSTReportTemplatePermission()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportPermissionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReportPermissionId
		{
			get
			{
				return this._ReportPermissionId;
			}
			set
			{
				if ((this._ReportPermissionId != value))
				{
					this.OnReportPermissionIdChanging(value);
					this.SendPropertyChanging();
					this._ReportPermissionId = value;
					this.SendPropertyChanged("ReportPermissionId");
					this.OnReportPermissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportTemplateId", DbType="Int NOT NULL")]
		public int ReportTemplateId
		{
			get
			{
				return this._ReportTemplateId;
			}
			set
			{
				if ((this._ReportTemplateId != value))
				{
					this.OnReportTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._ReportTemplateId = value;
					this.SendPropertyChanged("ReportTemplateId");
					this.OnReportTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int")]
		public System.Nullable<int> RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int")]
		public System.Nullable<int> EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionId", DbType="Int")]
		public System.Nullable<int> PositionId
		{
			get
			{
				return this._PositionId;
			}
			set
			{
				if ((this._PositionId != value))
				{
					this.OnPositionIdChanging(value);
					this.SendPropertyChanging();
					this._PositionId = value;
					this.SendPropertyChanged("PositionId");
					this.OnPositionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="Int")]
		public System.Nullable<int> DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTReportTemplateSelectedForm")]
	public partial class MSTReportTemplateSelectedForm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReportTemplateId;
		
		private int _TemplateId;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReportTemplateIdChanging(int value);
    partial void OnReportTemplateIdChanged();
    partial void OnTemplateIdChanging(int value);
    partial void OnTemplateIdChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MSTReportTemplateSelectedForm()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportTemplateId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ReportTemplateId
		{
			get
			{
				return this._ReportTemplateId;
			}
			set
			{
				if ((this._ReportTemplateId != value))
				{
					this.OnReportTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._ReportTemplateId = value;
					this.SendPropertyChanged("ReportTemplateId");
					this.OnReportTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TemplateId
		{
			get
			{
				return this._TemplateId;
			}
			set
			{
				if ((this._TemplateId != value))
				{
					this.OnTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._TemplateId = value;
					this.SendPropertyChanged("TemplateId");
					this.OnTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTRevisionCondition")]
	public partial class MSTRevisionCondition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RevisionId;
		
		private System.Nullable<int> _ControlId;
		
		private System.Nullable<int> _Seq;
		
		private System.Nullable<int> _ControlKey;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRevisionIdChanging(int value);
    partial void OnRevisionIdChanged();
    partial void OnControlIdChanging(System.Nullable<int> value);
    partial void OnControlIdChanged();
    partial void OnSeqChanging(System.Nullable<int> value);
    partial void OnSeqChanged();
    partial void OnControlKeyChanging(System.Nullable<int> value);
    partial void OnControlKeyChanged();
    #endregion
		
		public MSTRevisionCondition()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevisionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RevisionId
		{
			get
			{
				return this._RevisionId;
			}
			set
			{
				if ((this._RevisionId != value))
				{
					this.OnRevisionIdChanging(value);
					this.SendPropertyChanging();
					this._RevisionId = value;
					this.SendPropertyChanged("RevisionId");
					this.OnRevisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlId", DbType="Int")]
		public System.Nullable<int> ControlId
		{
			get
			{
				return this._ControlId;
			}
			set
			{
				if ((this._ControlId != value))
				{
					this.OnControlIdChanging(value);
					this.SendPropertyChanging();
					this._ControlId = value;
					this.SendPropertyChanged("ControlId");
					this.OnControlIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seq", DbType="Int")]
		public System.Nullable<int> Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlKey", DbType="Int")]
		public System.Nullable<int> ControlKey
		{
			get
			{
				return this._ControlKey;
			}
			set
			{
				if ((this._ControlKey != value))
				{
					this.OnControlKeyChanging(value);
					this.SendPropertyChanging();
					this._ControlKey = value;
					this.SendPropertyChanged("ControlKey");
					this.OnControlKeyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTRole")]
	public partial class MSTRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleId;
		
		private bool _IsActive;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MSTRole()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTSignatureWord")]
	public partial class MSTSignatureWord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SignatureId;
		
		private string _SignatureCode;
		
		private System.Nullable<int> _Seq;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSignatureIdChanging(int value);
    partial void OnSignatureIdChanged();
    partial void OnSignatureCodeChanging(string value);
    partial void OnSignatureCodeChanged();
    partial void OnSeqChanging(System.Nullable<int> value);
    partial void OnSeqChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MSTSignatureWord()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignatureId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SignatureId
		{
			get
			{
				return this._SignatureId;
			}
			set
			{
				if ((this._SignatureId != value))
				{
					this.OnSignatureIdChanging(value);
					this.SendPropertyChanging();
					this._SignatureId = value;
					this.SendPropertyChanged("SignatureId");
					this.OnSignatureIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignatureCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string SignatureCode
		{
			get
			{
				return this._SignatureCode;
			}
			set
			{
				if ((this._SignatureCode != value))
				{
					this.OnSignatureCodeChanging(value);
					this.SendPropertyChanging();
					this._SignatureCode = value;
					this.SendPropertyChanged("SignatureCode");
					this.OnSignatureCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seq", DbType="Int")]
		public System.Nullable<int> Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTSpecificType")]
	public partial class MSTSpecificType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SpecificTypeId;
		
		private string _SpecificTypeCode;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpecificTypeIdChanging(int value);
    partial void OnSpecificTypeIdChanged();
    partial void OnSpecificTypeCodeChanging(string value);
    partial void OnSpecificTypeCodeChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MSTSpecificType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecificTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SpecificTypeId
		{
			get
			{
				return this._SpecificTypeId;
			}
			set
			{
				if ((this._SpecificTypeId != value))
				{
					this.OnSpecificTypeIdChanging(value);
					this.SendPropertyChanging();
					this._SpecificTypeId = value;
					this.SendPropertyChanged("SpecificTypeId");
					this.OnSpecificTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecificTypeCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string SpecificTypeCode
		{
			get
			{
				return this._SpecificTypeCode;
			}
			set
			{
				if ((this._SpecificTypeCode != value))
				{
					this.OnSpecificTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._SpecificTypeCode = value;
					this.SendPropertyChanged("SpecificTypeCode");
					this.OnSpecificTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTTableColumn")]
	public partial class MSTTableColumn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ColumnId;
		
		private int _TableControlId;
		
		private int _ColumnControlId;
		
		private System.Nullable<int> _Seq;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnColumnIdChanging(int value);
    partial void OnColumnIdChanged();
    partial void OnTableControlIdChanging(int value);
    partial void OnTableControlIdChanged();
    partial void OnColumnControlIdChanging(int value);
    partial void OnColumnControlIdChanged();
    partial void OnSeqChanging(System.Nullable<int> value);
    partial void OnSeqChanged();
    #endregion
		
		public MSTTableColumn()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ColumnId
		{
			get
			{
				return this._ColumnId;
			}
			set
			{
				if ((this._ColumnId != value))
				{
					this.OnColumnIdChanging(value);
					this.SendPropertyChanging();
					this._ColumnId = value;
					this.SendPropertyChanged("ColumnId");
					this.OnColumnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableControlId", DbType="Int NOT NULL")]
		public int TableControlId
		{
			get
			{
				return this._TableControlId;
			}
			set
			{
				if ((this._TableControlId != value))
				{
					this.OnTableControlIdChanging(value);
					this.SendPropertyChanging();
					this._TableControlId = value;
					this.SendPropertyChanged("TableControlId");
					this.OnTableControlIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnControlId", DbType="Int NOT NULL")]
		public int ColumnControlId
		{
			get
			{
				return this._ColumnControlId;
			}
			set
			{
				if ((this._ColumnControlId != value))
				{
					this.OnColumnControlIdChanging(value);
					this.SendPropertyChanging();
					this._ColumnControlId = value;
					this.SendPropertyChanged("ColumnControlId");
					this.OnColumnControlIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seq", DbType="Int")]
		public System.Nullable<int> Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTTemConditionLogic")]
	public partial class MSTTemConditionLogic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TemConditionLogicId;
		
		private System.Nullable<int> _TemplateId;
		
		private System.Nullable<int> _TemLineApproveId;
		
		private System.Nullable<int> _Seq;
		
		private string _LogicCondition;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTemConditionLogicIdChanging(int value);
    partial void OnTemConditionLogicIdChanged();
    partial void OnTemplateIdChanging(System.Nullable<int> value);
    partial void OnTemplateIdChanged();
    partial void OnTemLineApproveIdChanging(System.Nullable<int> value);
    partial void OnTemLineApproveIdChanged();
    partial void OnSeqChanging(System.Nullable<int> value);
    partial void OnSeqChanged();
    partial void OnLogicConditionChanging(string value);
    partial void OnLogicConditionChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MSTTemConditionLogic()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemConditionLogicId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TemConditionLogicId
		{
			get
			{
				return this._TemConditionLogicId;
			}
			set
			{
				if ((this._TemConditionLogicId != value))
				{
					this.OnTemConditionLogicIdChanging(value);
					this.SendPropertyChanging();
					this._TemConditionLogicId = value;
					this.SendPropertyChanged("TemConditionLogicId");
					this.OnTemConditionLogicIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateId", DbType="Int")]
		public System.Nullable<int> TemplateId
		{
			get
			{
				return this._TemplateId;
			}
			set
			{
				if ((this._TemplateId != value))
				{
					this.OnTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._TemplateId = value;
					this.SendPropertyChanged("TemplateId");
					this.OnTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemLineApproveId", DbType="Int")]
		public System.Nullable<int> TemLineApproveId
		{
			get
			{
				return this._TemLineApproveId;
			}
			set
			{
				if ((this._TemLineApproveId != value))
				{
					this.OnTemLineApproveIdChanging(value);
					this.SendPropertyChanging();
					this._TemLineApproveId = value;
					this.SendPropertyChanged("TemLineApproveId");
					this.OnTemLineApproveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seq", DbType="Int")]
		public System.Nullable<int> Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicCondition", DbType="NVarChar(500)")]
		public string LogicCondition
		{
			get
			{
				return this._LogicCondition;
			}
			set
			{
				if ((this._LogicCondition != value))
				{
					this.OnLogicConditionChanging(value);
					this.SendPropertyChanging();
					this._LogicCondition = value;
					this.SendPropertyChanged("LogicCondition");
					this.OnLogicConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTTemConditionLogicItem")]
	public partial class MSTTemConditionLogicItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TemConditionLogicItemId;
		
		private System.Nullable<int> _TemConditionLogicId;
		
		private string _ConditionName;
		
		private System.Nullable<int> _Seq;
		
		private System.Nullable<int> _ControlKey;
		
		private System.Nullable<int> _ComparisonOperateId;
		
		private string _Value;
		
		private string _NextRowRelation;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTemConditionLogicItemIdChanging(int value);
    partial void OnTemConditionLogicItemIdChanged();
    partial void OnTemConditionLogicIdChanging(System.Nullable<int> value);
    partial void OnTemConditionLogicIdChanged();
    partial void OnConditionNameChanging(string value);
    partial void OnConditionNameChanged();
    partial void OnSeqChanging(System.Nullable<int> value);
    partial void OnSeqChanged();
    partial void OnControlKeyChanging(System.Nullable<int> value);
    partial void OnControlKeyChanged();
    partial void OnComparisonOperateIdChanging(System.Nullable<int> value);
    partial void OnComparisonOperateIdChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnNextRowRelationChanging(string value);
    partial void OnNextRowRelationChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MSTTemConditionLogicItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemConditionLogicItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TemConditionLogicItemId
		{
			get
			{
				return this._TemConditionLogicItemId;
			}
			set
			{
				if ((this._TemConditionLogicItemId != value))
				{
					this.OnTemConditionLogicItemIdChanging(value);
					this.SendPropertyChanging();
					this._TemConditionLogicItemId = value;
					this.SendPropertyChanged("TemConditionLogicItemId");
					this.OnTemConditionLogicItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemConditionLogicId", DbType="Int")]
		public System.Nullable<int> TemConditionLogicId
		{
			get
			{
				return this._TemConditionLogicId;
			}
			set
			{
				if ((this._TemConditionLogicId != value))
				{
					this.OnTemConditionLogicIdChanging(value);
					this.SendPropertyChanging();
					this._TemConditionLogicId = value;
					this.SendPropertyChanged("TemConditionLogicId");
					this.OnTemConditionLogicIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionName", DbType="NVarChar(100)")]
		public string ConditionName
		{
			get
			{
				return this._ConditionName;
			}
			set
			{
				if ((this._ConditionName != value))
				{
					this.OnConditionNameChanging(value);
					this.SendPropertyChanging();
					this._ConditionName = value;
					this.SendPropertyChanged("ConditionName");
					this.OnConditionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seq", DbType="Int")]
		public System.Nullable<int> Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlKey", DbType="Int")]
		public System.Nullable<int> ControlKey
		{
			get
			{
				return this._ControlKey;
			}
			set
			{
				if ((this._ControlKey != value))
				{
					this.OnControlKeyChanging(value);
					this.SendPropertyChanging();
					this._ControlKey = value;
					this.SendPropertyChanged("ControlKey");
					this.OnControlKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComparisonOperateId", DbType="Int")]
		public System.Nullable<int> ComparisonOperateId
		{
			get
			{
				return this._ComparisonOperateId;
			}
			set
			{
				if ((this._ComparisonOperateId != value))
				{
					this.OnComparisonOperateIdChanging(value);
					this.SendPropertyChanging();
					this._ComparisonOperateId = value;
					this.SendPropertyChanged("ComparisonOperateId");
					this.OnComparisonOperateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(200)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextRowRelation", DbType="NVarChar(20)")]
		public string NextRowRelation
		{
			get
			{
				return this._NextRowRelation;
			}
			set
			{
				if ((this._NextRowRelation != value))
				{
					this.OnNextRowRelationChanging(value);
					this.SendPropertyChanging();
					this._NextRowRelation = value;
					this.SendPropertyChanged("NextRowRelation");
					this.OnNextRowRelationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTTemLineApprove")]
	public partial class MSTTemLineApprove : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TemLineId;
		
		private System.Nullable<int> _TemplateId;
		
		private System.Nullable<int> _MaxPositionLevelId;
		
		private System.Nullable<int> _PositionId;
		
		private System.Nullable<int> _DOAId;
		
		private System.Nullable<int> _ApproveTypeId;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _CompanyId;
		
		private System.Nullable<bool> _IsParallel;
		
		private System.Nullable<bool> _IsApproveAll;
		
		private System.Nullable<int> _ApproveRequire;
		
		private System.Nullable<int> _Seq;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTemLineIdChanging(int value);
    partial void OnTemLineIdChanged();
    partial void OnTemplateIdChanging(System.Nullable<int> value);
    partial void OnTemplateIdChanged();
    partial void OnMaxPositionLevelIdChanging(System.Nullable<int> value);
    partial void OnMaxPositionLevelIdChanged();
    partial void OnPositionIdChanging(System.Nullable<int> value);
    partial void OnPositionIdChanged();
    partial void OnDOAIdChanging(System.Nullable<int> value);
    partial void OnDOAIdChanged();
    partial void OnApproveTypeIdChanging(System.Nullable<int> value);
    partial void OnApproveTypeIdChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCompanyIdChanging(System.Nullable<int> value);
    partial void OnCompanyIdChanged();
    partial void OnIsParallelChanging(System.Nullable<bool> value);
    partial void OnIsParallelChanged();
    partial void OnIsApproveAllChanging(System.Nullable<bool> value);
    partial void OnIsApproveAllChanged();
    partial void OnApproveRequireChanging(System.Nullable<int> value);
    partial void OnApproveRequireChanged();
    partial void OnSeqChanging(System.Nullable<int> value);
    partial void OnSeqChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MSTTemLineApprove()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemLineId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TemLineId
		{
			get
			{
				return this._TemLineId;
			}
			set
			{
				if ((this._TemLineId != value))
				{
					this.OnTemLineIdChanging(value);
					this.SendPropertyChanging();
					this._TemLineId = value;
					this.SendPropertyChanged("TemLineId");
					this.OnTemLineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateId", DbType="Int")]
		public System.Nullable<int> TemplateId
		{
			get
			{
				return this._TemplateId;
			}
			set
			{
				if ((this._TemplateId != value))
				{
					this.OnTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._TemplateId = value;
					this.SendPropertyChanged("TemplateId");
					this.OnTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxPositionLevelId", DbType="Int")]
		public System.Nullable<int> MaxPositionLevelId
		{
			get
			{
				return this._MaxPositionLevelId;
			}
			set
			{
				if ((this._MaxPositionLevelId != value))
				{
					this.OnMaxPositionLevelIdChanging(value);
					this.SendPropertyChanging();
					this._MaxPositionLevelId = value;
					this.SendPropertyChanged("MaxPositionLevelId");
					this.OnMaxPositionLevelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionId", DbType="Int")]
		public System.Nullable<int> PositionId
		{
			get
			{
				return this._PositionId;
			}
			set
			{
				if ((this._PositionId != value))
				{
					this.OnPositionIdChanging(value);
					this.SendPropertyChanging();
					this._PositionId = value;
					this.SendPropertyChanged("PositionId");
					this.OnPositionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOAId", DbType="Int")]
		public System.Nullable<int> DOAId
		{
			get
			{
				return this._DOAId;
			}
			set
			{
				if ((this._DOAId != value))
				{
					this.OnDOAIdChanging(value);
					this.SendPropertyChanging();
					this._DOAId = value;
					this.SendPropertyChanged("DOAId");
					this.OnDOAIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveTypeId", DbType="Int")]
		public System.Nullable<int> ApproveTypeId
		{
			get
			{
				return this._ApproveTypeId;
			}
			set
			{
				if ((this._ApproveTypeId != value))
				{
					this.OnApproveTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ApproveTypeId = value;
					this.SendPropertyChanged("ApproveTypeId");
					this.OnApproveTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int")]
		public System.Nullable<int> CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsParallel", DbType="Bit")]
		public System.Nullable<bool> IsParallel
		{
			get
			{
				return this._IsParallel;
			}
			set
			{
				if ((this._IsParallel != value))
				{
					this.OnIsParallelChanging(value);
					this.SendPropertyChanging();
					this._IsParallel = value;
					this.SendPropertyChanged("IsParallel");
					this.OnIsParallelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproveAll", DbType="Bit")]
		public System.Nullable<bool> IsApproveAll
		{
			get
			{
				return this._IsApproveAll;
			}
			set
			{
				if ((this._IsApproveAll != value))
				{
					this.OnIsApproveAllChanging(value);
					this.SendPropertyChanging();
					this._IsApproveAll = value;
					this.SendPropertyChanged("IsApproveAll");
					this.OnIsApproveAllChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveRequire", DbType="Int")]
		public System.Nullable<int> ApproveRequire
		{
			get
			{
				return this._ApproveRequire;
			}
			set
			{
				if ((this._ApproveRequire != value))
				{
					this.OnApproveRequireChanging(value);
					this.SendPropertyChanging();
					this._ApproveRequire = value;
					this.SendPropertyChanged("ApproveRequire");
					this.OnApproveRequireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seq", DbType="Int")]
		public System.Nullable<int> Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTTemplate")]
	public partial class MSTTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TemplateId;
		
		private string _TemplateCode;
		
		private string _TemplateName;
		
		private string _GroupTemplateName;
		
		private System.Nullable<bool> _isPublic;
		
		private System.Nullable<int> _LanguageId;
		
		private string _TemplateSubject;
		
		private System.Nullable<bool> _AutoApprove;
		
		private string _AutoApproveWhen;
		
		private System.Nullable<bool> _ApproverCanEdit;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<bool> _IsEdit;
		
		private System.Nullable<bool> _IsDelete;
		
		private System.Nullable<bool> _isPDFShowInfo;
		
		private System.Nullable<bool> _isRequesterEditApproval;
		
		private System.Nullable<bool> _isFormControl;
		
		private System.Nullable<bool> _ReqAttach;
		
		private System.Nullable<bool> _IsCheckAccess;
		
		private System.Nullable<bool> _IsDefaultLineApprove;
		
		private System.Nullable<bool> _IsCustomPrefix;
		
		private string _PrefixDocumentNo;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<MSTTemplateLogic> _MSTTemplateLogics;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTemplateIdChanging(int value);
    partial void OnTemplateIdChanged();
    partial void OnTemplateCodeChanging(string value);
    partial void OnTemplateCodeChanged();
    partial void OnTemplateNameChanging(string value);
    partial void OnTemplateNameChanged();
    partial void OnGroupTemplateNameChanging(string value);
    partial void OnGroupTemplateNameChanged();
    partial void OnisPublicChanging(System.Nullable<bool> value);
    partial void OnisPublicChanged();
    partial void OnLanguageIdChanging(System.Nullable<int> value);
    partial void OnLanguageIdChanged();
    partial void OnTemplateSubjectChanging(string value);
    partial void OnTemplateSubjectChanged();
    partial void OnAutoApproveChanging(System.Nullable<bool> value);
    partial void OnAutoApproveChanged();
    partial void OnAutoApproveWhenChanging(string value);
    partial void OnAutoApproveWhenChanged();
    partial void OnApproverCanEditChanging(System.Nullable<bool> value);
    partial void OnApproverCanEditChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnIsEditChanging(System.Nullable<bool> value);
    partial void OnIsEditChanged();
    partial void OnIsDeleteChanging(System.Nullable<bool> value);
    partial void OnIsDeleteChanged();
    partial void OnisPDFShowInfoChanging(System.Nullable<bool> value);
    partial void OnisPDFShowInfoChanged();
    partial void OnisRequesterEditApprovalChanging(System.Nullable<bool> value);
    partial void OnisRequesterEditApprovalChanged();
    partial void OnisFormControlChanging(System.Nullable<bool> value);
    partial void OnisFormControlChanged();
    partial void OnReqAttachChanging(System.Nullable<bool> value);
    partial void OnReqAttachChanged();
    partial void OnIsCheckAccessChanging(System.Nullable<bool> value);
    partial void OnIsCheckAccessChanged();
    partial void OnIsDefaultLineApproveChanging(System.Nullable<bool> value);
    partial void OnIsDefaultLineApproveChanged();
    partial void OnIsCustomPrefixChanging(System.Nullable<bool> value);
    partial void OnIsCustomPrefixChanged();
    partial void OnPrefixDocumentNoChanging(string value);
    partial void OnPrefixDocumentNoChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MSTTemplate()
		{
			this._MSTTemplateLogics = new EntitySet<MSTTemplateLogic>(new Action<MSTTemplateLogic>(this.attach_MSTTemplateLogics), new Action<MSTTemplateLogic>(this.detach_MSTTemplateLogics));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TemplateId
		{
			get
			{
				return this._TemplateId;
			}
			set
			{
				if ((this._TemplateId != value))
				{
					this.OnTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._TemplateId = value;
					this.SendPropertyChanged("TemplateId");
					this.OnTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateCode", DbType="NVarChar(50)")]
		public string TemplateCode
		{
			get
			{
				return this._TemplateCode;
			}
			set
			{
				if ((this._TemplateCode != value))
				{
					this.OnTemplateCodeChanging(value);
					this.SendPropertyChanging();
					this._TemplateCode = value;
					this.SendPropertyChanged("TemplateCode");
					this.OnTemplateCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateName", DbType="NVarChar(500)")]
		public string TemplateName
		{
			get
			{
				return this._TemplateName;
			}
			set
			{
				if ((this._TemplateName != value))
				{
					this.OnTemplateNameChanging(value);
					this.SendPropertyChanging();
					this._TemplateName = value;
					this.SendPropertyChanged("TemplateName");
					this.OnTemplateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupTemplateName", DbType="NVarChar(500)")]
		public string GroupTemplateName
		{
			get
			{
				return this._GroupTemplateName;
			}
			set
			{
				if ((this._GroupTemplateName != value))
				{
					this.OnGroupTemplateNameChanging(value);
					this.SendPropertyChanging();
					this._GroupTemplateName = value;
					this.SendPropertyChanged("GroupTemplateName");
					this.OnGroupTemplateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isPublic", DbType="Bit")]
		public System.Nullable<bool> isPublic
		{
			get
			{
				return this._isPublic;
			}
			set
			{
				if ((this._isPublic != value))
				{
					this.OnisPublicChanging(value);
					this.SendPropertyChanging();
					this._isPublic = value;
					this.SendPropertyChanged("isPublic");
					this.OnisPublicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageId", DbType="Int")]
		public System.Nullable<int> LanguageId
		{
			get
			{
				return this._LanguageId;
			}
			set
			{
				if ((this._LanguageId != value))
				{
					this.OnLanguageIdChanging(value);
					this.SendPropertyChanging();
					this._LanguageId = value;
					this.SendPropertyChanged("LanguageId");
					this.OnLanguageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateSubject", DbType="NVarChar(500)")]
		public string TemplateSubject
		{
			get
			{
				return this._TemplateSubject;
			}
			set
			{
				if ((this._TemplateSubject != value))
				{
					this.OnTemplateSubjectChanging(value);
					this.SendPropertyChanging();
					this._TemplateSubject = value;
					this.SendPropertyChanged("TemplateSubject");
					this.OnTemplateSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoApprove", DbType="Bit")]
		public System.Nullable<bool> AutoApprove
		{
			get
			{
				return this._AutoApprove;
			}
			set
			{
				if ((this._AutoApprove != value))
				{
					this.OnAutoApproveChanging(value);
					this.SendPropertyChanging();
					this._AutoApprove = value;
					this.SendPropertyChanged("AutoApprove");
					this.OnAutoApproveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoApproveWhen", DbType="NVarChar(2)")]
		public string AutoApproveWhen
		{
			get
			{
				return this._AutoApproveWhen;
			}
			set
			{
				if ((this._AutoApproveWhen != value))
				{
					this.OnAutoApproveWhenChanging(value);
					this.SendPropertyChanging();
					this._AutoApproveWhen = value;
					this.SendPropertyChanged("AutoApproveWhen");
					this.OnAutoApproveWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproverCanEdit", DbType="Bit")]
		public System.Nullable<bool> ApproverCanEdit
		{
			get
			{
				return this._ApproverCanEdit;
			}
			set
			{
				if ((this._ApproverCanEdit != value))
				{
					this.OnApproverCanEditChanging(value);
					this.SendPropertyChanging();
					this._ApproverCanEdit = value;
					this.SendPropertyChanged("ApproverCanEdit");
					this.OnApproverCanEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEdit", DbType="Bit")]
		public System.Nullable<bool> IsEdit
		{
			get
			{
				return this._IsEdit;
			}
			set
			{
				if ((this._IsEdit != value))
				{
					this.OnIsEditChanging(value);
					this.SendPropertyChanging();
					this._IsEdit = value;
					this.SendPropertyChanged("IsEdit");
					this.OnIsEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit")]
		public System.Nullable<bool> IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isPDFShowInfo", DbType="Bit")]
		public System.Nullable<bool> isPDFShowInfo
		{
			get
			{
				return this._isPDFShowInfo;
			}
			set
			{
				if ((this._isPDFShowInfo != value))
				{
					this.OnisPDFShowInfoChanging(value);
					this.SendPropertyChanging();
					this._isPDFShowInfo = value;
					this.SendPropertyChanged("isPDFShowInfo");
					this.OnisPDFShowInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isRequesterEditApproval", DbType="Bit")]
		public System.Nullable<bool> isRequesterEditApproval
		{
			get
			{
				return this._isRequesterEditApproval;
			}
			set
			{
				if ((this._isRequesterEditApproval != value))
				{
					this.OnisRequesterEditApprovalChanging(value);
					this.SendPropertyChanging();
					this._isRequesterEditApproval = value;
					this.SendPropertyChanged("isRequesterEditApproval");
					this.OnisRequesterEditApprovalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isFormControl", DbType="Bit")]
		public System.Nullable<bool> isFormControl
		{
			get
			{
				return this._isFormControl;
			}
			set
			{
				if ((this._isFormControl != value))
				{
					this.OnisFormControlChanging(value);
					this.SendPropertyChanging();
					this._isFormControl = value;
					this.SendPropertyChanged("isFormControl");
					this.OnisFormControlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReqAttach", DbType="Bit")]
		public System.Nullable<bool> ReqAttach
		{
			get
			{
				return this._ReqAttach;
			}
			set
			{
				if ((this._ReqAttach != value))
				{
					this.OnReqAttachChanging(value);
					this.SendPropertyChanging();
					this._ReqAttach = value;
					this.SendPropertyChanged("ReqAttach");
					this.OnReqAttachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCheckAccess", DbType="Bit")]
		public System.Nullable<bool> IsCheckAccess
		{
			get
			{
				return this._IsCheckAccess;
			}
			set
			{
				if ((this._IsCheckAccess != value))
				{
					this.OnIsCheckAccessChanging(value);
					this.SendPropertyChanging();
					this._IsCheckAccess = value;
					this.SendPropertyChanged("IsCheckAccess");
					this.OnIsCheckAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefaultLineApprove", DbType="Bit")]
		public System.Nullable<bool> IsDefaultLineApprove
		{
			get
			{
				return this._IsDefaultLineApprove;
			}
			set
			{
				if ((this._IsDefaultLineApprove != value))
				{
					this.OnIsDefaultLineApproveChanging(value);
					this.SendPropertyChanging();
					this._IsDefaultLineApprove = value;
					this.SendPropertyChanged("IsDefaultLineApprove");
					this.OnIsDefaultLineApproveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCustomPrefix", DbType="Bit")]
		public System.Nullable<bool> IsCustomPrefix
		{
			get
			{
				return this._IsCustomPrefix;
			}
			set
			{
				if ((this._IsCustomPrefix != value))
				{
					this.OnIsCustomPrefixChanging(value);
					this.SendPropertyChanging();
					this._IsCustomPrefix = value;
					this.SendPropertyChanged("IsCustomPrefix");
					this.OnIsCustomPrefixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrefixDocumentNo", DbType="NVarChar(100)")]
		public string PrefixDocumentNo
		{
			get
			{
				return this._PrefixDocumentNo;
			}
			set
			{
				if ((this._PrefixDocumentNo != value))
				{
					this.OnPrefixDocumentNoChanging(value);
					this.SendPropertyChanging();
					this._PrefixDocumentNo = value;
					this.SendPropertyChanged("PrefixDocumentNo");
					this.OnPrefixDocumentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MSTTemplate_MSTTemplateLogic", Storage="_MSTTemplateLogics", ThisKey="TemplateId", OtherKey="TemplateId")]
		public EntitySet<MSTTemplateLogic> MSTTemplateLogics
		{
			get
			{
				return this._MSTTemplateLogics;
			}
			set
			{
				this._MSTTemplateLogics.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MSTTemplateLogics(MSTTemplateLogic entity)
		{
			this.SendPropertyChanging();
			entity.MSTTemplate = this;
		}
		
		private void detach_MSTTemplateLogics(MSTTemplateLogic entity)
		{
			this.SendPropertyChanging();
			entity.MSTTemplate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTTemplateControlVersion")]
	public partial class MSTTemplateControlVersion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ControlVersionId;
		
		private int _TemplateVersion;
		
		private int _TemplateId;
		
		private System.Nullable<bool> _IsCurrent;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnControlVersionIdChanging(int value);
    partial void OnControlVersionIdChanged();
    partial void OnTemplateVersionChanging(int value);
    partial void OnTemplateVersionChanged();
    partial void OnTemplateIdChanging(int value);
    partial void OnTemplateIdChanged();
    partial void OnIsCurrentChanging(System.Nullable<bool> value);
    partial void OnIsCurrentChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MSTTemplateControlVersion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlVersionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ControlVersionId
		{
			get
			{
				return this._ControlVersionId;
			}
			set
			{
				if ((this._ControlVersionId != value))
				{
					this.OnControlVersionIdChanging(value);
					this.SendPropertyChanging();
					this._ControlVersionId = value;
					this.SendPropertyChanged("ControlVersionId");
					this.OnControlVersionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateVersion", DbType="Int NOT NULL")]
		public int TemplateVersion
		{
			get
			{
				return this._TemplateVersion;
			}
			set
			{
				if ((this._TemplateVersion != value))
				{
					this.OnTemplateVersionChanging(value);
					this.SendPropertyChanging();
					this._TemplateVersion = value;
					this.SendPropertyChanged("TemplateVersion");
					this.OnTemplateVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateId", DbType="Int NOT NULL")]
		public int TemplateId
		{
			get
			{
				return this._TemplateId;
			}
			set
			{
				if ((this._TemplateId != value))
				{
					this.OnTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._TemplateId = value;
					this.SendPropertyChanged("TemplateId");
					this.OnTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCurrent", DbType="Bit")]
		public System.Nullable<bool> IsCurrent
		{
			get
			{
				return this._IsCurrent;
			}
			set
			{
				if ((this._IsCurrent != value))
				{
					this.OnIsCurrentChanging(value);
					this.SendPropertyChanging();
					this._IsCurrent = value;
					this.SendPropertyChanged("IsCurrent");
					this.OnIsCurrentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTTemplateEmail")]
	public partial class MSTTemplateEmail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TemplateEmailId;
		
		private System.Nullable<int> _TemplateId;
		
		private System.Nullable<int> _EmployeeId;
		
		private string _EmailType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTemplateEmailIdChanging(int value);
    partial void OnTemplateEmailIdChanged();
    partial void OnTemplateIdChanging(System.Nullable<int> value);
    partial void OnTemplateIdChanged();
    partial void OnEmployeeIdChanging(System.Nullable<int> value);
    partial void OnEmployeeIdChanged();
    partial void OnEmailTypeChanging(string value);
    partial void OnEmailTypeChanged();
    #endregion
		
		public MSTTemplateEmail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateEmailId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TemplateEmailId
		{
			get
			{
				return this._TemplateEmailId;
			}
			set
			{
				if ((this._TemplateEmailId != value))
				{
					this.OnTemplateEmailIdChanging(value);
					this.SendPropertyChanging();
					this._TemplateEmailId = value;
					this.SendPropertyChanged("TemplateEmailId");
					this.OnTemplateEmailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateId", DbType="Int")]
		public System.Nullable<int> TemplateId
		{
			get
			{
				return this._TemplateId;
			}
			set
			{
				if ((this._TemplateId != value))
				{
					this.OnTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._TemplateId = value;
					this.SendPropertyChanged("TemplateId");
					this.OnTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int")]
		public System.Nullable<int> EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailType", DbType="NVarChar(10)")]
		public string EmailType
		{
			get
			{
				return this._EmailType;
			}
			set
			{
				if ((this._EmailType != value))
				{
					this.OnEmailTypeChanging(value);
					this.SendPropertyChanging();
					this._EmailType = value;
					this.SendPropertyChanged("EmailType");
					this.OnEmailTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTTemplateLogic")]
	public partial class MSTTemplateLogic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogicId;
		
		private int _TemplateId;
		
		private System.Nullable<int> _Sequence;
		
		private System.Nullable<int> _LogicTypeId;
		
		private System.Nullable<bool> _ResetOnAction;
		
		private string _Description;
		
		private string _DataSourceName;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntityRef<MSTTemplate> _MSTTemplate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogicIdChanging(int value);
    partial void OnLogicIdChanged();
    partial void OnTemplateIdChanging(int value);
    partial void OnTemplateIdChanged();
    partial void OnSequenceChanging(System.Nullable<int> value);
    partial void OnSequenceChanged();
    partial void OnLogicTypeIdChanging(System.Nullable<int> value);
    partial void OnLogicTypeIdChanged();
    partial void OnResetOnActionChanging(System.Nullable<bool> value);
    partial void OnResetOnActionChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDataSourceNameChanging(string value);
    partial void OnDataSourceNameChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MSTTemplateLogic()
		{
			this._MSTTemplate = default(EntityRef<MSTTemplate>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LogicId
		{
			get
			{
				return this._LogicId;
			}
			set
			{
				if ((this._LogicId != value))
				{
					this.OnLogicIdChanging(value);
					this.SendPropertyChanging();
					this._LogicId = value;
					this.SendPropertyChanged("LogicId");
					this.OnLogicIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateId", DbType="Int NOT NULL")]
		public int TemplateId
		{
			get
			{
				return this._TemplateId;
			}
			set
			{
				if ((this._TemplateId != value))
				{
					if (this._MSTTemplate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._TemplateId = value;
					this.SendPropertyChanged("TemplateId");
					this.OnTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sequence", DbType="Int")]
		public System.Nullable<int> Sequence
		{
			get
			{
				return this._Sequence;
			}
			set
			{
				if ((this._Sequence != value))
				{
					this.OnSequenceChanging(value);
					this.SendPropertyChanging();
					this._Sequence = value;
					this.SendPropertyChanged("Sequence");
					this.OnSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicTypeId", DbType="Int")]
		public System.Nullable<int> LogicTypeId
		{
			get
			{
				return this._LogicTypeId;
			}
			set
			{
				if ((this._LogicTypeId != value))
				{
					this.OnLogicTypeIdChanging(value);
					this.SendPropertyChanging();
					this._LogicTypeId = value;
					this.SendPropertyChanged("LogicTypeId");
					this.OnLogicTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResetOnAction", DbType="Bit")]
		public System.Nullable<bool> ResetOnAction
		{
			get
			{
				return this._ResetOnAction;
			}
			set
			{
				if ((this._ResetOnAction != value))
				{
					this.OnResetOnActionChanging(value);
					this.SendPropertyChanging();
					this._ResetOnAction = value;
					this.SendPropertyChanged("ResetOnAction");
					this.OnResetOnActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSourceName", DbType="NVarChar(100)")]
		public string DataSourceName
		{
			get
			{
				return this._DataSourceName;
			}
			set
			{
				if ((this._DataSourceName != value))
				{
					this.OnDataSourceNameChanging(value);
					this.SendPropertyChanging();
					this._DataSourceName = value;
					this.SendPropertyChanged("DataSourceName");
					this.OnDataSourceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MSTTemplate_MSTTemplateLogic", Storage="_MSTTemplate", ThisKey="TemplateId", OtherKey="TemplateId", IsForeignKey=true)]
		public MSTTemplate MSTTemplate
		{
			get
			{
				return this._MSTTemplate.Entity;
			}
			set
			{
				MSTTemplate previousValue = this._MSTTemplate.Entity;
				if (((previousValue != value) 
							|| (this._MSTTemplate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MSTTemplate.Entity = null;
						previousValue.MSTTemplateLogics.Remove(this);
					}
					this._MSTTemplate.Entity = value;
					if ((value != null))
					{
						value.MSTTemplateLogics.Add(this);
						this._TemplateId = value.TemplateId;
					}
					else
					{
						this._TemplateId = default(int);
					}
					this.SendPropertyChanged("MSTTemplate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTTemplateRefConfig")]
	public partial class MSTTemplateRefConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RefConfigId;
		
		private int _TemplateId;
		
		private System.Nullable<bool> _IsOnTop;
		
		private System.Nullable<bool> _IsMultiSelect;
		
		private System.Nullable<bool> _IsUserAffiliation;
		
		private System.Nullable<bool> _IsQuaterCycle;
		
		private System.Nullable<bool> _IsCopyLineApprove;
		
		private System.Nullable<bool> _IsRefAttachment;
		
		private System.Nullable<long> _DisplayControlId;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRefConfigIdChanging(int value);
    partial void OnRefConfigIdChanged();
    partial void OnTemplateIdChanging(int value);
    partial void OnTemplateIdChanged();
    partial void OnIsOnTopChanging(System.Nullable<bool> value);
    partial void OnIsOnTopChanged();
    partial void OnIsMultiSelectChanging(System.Nullable<bool> value);
    partial void OnIsMultiSelectChanged();
    partial void OnIsUserAffiliationChanging(System.Nullable<bool> value);
    partial void OnIsUserAffiliationChanged();
    partial void OnIsQuaterCycleChanging(System.Nullable<bool> value);
    partial void OnIsQuaterCycleChanged();
    partial void OnIsCopyLineApproveChanging(System.Nullable<bool> value);
    partial void OnIsCopyLineApproveChanged();
    partial void OnIsRefAttachmentChanging(System.Nullable<bool> value);
    partial void OnIsRefAttachmentChanged();
    partial void OnDisplayControlIdChanging(System.Nullable<long> value);
    partial void OnDisplayControlIdChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MSTTemplateRefConfig()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefConfigId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RefConfigId
		{
			get
			{
				return this._RefConfigId;
			}
			set
			{
				if ((this._RefConfigId != value))
				{
					this.OnRefConfigIdChanging(value);
					this.SendPropertyChanging();
					this._RefConfigId = value;
					this.SendPropertyChanged("RefConfigId");
					this.OnRefConfigIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateId", DbType="Int NOT NULL")]
		public int TemplateId
		{
			get
			{
				return this._TemplateId;
			}
			set
			{
				if ((this._TemplateId != value))
				{
					this.OnTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._TemplateId = value;
					this.SendPropertyChanged("TemplateId");
					this.OnTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnTop", DbType="Bit")]
		public System.Nullable<bool> IsOnTop
		{
			get
			{
				return this._IsOnTop;
			}
			set
			{
				if ((this._IsOnTop != value))
				{
					this.OnIsOnTopChanging(value);
					this.SendPropertyChanging();
					this._IsOnTop = value;
					this.SendPropertyChanged("IsOnTop");
					this.OnIsOnTopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMultiSelect", DbType="Bit")]
		public System.Nullable<bool> IsMultiSelect
		{
			get
			{
				return this._IsMultiSelect;
			}
			set
			{
				if ((this._IsMultiSelect != value))
				{
					this.OnIsMultiSelectChanging(value);
					this.SendPropertyChanging();
					this._IsMultiSelect = value;
					this.SendPropertyChanged("IsMultiSelect");
					this.OnIsMultiSelectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUserAffiliation", DbType="Bit")]
		public System.Nullable<bool> IsUserAffiliation
		{
			get
			{
				return this._IsUserAffiliation;
			}
			set
			{
				if ((this._IsUserAffiliation != value))
				{
					this.OnIsUserAffiliationChanging(value);
					this.SendPropertyChanging();
					this._IsUserAffiliation = value;
					this.SendPropertyChanged("IsUserAffiliation");
					this.OnIsUserAffiliationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsQuaterCycle", DbType="Bit")]
		public System.Nullable<bool> IsQuaterCycle
		{
			get
			{
				return this._IsQuaterCycle;
			}
			set
			{
				if ((this._IsQuaterCycle != value))
				{
					this.OnIsQuaterCycleChanging(value);
					this.SendPropertyChanging();
					this._IsQuaterCycle = value;
					this.SendPropertyChanged("IsQuaterCycle");
					this.OnIsQuaterCycleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCopyLineApprove", DbType="Bit")]
		public System.Nullable<bool> IsCopyLineApprove
		{
			get
			{
				return this._IsCopyLineApprove;
			}
			set
			{
				if ((this._IsCopyLineApprove != value))
				{
					this.OnIsCopyLineApproveChanging(value);
					this.SendPropertyChanging();
					this._IsCopyLineApprove = value;
					this.SendPropertyChanged("IsCopyLineApprove");
					this.OnIsCopyLineApproveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRefAttachment", DbType="Bit")]
		public System.Nullable<bool> IsRefAttachment
		{
			get
			{
				return this._IsRefAttachment;
			}
			set
			{
				if ((this._IsRefAttachment != value))
				{
					this.OnIsRefAttachmentChanging(value);
					this.SendPropertyChanging();
					this._IsRefAttachment = value;
					this.SendPropertyChanged("IsRefAttachment");
					this.OnIsRefAttachmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayControlId", DbType="BigInt")]
		public System.Nullable<long> DisplayControlId
		{
			get
			{
				return this._DisplayControlId;
			}
			set
			{
				if ((this._DisplayControlId != value))
				{
					this.OnDisplayControlIdChanging(value);
					this.SendPropertyChanging();
					this._DisplayControlId = value;
					this.SendPropertyChanged("DisplayControlId");
					this.OnDisplayControlIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTTemplateRefControlConfig")]
	public partial class MSTTemplateRefControlConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RefDocConfigId;
		
		private int _RefConfigId;
		
		private System.Nullable<int> _TemplateRefId;
		
		private System.Nullable<bool> _RefDocControlId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRefDocConfigIdChanging(int value);
    partial void OnRefDocConfigIdChanged();
    partial void OnRefConfigIdChanging(int value);
    partial void OnRefConfigIdChanged();
    partial void OnTemplateRefIdChanging(System.Nullable<int> value);
    partial void OnTemplateRefIdChanged();
    partial void OnRefDocControlIdChanging(System.Nullable<bool> value);
    partial void OnRefDocControlIdChanged();
    #endregion
		
		public MSTTemplateRefControlConfig()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefDocConfigId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RefDocConfigId
		{
			get
			{
				return this._RefDocConfigId;
			}
			set
			{
				if ((this._RefDocConfigId != value))
				{
					this.OnRefDocConfigIdChanging(value);
					this.SendPropertyChanging();
					this._RefDocConfigId = value;
					this.SendPropertyChanged("RefDocConfigId");
					this.OnRefDocConfigIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefConfigId", DbType="Int NOT NULL")]
		public int RefConfigId
		{
			get
			{
				return this._RefConfigId;
			}
			set
			{
				if ((this._RefConfigId != value))
				{
					this.OnRefConfigIdChanging(value);
					this.SendPropertyChanging();
					this._RefConfigId = value;
					this.SendPropertyChanged("RefConfigId");
					this.OnRefConfigIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateRefId", DbType="Int")]
		public System.Nullable<int> TemplateRefId
		{
			get
			{
				return this._TemplateRefId;
			}
			set
			{
				if ((this._TemplateRefId != value))
				{
					this.OnTemplateRefIdChanging(value);
					this.SendPropertyChanging();
					this._TemplateRefId = value;
					this.SendPropertyChanged("TemplateRefId");
					this.OnTemplateRefIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefDocControlId", DbType="Bit")]
		public System.Nullable<bool> RefDocControlId
		{
			get
			{
				return this._RefDocControlId;
			}
			set
			{
				if ((this._RefDocControlId != value))
				{
					this.OnRefDocControlIdChanging(value);
					this.SendPropertyChanging();
					this._RefDocControlId = value;
					this.SendPropertyChanged("RefDocControlId");
					this.OnRefDocControlIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTTemplateRefDoc")]
	public partial class MSTTemplateRefDoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TemplateRefDocId;
		
		private int _TemplateId;
		
		private int _TemplateRefId;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTemplateRefDocIdChanging(int value);
    partial void OnTemplateRefDocIdChanged();
    partial void OnTemplateIdChanging(int value);
    partial void OnTemplateIdChanged();
    partial void OnTemplateRefIdChanging(int value);
    partial void OnTemplateRefIdChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MSTTemplateRefDoc()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateRefDocId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TemplateRefDocId
		{
			get
			{
				return this._TemplateRefDocId;
			}
			set
			{
				if ((this._TemplateRefDocId != value))
				{
					this.OnTemplateRefDocIdChanging(value);
					this.SendPropertyChanging();
					this._TemplateRefDocId = value;
					this.SendPropertyChanged("TemplateRefDocId");
					this.OnTemplateRefDocIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateId", DbType="Int NOT NULL")]
		public int TemplateId
		{
			get
			{
				return this._TemplateId;
			}
			set
			{
				if ((this._TemplateId != value))
				{
					this.OnTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._TemplateId = value;
					this.SendPropertyChanged("TemplateId");
					this.OnTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateRefId", DbType="Int NOT NULL")]
		public int TemplateRefId
		{
			get
			{
				return this._TemplateRefId;
			}
			set
			{
				if ((this._TemplateRefId != value))
				{
					this.OnTemplateRefIdChanging(value);
					this.SendPropertyChanging();
					this._TemplateRefId = value;
					this.SendPropertyChanged("TemplateRefId");
					this.OnTemplateRefIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTTemplateRefDocSelectedControl")]
	public partial class MSTTemplateRefDocSelectedControl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RefControlId;
		
		private int _RefDocConfigId;
		
		private System.Nullable<int> _TemplateRefId;
		
		private System.Nullable<int> _Infold;
		
		private System.Nullable<int> _ControlKey;
		
		private System.Nullable<int> _ControlRefKey;
		
		private bool _IsTableType;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRefControlIdChanging(int value);
    partial void OnRefControlIdChanged();
    partial void OnRefDocConfigIdChanging(int value);
    partial void OnRefDocConfigIdChanged();
    partial void OnTemplateRefIdChanging(System.Nullable<int> value);
    partial void OnTemplateRefIdChanged();
    partial void OnInfoldChanging(System.Nullable<int> value);
    partial void OnInfoldChanged();
    partial void OnControlKeyChanging(System.Nullable<int> value);
    partial void OnControlKeyChanged();
    partial void OnControlRefKeyChanging(System.Nullable<int> value);
    partial void OnControlRefKeyChanged();
    partial void OnIsTableTypeChanging(bool value);
    partial void OnIsTableTypeChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MSTTemplateRefDocSelectedControl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefControlId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RefControlId
		{
			get
			{
				return this._RefControlId;
			}
			set
			{
				if ((this._RefControlId != value))
				{
					this.OnRefControlIdChanging(value);
					this.SendPropertyChanging();
					this._RefControlId = value;
					this.SendPropertyChanged("RefControlId");
					this.OnRefControlIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefDocConfigId", DbType="Int NOT NULL")]
		public int RefDocConfigId
		{
			get
			{
				return this._RefDocConfigId;
			}
			set
			{
				if ((this._RefDocConfigId != value))
				{
					this.OnRefDocConfigIdChanging(value);
					this.SendPropertyChanging();
					this._RefDocConfigId = value;
					this.SendPropertyChanged("RefDocConfigId");
					this.OnRefDocConfigIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateRefId", DbType="Int")]
		public System.Nullable<int> TemplateRefId
		{
			get
			{
				return this._TemplateRefId;
			}
			set
			{
				if ((this._TemplateRefId != value))
				{
					this.OnTemplateRefIdChanging(value);
					this.SendPropertyChanging();
					this._TemplateRefId = value;
					this.SendPropertyChanged("TemplateRefId");
					this.OnTemplateRefIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Infold", DbType="Int")]
		public System.Nullable<int> Infold
		{
			get
			{
				return this._Infold;
			}
			set
			{
				if ((this._Infold != value))
				{
					this.OnInfoldChanging(value);
					this.SendPropertyChanging();
					this._Infold = value;
					this.SendPropertyChanged("Infold");
					this.OnInfoldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlKey", DbType="Int")]
		public System.Nullable<int> ControlKey
		{
			get
			{
				return this._ControlKey;
			}
			set
			{
				if ((this._ControlKey != value))
				{
					this.OnControlKeyChanging(value);
					this.SendPropertyChanging();
					this._ControlKey = value;
					this.SendPropertyChanged("ControlKey");
					this.OnControlKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlRefKey", DbType="Int")]
		public System.Nullable<int> ControlRefKey
		{
			get
			{
				return this._ControlRefKey;
			}
			set
			{
				if ((this._ControlRefKey != value))
				{
					this.OnControlRefKeyChanging(value);
					this.SendPropertyChanging();
					this._ControlRefKey = value;
					this.SendPropertyChanged("ControlRefKey");
					this.OnControlRefKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTableType", DbType="Bit NOT NULL")]
		public bool IsTableType
		{
			get
			{
				return this._IsTableType;
			}
			set
			{
				if ((this._IsTableType != value))
				{
					this.OnIsTableTypeChanging(value);
					this.SendPropertyChanging();
					this._IsTableType = value;
					this.SendPropertyChanged("IsTableType");
					this.OnIsTableTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTTemplateRefDocSelectedTableControl")]
	public partial class MSTTemplateRefDocSelectedTableControl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RefTbControlId;
		
		private int _RefDocConfigId;
		
		private int _TemplateRefId;
		
		private int _TableControlKey;
		
		private System.Nullable<int> _ControlKey;
		
		private int _ControlRefKey;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRefTbControlIdChanging(int value);
    partial void OnRefTbControlIdChanged();
    partial void OnRefDocConfigIdChanging(int value);
    partial void OnRefDocConfigIdChanged();
    partial void OnTemplateRefIdChanging(int value);
    partial void OnTemplateRefIdChanged();
    partial void OnTableControlKeyChanging(int value);
    partial void OnTableControlKeyChanged();
    partial void OnControlKeyChanging(System.Nullable<int> value);
    partial void OnControlKeyChanged();
    partial void OnControlRefKeyChanging(int value);
    partial void OnControlRefKeyChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MSTTemplateRefDocSelectedTableControl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefTbControlId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RefTbControlId
		{
			get
			{
				return this._RefTbControlId;
			}
			set
			{
				if ((this._RefTbControlId != value))
				{
					this.OnRefTbControlIdChanging(value);
					this.SendPropertyChanging();
					this._RefTbControlId = value;
					this.SendPropertyChanged("RefTbControlId");
					this.OnRefTbControlIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefDocConfigId", DbType="Int NOT NULL")]
		public int RefDocConfigId
		{
			get
			{
				return this._RefDocConfigId;
			}
			set
			{
				if ((this._RefDocConfigId != value))
				{
					this.OnRefDocConfigIdChanging(value);
					this.SendPropertyChanging();
					this._RefDocConfigId = value;
					this.SendPropertyChanged("RefDocConfigId");
					this.OnRefDocConfigIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateRefId", DbType="Int NOT NULL")]
		public int TemplateRefId
		{
			get
			{
				return this._TemplateRefId;
			}
			set
			{
				if ((this._TemplateRefId != value))
				{
					this.OnTemplateRefIdChanging(value);
					this.SendPropertyChanging();
					this._TemplateRefId = value;
					this.SendPropertyChanged("TemplateRefId");
					this.OnTemplateRefIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableControlKey", DbType="Int NOT NULL")]
		public int TableControlKey
		{
			get
			{
				return this._TableControlKey;
			}
			set
			{
				if ((this._TableControlKey != value))
				{
					this.OnTableControlKeyChanging(value);
					this.SendPropertyChanging();
					this._TableControlKey = value;
					this.SendPropertyChanged("TableControlKey");
					this.OnTableControlKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlKey", DbType="Int")]
		public System.Nullable<int> ControlKey
		{
			get
			{
				return this._ControlKey;
			}
			set
			{
				if ((this._ControlKey != value))
				{
					this.OnControlKeyChanging(value);
					this.SendPropertyChanging();
					this._ControlKey = value;
					this.SendPropertyChanged("ControlKey");
					this.OnControlKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlRefKey", DbType="Int NOT NULL")]
		public int ControlRefKey
		{
			get
			{
				return this._ControlRefKey;
			}
			set
			{
				if ((this._ControlRefKey != value))
				{
					this.OnControlRefKeyChanging(value);
					this.SendPropertyChanging();
					this._ControlRefKey = value;
					this.SendPropertyChanged("ControlRefKey");
					this.OnControlRefKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTTemSpecificApprover")]
	public partial class MSTTemSpecificApprover : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TemSpecificId;
		
		private System.Nullable<int> _TemLineId;
		
		private System.Nullable<int> _EmployeeId;
		
		private System.Nullable<int> _RoleId;
		
		private System.Nullable<bool> _IsRequestor;
		
		private int _SignatureId;
		
		private System.Nullable<int> _Seq;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTemSpecificIdChanging(int value);
    partial void OnTemSpecificIdChanged();
    partial void OnTemLineIdChanging(System.Nullable<int> value);
    partial void OnTemLineIdChanged();
    partial void OnEmployeeIdChanging(System.Nullable<int> value);
    partial void OnEmployeeIdChanged();
    partial void OnRoleIdChanging(System.Nullable<int> value);
    partial void OnRoleIdChanged();
    partial void OnIsRequestorChanging(System.Nullable<bool> value);
    partial void OnIsRequestorChanged();
    partial void OnSignatureIdChanging(int value);
    partial void OnSignatureIdChanged();
    partial void OnSeqChanging(System.Nullable<int> value);
    partial void OnSeqChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MSTTemSpecificApprover()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemSpecificId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TemSpecificId
		{
			get
			{
				return this._TemSpecificId;
			}
			set
			{
				if ((this._TemSpecificId != value))
				{
					this.OnTemSpecificIdChanging(value);
					this.SendPropertyChanging();
					this._TemSpecificId = value;
					this.SendPropertyChanged("TemSpecificId");
					this.OnTemSpecificIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemLineId", DbType="Int")]
		public System.Nullable<int> TemLineId
		{
			get
			{
				return this._TemLineId;
			}
			set
			{
				if ((this._TemLineId != value))
				{
					this.OnTemLineIdChanging(value);
					this.SendPropertyChanging();
					this._TemLineId = value;
					this.SendPropertyChanged("TemLineId");
					this.OnTemLineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int")]
		public System.Nullable<int> EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int")]
		public System.Nullable<int> RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequestor", DbType="Bit")]
		public System.Nullable<bool> IsRequestor
		{
			get
			{
				return this._IsRequestor;
			}
			set
			{
				if ((this._IsRequestor != value))
				{
					this.OnIsRequestorChanging(value);
					this.SendPropertyChanging();
					this._IsRequestor = value;
					this.SendPropertyChanged("IsRequestor");
					this.OnIsRequestorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignatureId", DbType="Int NOT NULL")]
		public int SignatureId
		{
			get
			{
				return this._SignatureId;
			}
			set
			{
				if ((this._SignatureId != value))
				{
					this.OnSignatureIdChanging(value);
					this.SendPropertyChanging();
					this._SignatureId = value;
					this.SendPropertyChanged("SignatureId");
					this.OnSignatureIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seq", DbType="Int")]
		public System.Nullable<int> Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSTUserPermission")]
	public partial class MSTUserPermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployeeId;
		
		private int _RoleId;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _Seq;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnSeqChanging(System.Nullable<int> value);
    partial void OnSeqChanged();
    #endregion
		
		public MSTUserPermission()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seq", DbType="Int")]
		public System.Nullable<int> Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRNActionHistory")]
	public partial class TRNActionHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ActionId;
		
		private System.Nullable<int> _MemoId;
		
		private System.Nullable<int> _ActorId;
		
		private string _ActorName;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private string _ActionProcess;
		
		private System.Nullable<System.DateTime> _ActionDate;
		
		private string _Comment;
		
		private System.Nullable<int> _SignatureId;
		
		private System.Nullable<bool> _IsActive;
		
		private string _Platform;
		
		private string _IPAddress;
		
		private System.Nullable<int> _ActorPositionId;
		
		private System.Nullable<int> _ActorDepartmentId;
		
		private string _ListFilePath;
		
		private System.Nullable<int> _DelegateActorId;
		
		private System.Nullable<int> _ProcessMinute;
		
		private System.Nullable<int> _LineApproveSeq;
		
		private System.Nullable<int> _MemoStatusId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActionIdChanging(int value);
    partial void OnActionIdChanged();
    partial void OnMemoIdChanging(System.Nullable<int> value);
    partial void OnMemoIdChanged();
    partial void OnActorIdChanging(System.Nullable<int> value);
    partial void OnActorIdChanged();
    partial void OnActorNameChanging(string value);
    partial void OnActorNameChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnActionProcessChanging(string value);
    partial void OnActionProcessChanged();
    partial void OnActionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActionDateChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnSignatureIdChanging(System.Nullable<int> value);
    partial void OnSignatureIdChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnPlatformChanging(string value);
    partial void OnPlatformChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnActorPositionIdChanging(System.Nullable<int> value);
    partial void OnActorPositionIdChanged();
    partial void OnActorDepartmentIdChanging(System.Nullable<int> value);
    partial void OnActorDepartmentIdChanged();
    partial void OnListFilePathChanging(string value);
    partial void OnListFilePathChanged();
    partial void OnDelegateActorIdChanging(System.Nullable<int> value);
    partial void OnDelegateActorIdChanged();
    partial void OnProcessMinuteChanging(System.Nullable<int> value);
    partial void OnProcessMinuteChanged();
    partial void OnLineApproveSeqChanging(System.Nullable<int> value);
    partial void OnLineApproveSeqChanged();
    partial void OnMemoStatusIdChanging(System.Nullable<int> value);
    partial void OnMemoStatusIdChanged();
    #endregion
		
		public TRNActionHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ActionId
		{
			get
			{
				return this._ActionId;
			}
			set
			{
				if ((this._ActionId != value))
				{
					this.OnActionIdChanging(value);
					this.SendPropertyChanging();
					this._ActionId = value;
					this.SendPropertyChanged("ActionId");
					this.OnActionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoId", DbType="Int")]
		public System.Nullable<int> MemoId
		{
			get
			{
				return this._MemoId;
			}
			set
			{
				if ((this._MemoId != value))
				{
					this.OnMemoIdChanging(value);
					this.SendPropertyChanging();
					this._MemoId = value;
					this.SendPropertyChanged("MemoId");
					this.OnMemoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActorId", DbType="Int")]
		public System.Nullable<int> ActorId
		{
			get
			{
				return this._ActorId;
			}
			set
			{
				if ((this._ActorId != value))
				{
					this.OnActorIdChanging(value);
					this.SendPropertyChanging();
					this._ActorId = value;
					this.SendPropertyChanged("ActorId");
					this.OnActorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActorName", DbType="NVarChar(500)")]
		public string ActorName
		{
			get
			{
				return this._ActorName;
			}
			set
			{
				if ((this._ActorName != value))
				{
					this.OnActorNameChanging(value);
					this.SendPropertyChanging();
					this._ActorName = value;
					this.SendPropertyChanged("ActorName");
					this.OnActorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionProcess", DbType="NVarChar(100)")]
		public string ActionProcess
		{
			get
			{
				return this._ActionProcess;
			}
			set
			{
				if ((this._ActionProcess != value))
				{
					this.OnActionProcessChanging(value);
					this.SendPropertyChanging();
					this._ActionProcess = value;
					this.SendPropertyChanged("ActionProcess");
					this.OnActionProcessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActionDate
		{
			get
			{
				return this._ActionDate;
			}
			set
			{
				if ((this._ActionDate != value))
				{
					this.OnActionDateChanging(value);
					this.SendPropertyChanging();
					this._ActionDate = value;
					this.SendPropertyChanged("ActionDate");
					this.OnActionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignatureId", DbType="Int")]
		public System.Nullable<int> SignatureId
		{
			get
			{
				return this._SignatureId;
			}
			set
			{
				if ((this._SignatureId != value))
				{
					this.OnSignatureIdChanging(value);
					this.SendPropertyChanging();
					this._SignatureId = value;
					this.SendPropertyChanged("SignatureId");
					this.OnSignatureIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Platform", DbType="NVarChar(100)")]
		public string Platform
		{
			get
			{
				return this._Platform;
			}
			set
			{
				if ((this._Platform != value))
				{
					this.OnPlatformChanging(value);
					this.SendPropertyChanging();
					this._Platform = value;
					this.SendPropertyChanged("Platform");
					this.OnPlatformChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="NVarChar(500)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActorPositionId", DbType="Int")]
		public System.Nullable<int> ActorPositionId
		{
			get
			{
				return this._ActorPositionId;
			}
			set
			{
				if ((this._ActorPositionId != value))
				{
					this.OnActorPositionIdChanging(value);
					this.SendPropertyChanging();
					this._ActorPositionId = value;
					this.SendPropertyChanged("ActorPositionId");
					this.OnActorPositionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActorDepartmentId", DbType="Int")]
		public System.Nullable<int> ActorDepartmentId
		{
			get
			{
				return this._ActorDepartmentId;
			}
			set
			{
				if ((this._ActorDepartmentId != value))
				{
					this.OnActorDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._ActorDepartmentId = value;
					this.SendPropertyChanged("ActorDepartmentId");
					this.OnActorDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListFilePath", DbType="NVarChar(MAX)")]
		public string ListFilePath
		{
			get
			{
				return this._ListFilePath;
			}
			set
			{
				if ((this._ListFilePath != value))
				{
					this.OnListFilePathChanging(value);
					this.SendPropertyChanging();
					this._ListFilePath = value;
					this.SendPropertyChanged("ListFilePath");
					this.OnListFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelegateActorId", DbType="Int")]
		public System.Nullable<int> DelegateActorId
		{
			get
			{
				return this._DelegateActorId;
			}
			set
			{
				if ((this._DelegateActorId != value))
				{
					this.OnDelegateActorIdChanging(value);
					this.SendPropertyChanging();
					this._DelegateActorId = value;
					this.SendPropertyChanged("DelegateActorId");
					this.OnDelegateActorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessMinute", DbType="Int")]
		public System.Nullable<int> ProcessMinute
		{
			get
			{
				return this._ProcessMinute;
			}
			set
			{
				if ((this._ProcessMinute != value))
				{
					this.OnProcessMinuteChanging(value);
					this.SendPropertyChanging();
					this._ProcessMinute = value;
					this.SendPropertyChanged("ProcessMinute");
					this.OnProcessMinuteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineApproveSeq", DbType="Int")]
		public System.Nullable<int> LineApproveSeq
		{
			get
			{
				return this._LineApproveSeq;
			}
			set
			{
				if ((this._LineApproveSeq != value))
				{
					this.OnLineApproveSeqChanging(value);
					this.SendPropertyChanging();
					this._LineApproveSeq = value;
					this.SendPropertyChanged("LineApproveSeq");
					this.OnLineApproveSeqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoStatusId", DbType="Int")]
		public System.Nullable<int> MemoStatusId
		{
			get
			{
				return this._MemoStatusId;
			}
			set
			{
				if ((this._MemoStatusId != value))
				{
					this.OnMemoStatusIdChanging(value);
					this.SendPropertyChanging();
					this._MemoStatusId = value;
					this.SendPropertyChanged("MemoStatusId");
					this.OnMemoStatusIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRNAttachFile")]
	public partial class TRNAttachFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AttachId;
		
		private System.Nullable<int> _AttachGroupId;
		
		private System.Nullable<int> _ActorId;
		
		private string _ActorName;
		
		private string _FileOriginalName;
		
		private string _FileName;
		
		private string _FilePath;
		
		private string _Description;
		
		private System.Nullable<int> _MimeTypeId;
		
		private System.Nullable<int> _MemoId;
		
		private System.Nullable<int> _DelegateId;
		
		private bool _IsMergePDF;
		
		private int _MergeSeq;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttachIdChanging(int value);
    partial void OnAttachIdChanged();
    partial void OnAttachGroupIdChanging(System.Nullable<int> value);
    partial void OnAttachGroupIdChanged();
    partial void OnActorIdChanging(System.Nullable<int> value);
    partial void OnActorIdChanged();
    partial void OnActorNameChanging(string value);
    partial void OnActorNameChanged();
    partial void OnFileOriginalNameChanging(string value);
    partial void OnFileOriginalNameChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMimeTypeIdChanging(System.Nullable<int> value);
    partial void OnMimeTypeIdChanged();
    partial void OnMemoIdChanging(System.Nullable<int> value);
    partial void OnMemoIdChanged();
    partial void OnDelegateIdChanging(System.Nullable<int> value);
    partial void OnDelegateIdChanged();
    partial void OnIsMergePDFChanging(bool value);
    partial void OnIsMergePDFChanged();
    partial void OnMergeSeqChanging(int value);
    partial void OnMergeSeqChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public TRNAttachFile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AttachId
		{
			get
			{
				return this._AttachId;
			}
			set
			{
				if ((this._AttachId != value))
				{
					this.OnAttachIdChanging(value);
					this.SendPropertyChanging();
					this._AttachId = value;
					this.SendPropertyChanged("AttachId");
					this.OnAttachIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachGroupId", DbType="Int")]
		public System.Nullable<int> AttachGroupId
		{
			get
			{
				return this._AttachGroupId;
			}
			set
			{
				if ((this._AttachGroupId != value))
				{
					this.OnAttachGroupIdChanging(value);
					this.SendPropertyChanging();
					this._AttachGroupId = value;
					this.SendPropertyChanged("AttachGroupId");
					this.OnAttachGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActorId", DbType="Int")]
		public System.Nullable<int> ActorId
		{
			get
			{
				return this._ActorId;
			}
			set
			{
				if ((this._ActorId != value))
				{
					this.OnActorIdChanging(value);
					this.SendPropertyChanging();
					this._ActorId = value;
					this.SendPropertyChanged("ActorId");
					this.OnActorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActorName", DbType="NVarChar(500)")]
		public string ActorName
		{
			get
			{
				return this._ActorName;
			}
			set
			{
				if ((this._ActorName != value))
				{
					this.OnActorNameChanging(value);
					this.SendPropertyChanging();
					this._ActorName = value;
					this.SendPropertyChanged("ActorName");
					this.OnActorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileOriginalName", DbType="NVarChar(500)")]
		public string FileOriginalName
		{
			get
			{
				return this._FileOriginalName;
			}
			set
			{
				if ((this._FileOriginalName != value))
				{
					this.OnFileOriginalNameChanging(value);
					this.SendPropertyChanging();
					this._FileOriginalName = value;
					this.SendPropertyChanged("FileOriginalName");
					this.OnFileOriginalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(500)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilePath", DbType="NVarChar(500)")]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._FilePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MimeTypeId", DbType="Int")]
		public System.Nullable<int> MimeTypeId
		{
			get
			{
				return this._MimeTypeId;
			}
			set
			{
				if ((this._MimeTypeId != value))
				{
					this.OnMimeTypeIdChanging(value);
					this.SendPropertyChanging();
					this._MimeTypeId = value;
					this.SendPropertyChanged("MimeTypeId");
					this.OnMimeTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoId", DbType="Int")]
		public System.Nullable<int> MemoId
		{
			get
			{
				return this._MemoId;
			}
			set
			{
				if ((this._MemoId != value))
				{
					this.OnMemoIdChanging(value);
					this.SendPropertyChanging();
					this._MemoId = value;
					this.SendPropertyChanged("MemoId");
					this.OnMemoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelegateId", DbType="Int")]
		public System.Nullable<int> DelegateId
		{
			get
			{
				return this._DelegateId;
			}
			set
			{
				if ((this._DelegateId != value))
				{
					this.OnDelegateIdChanging(value);
					this.SendPropertyChanging();
					this._DelegateId = value;
					this.SendPropertyChanged("DelegateId");
					this.OnDelegateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMergePDF", DbType="Bit NOT NULL")]
		public bool IsMergePDF
		{
			get
			{
				return this._IsMergePDF;
			}
			set
			{
				if ((this._IsMergePDF != value))
				{
					this.OnIsMergePDFChanging(value);
					this.SendPropertyChanging();
					this._IsMergePDF = value;
					this.SendPropertyChanged("IsMergePDF");
					this.OnIsMergePDFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MergeSeq", DbType="Int NOT NULL")]
		public int MergeSeq
		{
			get
			{
				return this._MergeSeq;
			}
			set
			{
				if ((this._MergeSeq != value))
				{
					this.OnMergeSeqChanging(value);
					this.SendPropertyChanging();
					this._MergeSeq = value;
					this.SendPropertyChanged("MergeSeq");
					this.OnMergeSeqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRNControlRunning")]
	public partial class TRNControlRunning : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ControlRunningId;
		
		private System.Nullable<int> _MemoId;
		
		private string _Prefix;
		
		private System.Nullable<int> _Digi;
		
		private System.Nullable<int> _Running;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _RunningNumber;
		
		private System.Nullable<int> _ControlId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnControlRunningIdChanging(int value);
    partial void OnControlRunningIdChanged();
    partial void OnMemoIdChanging(System.Nullable<int> value);
    partial void OnMemoIdChanged();
    partial void OnPrefixChanging(string value);
    partial void OnPrefixChanged();
    partial void OnDigiChanging(System.Nullable<int> value);
    partial void OnDigiChanged();
    partial void OnRunningChanging(System.Nullable<int> value);
    partial void OnRunningChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnRunningNumberChanging(string value);
    partial void OnRunningNumberChanged();
    partial void OnControlIdChanging(System.Nullable<int> value);
    partial void OnControlIdChanged();
    #endregion
		
		public TRNControlRunning()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlRunningId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ControlRunningId
		{
			get
			{
				return this._ControlRunningId;
			}
			set
			{
				if ((this._ControlRunningId != value))
				{
					this.OnControlRunningIdChanging(value);
					this.SendPropertyChanging();
					this._ControlRunningId = value;
					this.SendPropertyChanged("ControlRunningId");
					this.OnControlRunningIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoId", DbType="Int")]
		public System.Nullable<int> MemoId
		{
			get
			{
				return this._MemoId;
			}
			set
			{
				if ((this._MemoId != value))
				{
					this.OnMemoIdChanging(value);
					this.SendPropertyChanging();
					this._MemoId = value;
					this.SendPropertyChanged("MemoId");
					this.OnMemoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prefix", DbType="NVarChar(100)")]
		public string Prefix
		{
			get
			{
				return this._Prefix;
			}
			set
			{
				if ((this._Prefix != value))
				{
					this.OnPrefixChanging(value);
					this.SendPropertyChanging();
					this._Prefix = value;
					this.SendPropertyChanged("Prefix");
					this.OnPrefixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Digi", DbType="Int")]
		public System.Nullable<int> Digi
		{
			get
			{
				return this._Digi;
			}
			set
			{
				if ((this._Digi != value))
				{
					this.OnDigiChanging(value);
					this.SendPropertyChanging();
					this._Digi = value;
					this.SendPropertyChanged("Digi");
					this.OnDigiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Running", DbType="Int")]
		public System.Nullable<int> Running
		{
			get
			{
				return this._Running;
			}
			set
			{
				if ((this._Running != value))
				{
					this.OnRunningChanging(value);
					this.SendPropertyChanging();
					this._Running = value;
					this.SendPropertyChanged("Running");
					this.OnRunningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunningNumber", DbType="NVarChar(500)")]
		public string RunningNumber
		{
			get
			{
				return this._RunningNumber;
			}
			set
			{
				if ((this._RunningNumber != value))
				{
					this.OnRunningNumberChanging(value);
					this.SendPropertyChanging();
					this._RunningNumber = value;
					this.SendPropertyChanged("RunningNumber");
					this.OnRunningNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlId", DbType="Int")]
		public System.Nullable<int> ControlId
		{
			get
			{
				return this._ControlId;
			}
			set
			{
				if ((this._ControlId != value))
				{
					this.OnControlIdChanging(value);
					this.SendPropertyChanging();
					this._ControlId = value;
					this.SendPropertyChanged("ControlId");
					this.OnControlIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRNDelegate")]
	public partial class TRNDelegate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DelegateId;
		
		private System.Nullable<int> _ApproverId;
		
		private System.Nullable<int> _DelegateToId;
		
		private System.Nullable<System.DateTime> _DateFrom;
		
		private System.Nullable<System.DateTime> _DateTo;
		
		private string _Remark;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _AccountId;
		
		private System.Nullable<int> _DelegateToRole;
		
		private System.Nullable<bool> _IsApplySomeForm;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDelegateIdChanging(int value);
    partial void OnDelegateIdChanged();
    partial void OnApproverIdChanging(System.Nullable<int> value);
    partial void OnApproverIdChanged();
    partial void OnDelegateToIdChanging(System.Nullable<int> value);
    partial void OnDelegateToIdChanged();
    partial void OnDateFromChanging(System.Nullable<System.DateTime> value);
    partial void OnDateFromChanged();
    partial void OnDateToChanging(System.Nullable<System.DateTime> value);
    partial void OnDateToChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnAccountIdChanging(System.Nullable<int> value);
    partial void OnAccountIdChanged();
    partial void OnDelegateToRoleChanging(System.Nullable<int> value);
    partial void OnDelegateToRoleChanged();
    partial void OnIsApplySomeFormChanging(System.Nullable<bool> value);
    partial void OnIsApplySomeFormChanged();
    #endregion
		
		public TRNDelegate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelegateId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DelegateId
		{
			get
			{
				return this._DelegateId;
			}
			set
			{
				if ((this._DelegateId != value))
				{
					this.OnDelegateIdChanging(value);
					this.SendPropertyChanging();
					this._DelegateId = value;
					this.SendPropertyChanged("DelegateId");
					this.OnDelegateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproverId", DbType="Int")]
		public System.Nullable<int> ApproverId
		{
			get
			{
				return this._ApproverId;
			}
			set
			{
				if ((this._ApproverId != value))
				{
					this.OnApproverIdChanging(value);
					this.SendPropertyChanging();
					this._ApproverId = value;
					this.SendPropertyChanged("ApproverId");
					this.OnApproverIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelegateToId", DbType="Int")]
		public System.Nullable<int> DelegateToId
		{
			get
			{
				return this._DelegateToId;
			}
			set
			{
				if ((this._DelegateToId != value))
				{
					this.OnDelegateToIdChanging(value);
					this.SendPropertyChanging();
					this._DelegateToId = value;
					this.SendPropertyChanged("DelegateToId");
					this.OnDelegateToIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateFrom
		{
			get
			{
				return this._DateFrom;
			}
			set
			{
				if ((this._DateFrom != value))
				{
					this.OnDateFromChanging(value);
					this.SendPropertyChanging();
					this._DateFrom = value;
					this.SendPropertyChanged("DateFrom");
					this.OnDateFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTo", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateTo
		{
			get
			{
				return this._DateTo;
			}
			set
			{
				if ((this._DateTo != value))
				{
					this.OnDateToChanging(value);
					this.SendPropertyChanging();
					this._DateTo = value;
					this.SendPropertyChanged("DateTo");
					this.OnDateToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int")]
		public System.Nullable<int> AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelegateToRole", DbType="Int")]
		public System.Nullable<int> DelegateToRole
		{
			get
			{
				return this._DelegateToRole;
			}
			set
			{
				if ((this._DelegateToRole != value))
				{
					this.OnDelegateToRoleChanging(value);
					this.SendPropertyChanging();
					this._DelegateToRole = value;
					this.SendPropertyChanged("DelegateToRole");
					this.OnDelegateToRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApplySomeForm", DbType="Bit")]
		public System.Nullable<bool> IsApplySomeForm
		{
			get
			{
				return this._IsApplySomeForm;
			}
			set
			{
				if ((this._IsApplySomeForm != value))
				{
					this.OnIsApplySomeFormChanging(value);
					this.SendPropertyChanging();
					this._IsApplySomeForm = value;
					this.SendPropertyChanged("IsApplySomeForm");
					this.OnIsApplySomeFormChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRNDelegateDetail")]
	public partial class TRNDelegateDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DelegateDetialId;
		
		private System.Nullable<int> _DelegateId;
		
		private System.Nullable<int> _TemplateId;
		
		private System.Nullable<int> _MemoId;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<int> _AccountId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDelegateDetialIdChanging(int value);
    partial void OnDelegateDetialIdChanged();
    partial void OnDelegateIdChanging(System.Nullable<int> value);
    partial void OnDelegateIdChanged();
    partial void OnTemplateIdChanging(System.Nullable<int> value);
    partial void OnTemplateIdChanged();
    partial void OnMemoIdChanging(System.Nullable<int> value);
    partial void OnMemoIdChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnAccountIdChanging(System.Nullable<int> value);
    partial void OnAccountIdChanged();
    #endregion
		
		public TRNDelegateDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelegateDetialId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DelegateDetialId
		{
			get
			{
				return this._DelegateDetialId;
			}
			set
			{
				if ((this._DelegateDetialId != value))
				{
					this.OnDelegateDetialIdChanging(value);
					this.SendPropertyChanging();
					this._DelegateDetialId = value;
					this.SendPropertyChanged("DelegateDetialId");
					this.OnDelegateDetialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelegateId", DbType="Int")]
		public System.Nullable<int> DelegateId
		{
			get
			{
				return this._DelegateId;
			}
			set
			{
				if ((this._DelegateId != value))
				{
					this.OnDelegateIdChanging(value);
					this.SendPropertyChanging();
					this._DelegateId = value;
					this.SendPropertyChanged("DelegateId");
					this.OnDelegateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateId", DbType="Int")]
		public System.Nullable<int> TemplateId
		{
			get
			{
				return this._TemplateId;
			}
			set
			{
				if ((this._TemplateId != value))
				{
					this.OnTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._TemplateId = value;
					this.SendPropertyChanged("TemplateId");
					this.OnTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoId", DbType="Int")]
		public System.Nullable<int> MemoId
		{
			get
			{
				return this._MemoId;
			}
			set
			{
				if ((this._MemoId != value))
				{
					this.OnMemoIdChanging(value);
					this.SendPropertyChanging();
					this._MemoId = value;
					this.SendPropertyChanged("MemoId");
					this.OnMemoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int")]
		public System.Nullable<int> AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRNLeaveBalance")]
	public partial class TRNLeaveBalance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LBId;
		
		private int _LeaveTypeId;
		
		private decimal _Amount;
		
		private string _Year;
		
		private int _EmployeeId;
		
		private System.Nullable<bool> _IsAddition;
		
		private string _Description;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.Nullable<int> _CreateBy;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLBIdChanging(int value);
    partial void OnLBIdChanged();
    partial void OnLeaveTypeIdChanging(int value);
    partial void OnLeaveTypeIdChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnYearChanging(string value);
    partial void OnYearChanged();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnIsAdditionChanging(System.Nullable<bool> value);
    partial void OnIsAdditionChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnCreateByChanging(System.Nullable<int> value);
    partial void OnCreateByChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public TRNLeaveBalance()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LBId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LBId
		{
			get
			{
				return this._LBId;
			}
			set
			{
				if ((this._LBId != value))
				{
					this.OnLBIdChanging(value);
					this.SendPropertyChanging();
					this._LBId = value;
					this.SendPropertyChanged("LBId");
					this.OnLBIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveTypeId", DbType="Int NOT NULL")]
		public int LeaveTypeId
		{
			get
			{
				return this._LeaveTypeId;
			}
			set
			{
				if ((this._LeaveTypeId != value))
				{
					this.OnLeaveTypeIdChanging(value);
					this.SendPropertyChanging();
					this._LeaveTypeId = value;
					this.SendPropertyChanged("LeaveTypeId");
					this.OnLeaveTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,1) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="NVarChar(4) NOT NULL", CanBeNull=false)]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL")]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAddition", DbType="Bit")]
		public System.Nullable<bool> IsAddition
		{
			get
			{
				return this._IsAddition;
			}
			set
			{
				if ((this._IsAddition != value))
				{
					this.OnIsAdditionChanging(value);
					this.SendPropertyChanging();
					this._IsAddition = value;
					this.SendPropertyChanged("IsAddition");
					this.OnIsAdditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="Int")]
		public System.Nullable<int> CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRNLineApprove")]
	public partial class TRNLineApprove : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LineApproveId;
		
		private System.Nullable<int> _MemoId;
		
		private System.Nullable<int> _Seq;
		
		private System.Nullable<int> _EmployeeId;
		
		private string _EmployeeCode;
		
		private System.Nullable<int> _PositionId;
		
		private System.Nullable<int> _SignatureId;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<bool> _IsParallel;
		
		private System.Nullable<bool> _IsApproveAll;
		
		private System.Nullable<int> _ApproveSlot;
		
		private System.Nullable<bool> _UserAction;
		
		private System.Nullable<int> _TemLineId;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLineApproveIdChanging(int value);
    partial void OnLineApproveIdChanged();
    partial void OnMemoIdChanging(System.Nullable<int> value);
    partial void OnMemoIdChanged();
    partial void OnSeqChanging(System.Nullable<int> value);
    partial void OnSeqChanged();
    partial void OnEmployeeIdChanging(System.Nullable<int> value);
    partial void OnEmployeeIdChanged();
    partial void OnEmployeeCodeChanging(string value);
    partial void OnEmployeeCodeChanged();
    partial void OnPositionIdChanging(System.Nullable<int> value);
    partial void OnPositionIdChanged();
    partial void OnSignatureIdChanging(System.Nullable<int> value);
    partial void OnSignatureIdChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnIsParallelChanging(System.Nullable<bool> value);
    partial void OnIsParallelChanged();
    partial void OnIsApproveAllChanging(System.Nullable<bool> value);
    partial void OnIsApproveAllChanged();
    partial void OnApproveSlotChanging(System.Nullable<int> value);
    partial void OnApproveSlotChanged();
    partial void OnUserActionChanging(System.Nullable<bool> value);
    partial void OnUserActionChanged();
    partial void OnTemLineIdChanging(System.Nullable<int> value);
    partial void OnTemLineIdChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public TRNLineApprove()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineApproveId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LineApproveId
		{
			get
			{
				return this._LineApproveId;
			}
			set
			{
				if ((this._LineApproveId != value))
				{
					this.OnLineApproveIdChanging(value);
					this.SendPropertyChanging();
					this._LineApproveId = value;
					this.SendPropertyChanged("LineApproveId");
					this.OnLineApproveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoId", DbType="Int")]
		public System.Nullable<int> MemoId
		{
			get
			{
				return this._MemoId;
			}
			set
			{
				if ((this._MemoId != value))
				{
					this.OnMemoIdChanging(value);
					this.SendPropertyChanging();
					this._MemoId = value;
					this.SendPropertyChanged("MemoId");
					this.OnMemoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seq", DbType="Int")]
		public System.Nullable<int> Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int")]
		public System.Nullable<int> EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="NVarChar(50)")]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					this.OnEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCode = value;
					this.SendPropertyChanged("EmployeeCode");
					this.OnEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionId", DbType="Int")]
		public System.Nullable<int> PositionId
		{
			get
			{
				return this._PositionId;
			}
			set
			{
				if ((this._PositionId != value))
				{
					this.OnPositionIdChanging(value);
					this.SendPropertyChanging();
					this._PositionId = value;
					this.SendPropertyChanged("PositionId");
					this.OnPositionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignatureId", DbType="Int")]
		public System.Nullable<int> SignatureId
		{
			get
			{
				return this._SignatureId;
			}
			set
			{
				if ((this._SignatureId != value))
				{
					this.OnSignatureIdChanging(value);
					this.SendPropertyChanging();
					this._SignatureId = value;
					this.SendPropertyChanged("SignatureId");
					this.OnSignatureIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsParallel", DbType="Bit")]
		public System.Nullable<bool> IsParallel
		{
			get
			{
				return this._IsParallel;
			}
			set
			{
				if ((this._IsParallel != value))
				{
					this.OnIsParallelChanging(value);
					this.SendPropertyChanging();
					this._IsParallel = value;
					this.SendPropertyChanged("IsParallel");
					this.OnIsParallelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproveAll", DbType="Bit")]
		public System.Nullable<bool> IsApproveAll
		{
			get
			{
				return this._IsApproveAll;
			}
			set
			{
				if ((this._IsApproveAll != value))
				{
					this.OnIsApproveAllChanging(value);
					this.SendPropertyChanging();
					this._IsApproveAll = value;
					this.SendPropertyChanged("IsApproveAll");
					this.OnIsApproveAllChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveSlot", DbType="Int")]
		public System.Nullable<int> ApproveSlot
		{
			get
			{
				return this._ApproveSlot;
			}
			set
			{
				if ((this._ApproveSlot != value))
				{
					this.OnApproveSlotChanging(value);
					this.SendPropertyChanging();
					this._ApproveSlot = value;
					this.SendPropertyChanged("ApproveSlot");
					this.OnApproveSlotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAction", DbType="Bit")]
		public System.Nullable<bool> UserAction
		{
			get
			{
				return this._UserAction;
			}
			set
			{
				if ((this._UserAction != value))
				{
					this.OnUserActionChanging(value);
					this.SendPropertyChanging();
					this._UserAction = value;
					this.SendPropertyChanged("UserAction");
					this.OnUserActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemLineId", DbType="Int")]
		public System.Nullable<int> TemLineId
		{
			get
			{
				return this._TemLineId;
			}
			set
			{
				if ((this._TemLineId != value))
				{
					this.OnTemLineIdChanging(value);
					this.SendPropertyChanging();
					this._TemLineId = value;
					this.SendPropertyChanged("TemLineId");
					this.OnTemLineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRNMemo")]
	public partial class TRNMemo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MemoId;
		
		private string _DocumentNo;
		
		private System.Nullable<int> _TemplateId;
		
		private System.Nullable<int> _ControlVersionId;
		
		private System.Nullable<bool> _IsPublic;
		
		private string _ReportLang;
		
		private string _TemplateDetail;
		
		private string _ToPerson;
		
		private string _CcPerson;
		
		private string _MemoSubject;
		
		private string _MTextForm;
		
		private System.Nullable<int> _MemoStatusId;
		
		private System.Nullable<int> _CurrentApprovalLevel;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<int> _LastStatusId;
		
		private System.Nullable<int> _PersonWaitingId;
		
		private System.Nullable<int> _AccountId;
		
		private System.Nullable<int> _CompanyId;
		
		private System.Nullable<int> _ProjectId;
		
		private System.Nullable<bool> _IsRead;
		
		private string _TemplateApproveId;
		
		private System.Nullable<int> _Processing;
		
		private System.Nullable<bool> _IsProcess;
		
		private System.Nullable<System.DateTime> _SLAStartDate;
		
		private System.Nullable<System.DateTime> _SLACompletedDate;
		
		private System.Nullable<System.DateTime> _CompletedDate;
		
		private System.Nullable<int> _CreatorId;
		
		private System.Nullable<int> _RequestorId;
		
		private System.Nullable<System.DateTime> _RequestDate;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _LastActionBy;
		
		private System.Nullable<int> _CPositionId;
		
		private System.Nullable<int> _CDepartmentId;
		
		private System.Nullable<int> _RPositionId;
		
		private System.Nullable<int> _RDepartmentId;
		
		private EntitySet<TRNMemoData> _TRNMemoDatas;
		
		private EntitySet<TRNMemoDataHistory> _TRNMemoDataHistories;
		
		private EntitySet<TRNMemoTableData> _TRNMemoTableDatas;
		
		private EntitySet<TRNMemoTableDataHistory> _TRNMemoTableDataHistories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMemoIdChanging(int value);
    partial void OnMemoIdChanged();
    partial void OnDocumentNoChanging(string value);
    partial void OnDocumentNoChanged();
    partial void OnTemplateIdChanging(System.Nullable<int> value);
    partial void OnTemplateIdChanged();
    partial void OnControlVersionIdChanging(System.Nullable<int> value);
    partial void OnControlVersionIdChanged();
    partial void OnIsPublicChanging(System.Nullable<bool> value);
    partial void OnIsPublicChanged();
    partial void OnReportLangChanging(string value);
    partial void OnReportLangChanged();
    partial void OnTemplateDetailChanging(string value);
    partial void OnTemplateDetailChanged();
    partial void OnToPersonChanging(string value);
    partial void OnToPersonChanged();
    partial void OnCcPersonChanging(string value);
    partial void OnCcPersonChanged();
    partial void OnMemoSubjectChanging(string value);
    partial void OnMemoSubjectChanged();
    partial void OnMTextFormChanging(string value);
    partial void OnMTextFormChanged();
    partial void OnMemoStatusIdChanging(System.Nullable<int> value);
    partial void OnMemoStatusIdChanged();
    partial void OnCurrentApprovalLevelChanging(System.Nullable<int> value);
    partial void OnCurrentApprovalLevelChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnLastStatusIdChanging(System.Nullable<int> value);
    partial void OnLastStatusIdChanged();
    partial void OnPersonWaitingIdChanging(System.Nullable<int> value);
    partial void OnPersonWaitingIdChanged();
    partial void OnAccountIdChanging(System.Nullable<int> value);
    partial void OnAccountIdChanged();
    partial void OnCompanyIdChanging(System.Nullable<int> value);
    partial void OnCompanyIdChanged();
    partial void OnProjectIdChanging(System.Nullable<int> value);
    partial void OnProjectIdChanged();
    partial void OnIsReadChanging(System.Nullable<bool> value);
    partial void OnIsReadChanged();
    partial void OnTemplateApproveIdChanging(string value);
    partial void OnTemplateApproveIdChanged();
    partial void OnProcessingChanging(System.Nullable<int> value);
    partial void OnProcessingChanged();
    partial void OnIsProcessChanging(System.Nullable<bool> value);
    partial void OnIsProcessChanged();
    partial void OnSLAStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSLAStartDateChanged();
    partial void OnSLACompletedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSLACompletedDateChanged();
    partial void OnCompletedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompletedDateChanged();
    partial void OnCreatorIdChanging(System.Nullable<int> value);
    partial void OnCreatorIdChanged();
    partial void OnRequestorIdChanging(System.Nullable<int> value);
    partial void OnRequestorIdChanged();
    partial void OnRequestDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRequestDateChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnLastActionByChanging(System.Nullable<int> value);
    partial void OnLastActionByChanged();
    partial void OnCPositionIdChanging(System.Nullable<int> value);
    partial void OnCPositionIdChanged();
    partial void OnCDepartmentIdChanging(System.Nullable<int> value);
    partial void OnCDepartmentIdChanged();
    partial void OnRPositionIdChanging(System.Nullable<int> value);
    partial void OnRPositionIdChanged();
    partial void OnRDepartmentIdChanging(System.Nullable<int> value);
    partial void OnRDepartmentIdChanged();
    #endregion
		
		public TRNMemo()
		{
			this._TRNMemoDatas = new EntitySet<TRNMemoData>(new Action<TRNMemoData>(this.attach_TRNMemoDatas), new Action<TRNMemoData>(this.detach_TRNMemoDatas));
			this._TRNMemoDataHistories = new EntitySet<TRNMemoDataHistory>(new Action<TRNMemoDataHistory>(this.attach_TRNMemoDataHistories), new Action<TRNMemoDataHistory>(this.detach_TRNMemoDataHistories));
			this._TRNMemoTableDatas = new EntitySet<TRNMemoTableData>(new Action<TRNMemoTableData>(this.attach_TRNMemoTableDatas), new Action<TRNMemoTableData>(this.detach_TRNMemoTableDatas));
			this._TRNMemoTableDataHistories = new EntitySet<TRNMemoTableDataHistory>(new Action<TRNMemoTableDataHistory>(this.attach_TRNMemoTableDataHistories), new Action<TRNMemoTableDataHistory>(this.detach_TRNMemoTableDataHistories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MemoId
		{
			get
			{
				return this._MemoId;
			}
			set
			{
				if ((this._MemoId != value))
				{
					this.OnMemoIdChanging(value);
					this.SendPropertyChanging();
					this._MemoId = value;
					this.SendPropertyChanged("MemoId");
					this.OnMemoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentNo", DbType="NVarChar(50)")]
		public string DocumentNo
		{
			get
			{
				return this._DocumentNo;
			}
			set
			{
				if ((this._DocumentNo != value))
				{
					this.OnDocumentNoChanging(value);
					this.SendPropertyChanging();
					this._DocumentNo = value;
					this.SendPropertyChanged("DocumentNo");
					this.OnDocumentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateId", DbType="Int")]
		public System.Nullable<int> TemplateId
		{
			get
			{
				return this._TemplateId;
			}
			set
			{
				if ((this._TemplateId != value))
				{
					this.OnTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._TemplateId = value;
					this.SendPropertyChanged("TemplateId");
					this.OnTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlVersionId", DbType="Int")]
		public System.Nullable<int> ControlVersionId
		{
			get
			{
				return this._ControlVersionId;
			}
			set
			{
				if ((this._ControlVersionId != value))
				{
					this.OnControlVersionIdChanging(value);
					this.SendPropertyChanging();
					this._ControlVersionId = value;
					this.SendPropertyChanged("ControlVersionId");
					this.OnControlVersionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublic", DbType="Bit")]
		public System.Nullable<bool> IsPublic
		{
			get
			{
				return this._IsPublic;
			}
			set
			{
				if ((this._IsPublic != value))
				{
					this.OnIsPublicChanging(value);
					this.SendPropertyChanging();
					this._IsPublic = value;
					this.SendPropertyChanged("IsPublic");
					this.OnIsPublicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportLang", DbType="NVarChar(2)")]
		public string ReportLang
		{
			get
			{
				return this._ReportLang;
			}
			set
			{
				if ((this._ReportLang != value))
				{
					this.OnReportLangChanging(value);
					this.SendPropertyChanging();
					this._ReportLang = value;
					this.SendPropertyChanged("ReportLang");
					this.OnReportLangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateDetail", DbType="NVarChar(100)")]
		public string TemplateDetail
		{
			get
			{
				return this._TemplateDetail;
			}
			set
			{
				if ((this._TemplateDetail != value))
				{
					this.OnTemplateDetailChanging(value);
					this.SendPropertyChanging();
					this._TemplateDetail = value;
					this.SendPropertyChanged("TemplateDetail");
					this.OnTemplateDetailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToPerson", DbType="NVarChar(MAX)")]
		public string ToPerson
		{
			get
			{
				return this._ToPerson;
			}
			set
			{
				if ((this._ToPerson != value))
				{
					this.OnToPersonChanging(value);
					this.SendPropertyChanging();
					this._ToPerson = value;
					this.SendPropertyChanged("ToPerson");
					this.OnToPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CcPerson", DbType="NVarChar(MAX)")]
		public string CcPerson
		{
			get
			{
				return this._CcPerson;
			}
			set
			{
				if ((this._CcPerson != value))
				{
					this.OnCcPersonChanging(value);
					this.SendPropertyChanging();
					this._CcPerson = value;
					this.SendPropertyChanged("CcPerson");
					this.OnCcPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoSubject", DbType="NVarChar(500)")]
		public string MemoSubject
		{
			get
			{
				return this._MemoSubject;
			}
			set
			{
				if ((this._MemoSubject != value))
				{
					this.OnMemoSubjectChanging(value);
					this.SendPropertyChanging();
					this._MemoSubject = value;
					this.SendPropertyChanged("MemoSubject");
					this.OnMemoSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MTextForm", DbType="NVarChar(MAX)")]
		public string MTextForm
		{
			get
			{
				return this._MTextForm;
			}
			set
			{
				if ((this._MTextForm != value))
				{
					this.OnMTextFormChanging(value);
					this.SendPropertyChanging();
					this._MTextForm = value;
					this.SendPropertyChanged("MTextForm");
					this.OnMTextFormChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoStatusId", DbType="Int")]
		public System.Nullable<int> MemoStatusId
		{
			get
			{
				return this._MemoStatusId;
			}
			set
			{
				if ((this._MemoStatusId != value))
				{
					this.OnMemoStatusIdChanging(value);
					this.SendPropertyChanging();
					this._MemoStatusId = value;
					this.SendPropertyChanged("MemoStatusId");
					this.OnMemoStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentApprovalLevel", DbType="Int")]
		public System.Nullable<int> CurrentApprovalLevel
		{
			get
			{
				return this._CurrentApprovalLevel;
			}
			set
			{
				if ((this._CurrentApprovalLevel != value))
				{
					this.OnCurrentApprovalLevelChanging(value);
					this.SendPropertyChanging();
					this._CurrentApprovalLevel = value;
					this.SendPropertyChanged("CurrentApprovalLevel");
					this.OnCurrentApprovalLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastStatusId", DbType="Int")]
		public System.Nullable<int> LastStatusId
		{
			get
			{
				return this._LastStatusId;
			}
			set
			{
				if ((this._LastStatusId != value))
				{
					this.OnLastStatusIdChanging(value);
					this.SendPropertyChanging();
					this._LastStatusId = value;
					this.SendPropertyChanged("LastStatusId");
					this.OnLastStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonWaitingId", DbType="Int")]
		public System.Nullable<int> PersonWaitingId
		{
			get
			{
				return this._PersonWaitingId;
			}
			set
			{
				if ((this._PersonWaitingId != value))
				{
					this.OnPersonWaitingIdChanging(value);
					this.SendPropertyChanging();
					this._PersonWaitingId = value;
					this.SendPropertyChanged("PersonWaitingId");
					this.OnPersonWaitingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int")]
		public System.Nullable<int> AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int")]
		public System.Nullable<int> CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="Int")]
		public System.Nullable<int> ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRead", DbType="Bit")]
		public System.Nullable<bool> IsRead
		{
			get
			{
				return this._IsRead;
			}
			set
			{
				if ((this._IsRead != value))
				{
					this.OnIsReadChanging(value);
					this.SendPropertyChanging();
					this._IsRead = value;
					this.SendPropertyChanged("IsRead");
					this.OnIsReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateApproveId", DbType="NVarChar(10)")]
		public string TemplateApproveId
		{
			get
			{
				return this._TemplateApproveId;
			}
			set
			{
				if ((this._TemplateApproveId != value))
				{
					this.OnTemplateApproveIdChanging(value);
					this.SendPropertyChanging();
					this._TemplateApproveId = value;
					this.SendPropertyChanged("TemplateApproveId");
					this.OnTemplateApproveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Processing", DbType="Int")]
		public System.Nullable<int> Processing
		{
			get
			{
				return this._Processing;
			}
			set
			{
				if ((this._Processing != value))
				{
					this.OnProcessingChanging(value);
					this.SendPropertyChanging();
					this._Processing = value;
					this.SendPropertyChanged("Processing");
					this.OnProcessingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProcess", DbType="Bit")]
		public System.Nullable<bool> IsProcess
		{
			get
			{
				return this._IsProcess;
			}
			set
			{
				if ((this._IsProcess != value))
				{
					this.OnIsProcessChanging(value);
					this.SendPropertyChanging();
					this._IsProcess = value;
					this.SendPropertyChanged("IsProcess");
					this.OnIsProcessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLAStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SLAStartDate
		{
			get
			{
				return this._SLAStartDate;
			}
			set
			{
				if ((this._SLAStartDate != value))
				{
					this.OnSLAStartDateChanging(value);
					this.SendPropertyChanging();
					this._SLAStartDate = value;
					this.SendPropertyChanged("SLAStartDate");
					this.OnSLAStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLACompletedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SLACompletedDate
		{
			get
			{
				return this._SLACompletedDate;
			}
			set
			{
				if ((this._SLACompletedDate != value))
				{
					this.OnSLACompletedDateChanging(value);
					this.SendPropertyChanging();
					this._SLACompletedDate = value;
					this.SendPropertyChanged("SLACompletedDate");
					this.OnSLACompletedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompletedDate
		{
			get
			{
				return this._CompletedDate;
			}
			set
			{
				if ((this._CompletedDate != value))
				{
					this.OnCompletedDateChanging(value);
					this.SendPropertyChanging();
					this._CompletedDate = value;
					this.SendPropertyChanged("CompletedDate");
					this.OnCompletedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorId", DbType="Int")]
		public System.Nullable<int> CreatorId
		{
			get
			{
				return this._CreatorId;
			}
			set
			{
				if ((this._CreatorId != value))
				{
					this.OnCreatorIdChanging(value);
					this.SendPropertyChanging();
					this._CreatorId = value;
					this.SendPropertyChanged("CreatorId");
					this.OnCreatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestorId", DbType="Int")]
		public System.Nullable<int> RequestorId
		{
			get
			{
				return this._RequestorId;
			}
			set
			{
				if ((this._RequestorId != value))
				{
					this.OnRequestorIdChanging(value);
					this.SendPropertyChanging();
					this._RequestorId = value;
					this.SendPropertyChanged("RequestorId");
					this.OnRequestorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this.OnRequestDateChanging(value);
					this.SendPropertyChanging();
					this._RequestDate = value;
					this.SendPropertyChanged("RequestDate");
					this.OnRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActionBy", DbType="Int")]
		public System.Nullable<int> LastActionBy
		{
			get
			{
				return this._LastActionBy;
			}
			set
			{
				if ((this._LastActionBy != value))
				{
					this.OnLastActionByChanging(value);
					this.SendPropertyChanging();
					this._LastActionBy = value;
					this.SendPropertyChanged("LastActionBy");
					this.OnLastActionByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPositionId", DbType="Int")]
		public System.Nullable<int> CPositionId
		{
			get
			{
				return this._CPositionId;
			}
			set
			{
				if ((this._CPositionId != value))
				{
					this.OnCPositionIdChanging(value);
					this.SendPropertyChanging();
					this._CPositionId = value;
					this.SendPropertyChanged("CPositionId");
					this.OnCPositionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CDepartmentId", DbType="Int")]
		public System.Nullable<int> CDepartmentId
		{
			get
			{
				return this._CDepartmentId;
			}
			set
			{
				if ((this._CDepartmentId != value))
				{
					this.OnCDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._CDepartmentId = value;
					this.SendPropertyChanged("CDepartmentId");
					this.OnCDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RPositionId", DbType="Int")]
		public System.Nullable<int> RPositionId
		{
			get
			{
				return this._RPositionId;
			}
			set
			{
				if ((this._RPositionId != value))
				{
					this.OnRPositionIdChanging(value);
					this.SendPropertyChanging();
					this._RPositionId = value;
					this.SendPropertyChanged("RPositionId");
					this.OnRPositionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RDepartmentId", DbType="Int")]
		public System.Nullable<int> RDepartmentId
		{
			get
			{
				return this._RDepartmentId;
			}
			set
			{
				if ((this._RDepartmentId != value))
				{
					this.OnRDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._RDepartmentId = value;
					this.SendPropertyChanged("RDepartmentId");
					this.OnRDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRNMemo_TRNMemoData", Storage="_TRNMemoDatas", ThisKey="MemoId", OtherKey="MemoId")]
		public EntitySet<TRNMemoData> TRNMemoDatas
		{
			get
			{
				return this._TRNMemoDatas;
			}
			set
			{
				this._TRNMemoDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRNMemo_TRNMemoDataHistory", Storage="_TRNMemoDataHistories", ThisKey="MemoId", OtherKey="MemoId")]
		public EntitySet<TRNMemoDataHistory> TRNMemoDataHistories
		{
			get
			{
				return this._TRNMemoDataHistories;
			}
			set
			{
				this._TRNMemoDataHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRNMemo_TRNMemoTableData", Storage="_TRNMemoTableDatas", ThisKey="MemoId", OtherKey="MemoId")]
		public EntitySet<TRNMemoTableData> TRNMemoTableDatas
		{
			get
			{
				return this._TRNMemoTableDatas;
			}
			set
			{
				this._TRNMemoTableDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRNMemo_TRNMemoTableDataHistory", Storage="_TRNMemoTableDataHistories", ThisKey="MemoId", OtherKey="MemoId")]
		public EntitySet<TRNMemoTableDataHistory> TRNMemoTableDataHistories
		{
			get
			{
				return this._TRNMemoTableDataHistories;
			}
			set
			{
				this._TRNMemoTableDataHistories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TRNMemoDatas(TRNMemoData entity)
		{
			this.SendPropertyChanging();
			entity.TRNMemo = this;
		}
		
		private void detach_TRNMemoDatas(TRNMemoData entity)
		{
			this.SendPropertyChanging();
			entity.TRNMemo = null;
		}
		
		private void attach_TRNMemoDataHistories(TRNMemoDataHistory entity)
		{
			this.SendPropertyChanging();
			entity.TRNMemo = this;
		}
		
		private void detach_TRNMemoDataHistories(TRNMemoDataHistory entity)
		{
			this.SendPropertyChanging();
			entity.TRNMemo = null;
		}
		
		private void attach_TRNMemoTableDatas(TRNMemoTableData entity)
		{
			this.SendPropertyChanging();
			entity.TRNMemo = this;
		}
		
		private void detach_TRNMemoTableDatas(TRNMemoTableData entity)
		{
			this.SendPropertyChanging();
			entity.TRNMemo = null;
		}
		
		private void attach_TRNMemoTableDataHistories(TRNMemoTableDataHistory entity)
		{
			this.SendPropertyChanging();
			entity.TRNMemo = this;
		}
		
		private void detach_TRNMemoTableDataHistories(TRNMemoTableDataHistory entity)
		{
			this.SendPropertyChanging();
			entity.TRNMemo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRNMemoData")]
	public partial class TRNMemoData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _MemoDataId;
		
		private int _MemoId;
		
		private System.Nullable<int> _ControlId;
		
		private string _Value;
		
		private EntityRef<TRNMemo> _TRNMemo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMemoDataIdChanging(long value);
    partial void OnMemoDataIdChanged();
    partial void OnMemoIdChanging(int value);
    partial void OnMemoIdChanged();
    partial void OnControlIdChanging(System.Nullable<int> value);
    partial void OnControlIdChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public TRNMemoData()
		{
			this._TRNMemo = default(EntityRef<TRNMemo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoDataId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long MemoDataId
		{
			get
			{
				return this._MemoDataId;
			}
			set
			{
				if ((this._MemoDataId != value))
				{
					this.OnMemoDataIdChanging(value);
					this.SendPropertyChanging();
					this._MemoDataId = value;
					this.SendPropertyChanged("MemoDataId");
					this.OnMemoDataIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoId", DbType="Int NOT NULL")]
		public int MemoId
		{
			get
			{
				return this._MemoId;
			}
			set
			{
				if ((this._MemoId != value))
				{
					if (this._TRNMemo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemoIdChanging(value);
					this.SendPropertyChanging();
					this._MemoId = value;
					this.SendPropertyChanged("MemoId");
					this.OnMemoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlId", DbType="Int")]
		public System.Nullable<int> ControlId
		{
			get
			{
				return this._ControlId;
			}
			set
			{
				if ((this._ControlId != value))
				{
					this.OnControlIdChanging(value);
					this.SendPropertyChanging();
					this._ControlId = value;
					this.SendPropertyChanged("ControlId");
					this.OnControlIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(MAX)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRNMemo_TRNMemoData", Storage="_TRNMemo", ThisKey="MemoId", OtherKey="MemoId", IsForeignKey=true)]
		public TRNMemo TRNMemo
		{
			get
			{
				return this._TRNMemo.Entity;
			}
			set
			{
				TRNMemo previousValue = this._TRNMemo.Entity;
				if (((previousValue != value) 
							|| (this._TRNMemo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TRNMemo.Entity = null;
						previousValue.TRNMemoDatas.Remove(this);
					}
					this._TRNMemo.Entity = value;
					if ((value != null))
					{
						value.TRNMemoDatas.Add(this);
						this._MemoId = value.MemoId;
					}
					else
					{
						this._MemoId = default(int);
					}
					this.SendPropertyChanged("TRNMemo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRNMemoDataHistory")]
	public partial class TRNMemoDataHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _MemoDataHisId;
		
		private int _ActionId;
		
		private int _MemoId;
		
		private System.Nullable<int> _ControlId;
		
		private string _Oldvalue;
		
		private string _Value;
		
		private System.Nullable<bool> _IsEdited;
		
		private EntityRef<MSTControl> _MSTControl;
		
		private EntityRef<TRNMemo> _TRNMemo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMemoDataHisIdChanging(long value);
    partial void OnMemoDataHisIdChanged();
    partial void OnActionIdChanging(int value);
    partial void OnActionIdChanged();
    partial void OnMemoIdChanging(int value);
    partial void OnMemoIdChanged();
    partial void OnControlIdChanging(System.Nullable<int> value);
    partial void OnControlIdChanged();
    partial void OnOldvalueChanging(string value);
    partial void OnOldvalueChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnIsEditedChanging(System.Nullable<bool> value);
    partial void OnIsEditedChanged();
    #endregion
		
		public TRNMemoDataHistory()
		{
			this._MSTControl = default(EntityRef<MSTControl>);
			this._TRNMemo = default(EntityRef<TRNMemo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoDataHisId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long MemoDataHisId
		{
			get
			{
				return this._MemoDataHisId;
			}
			set
			{
				if ((this._MemoDataHisId != value))
				{
					this.OnMemoDataHisIdChanging(value);
					this.SendPropertyChanging();
					this._MemoDataHisId = value;
					this.SendPropertyChanged("MemoDataHisId");
					this.OnMemoDataHisIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionId", DbType="Int NOT NULL")]
		public int ActionId
		{
			get
			{
				return this._ActionId;
			}
			set
			{
				if ((this._ActionId != value))
				{
					this.OnActionIdChanging(value);
					this.SendPropertyChanging();
					this._ActionId = value;
					this.SendPropertyChanged("ActionId");
					this.OnActionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoId", DbType="Int NOT NULL")]
		public int MemoId
		{
			get
			{
				return this._MemoId;
			}
			set
			{
				if ((this._MemoId != value))
				{
					if (this._TRNMemo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemoIdChanging(value);
					this.SendPropertyChanging();
					this._MemoId = value;
					this.SendPropertyChanged("MemoId");
					this.OnMemoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlId", DbType="Int")]
		public System.Nullable<int> ControlId
		{
			get
			{
				return this._ControlId;
			}
			set
			{
				if ((this._ControlId != value))
				{
					if (this._MSTControl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnControlIdChanging(value);
					this.SendPropertyChanging();
					this._ControlId = value;
					this.SendPropertyChanged("ControlId");
					this.OnControlIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oldvalue", DbType="NVarChar(MAX)")]
		public string Oldvalue
		{
			get
			{
				return this._Oldvalue;
			}
			set
			{
				if ((this._Oldvalue != value))
				{
					this.OnOldvalueChanging(value);
					this.SendPropertyChanging();
					this._Oldvalue = value;
					this.SendPropertyChanged("Oldvalue");
					this.OnOldvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(MAX)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEdited", DbType="Bit")]
		public System.Nullable<bool> IsEdited
		{
			get
			{
				return this._IsEdited;
			}
			set
			{
				if ((this._IsEdited != value))
				{
					this.OnIsEditedChanging(value);
					this.SendPropertyChanging();
					this._IsEdited = value;
					this.SendPropertyChanged("IsEdited");
					this.OnIsEditedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MSTControl_TRNMemoDataHistory", Storage="_MSTControl", ThisKey="ControlId", OtherKey="ControlId", IsForeignKey=true)]
		public MSTControl MSTControl
		{
			get
			{
				return this._MSTControl.Entity;
			}
			set
			{
				MSTControl previousValue = this._MSTControl.Entity;
				if (((previousValue != value) 
							|| (this._MSTControl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MSTControl.Entity = null;
						previousValue.TRNMemoDataHistories.Remove(this);
					}
					this._MSTControl.Entity = value;
					if ((value != null))
					{
						value.TRNMemoDataHistories.Add(this);
						this._ControlId = value.ControlId;
					}
					else
					{
						this._ControlId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MSTControl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRNMemo_TRNMemoDataHistory", Storage="_TRNMemo", ThisKey="MemoId", OtherKey="MemoId", IsForeignKey=true)]
		public TRNMemo TRNMemo
		{
			get
			{
				return this._TRNMemo.Entity;
			}
			set
			{
				TRNMemo previousValue = this._TRNMemo.Entity;
				if (((previousValue != value) 
							|| (this._TRNMemo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TRNMemo.Entity = null;
						previousValue.TRNMemoDataHistories.Remove(this);
					}
					this._TRNMemo.Entity = value;
					if ((value != null))
					{
						value.TRNMemoDataHistories.Add(this);
						this._MemoId = value.MemoId;
					}
					else
					{
						this._MemoId = default(int);
					}
					this.SendPropertyChanged("TRNMemo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRNMemoTableData")]
	public partial class TRNMemoTableData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _MemoTableDataId;
		
		private int _MemoId;
		
		private int _ColumnControlId;
		
		private int _TableControlId;
		
		private string _Value;
		
		private System.Nullable<decimal> _RowNumber;
		
		private EntityRef<TRNMemo> _TRNMemo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMemoTableDataIdChanging(long value);
    partial void OnMemoTableDataIdChanged();
    partial void OnMemoIdChanging(int value);
    partial void OnMemoIdChanged();
    partial void OnColumnControlIdChanging(int value);
    partial void OnColumnControlIdChanged();
    partial void OnTableControlIdChanging(int value);
    partial void OnTableControlIdChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnRowNumberChanging(System.Nullable<decimal> value);
    partial void OnRowNumberChanged();
    #endregion
		
		public TRNMemoTableData()
		{
			this._TRNMemo = default(EntityRef<TRNMemo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoTableDataId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long MemoTableDataId
		{
			get
			{
				return this._MemoTableDataId;
			}
			set
			{
				if ((this._MemoTableDataId != value))
				{
					this.OnMemoTableDataIdChanging(value);
					this.SendPropertyChanging();
					this._MemoTableDataId = value;
					this.SendPropertyChanged("MemoTableDataId");
					this.OnMemoTableDataIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoId", DbType="Int NOT NULL")]
		public int MemoId
		{
			get
			{
				return this._MemoId;
			}
			set
			{
				if ((this._MemoId != value))
				{
					if (this._TRNMemo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemoIdChanging(value);
					this.SendPropertyChanging();
					this._MemoId = value;
					this.SendPropertyChanged("MemoId");
					this.OnMemoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnControlId", DbType="Int NOT NULL")]
		public int ColumnControlId
		{
			get
			{
				return this._ColumnControlId;
			}
			set
			{
				if ((this._ColumnControlId != value))
				{
					this.OnColumnControlIdChanging(value);
					this.SendPropertyChanging();
					this._ColumnControlId = value;
					this.SendPropertyChanged("ColumnControlId");
					this.OnColumnControlIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableControlId", DbType="Int NOT NULL")]
		public int TableControlId
		{
			get
			{
				return this._TableControlId;
			}
			set
			{
				if ((this._TableControlId != value))
				{
					this.OnTableControlIdChanging(value);
					this.SendPropertyChanging();
					this._TableControlId = value;
					this.SendPropertyChanged("TableControlId");
					this.OnTableControlIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(MAX)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNumber", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRNMemo_TRNMemoTableData", Storage="_TRNMemo", ThisKey="MemoId", OtherKey="MemoId", IsForeignKey=true)]
		public TRNMemo TRNMemo
		{
			get
			{
				return this._TRNMemo.Entity;
			}
			set
			{
				TRNMemo previousValue = this._TRNMemo.Entity;
				if (((previousValue != value) 
							|| (this._TRNMemo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TRNMemo.Entity = null;
						previousValue.TRNMemoTableDatas.Remove(this);
					}
					this._TRNMemo.Entity = value;
					if ((value != null))
					{
						value.TRNMemoTableDatas.Add(this);
						this._MemoId = value.MemoId;
					}
					else
					{
						this._MemoId = default(int);
					}
					this.SendPropertyChanged("TRNMemo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRNMemoTableDataHistory")]
	public partial class TRNMemoTableDataHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _MemoTableDataHisId;
		
		private int _ActionId;
		
		private int _MemoId;
		
		private int _ColumnControlId;
		
		private int _TableControlId;
		
		private string _Value;
		
		private System.Nullable<decimal> _RowNumber;
		
		private System.Nullable<bool> _IsInserted;
		
		private System.Nullable<bool> _IsEdited;
		
		private System.Nullable<bool> _IsDeleted;
		
		private EntityRef<TRNMemo> _TRNMemo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMemoTableDataHisIdChanging(long value);
    partial void OnMemoTableDataHisIdChanged();
    partial void OnActionIdChanging(int value);
    partial void OnActionIdChanged();
    partial void OnMemoIdChanging(int value);
    partial void OnMemoIdChanged();
    partial void OnColumnControlIdChanging(int value);
    partial void OnColumnControlIdChanged();
    partial void OnTableControlIdChanging(int value);
    partial void OnTableControlIdChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnRowNumberChanging(System.Nullable<decimal> value);
    partial void OnRowNumberChanged();
    partial void OnIsInsertedChanging(System.Nullable<bool> value);
    partial void OnIsInsertedChanged();
    partial void OnIsEditedChanging(System.Nullable<bool> value);
    partial void OnIsEditedChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public TRNMemoTableDataHistory()
		{
			this._TRNMemo = default(EntityRef<TRNMemo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoTableDataHisId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long MemoTableDataHisId
		{
			get
			{
				return this._MemoTableDataHisId;
			}
			set
			{
				if ((this._MemoTableDataHisId != value))
				{
					this.OnMemoTableDataHisIdChanging(value);
					this.SendPropertyChanging();
					this._MemoTableDataHisId = value;
					this.SendPropertyChanged("MemoTableDataHisId");
					this.OnMemoTableDataHisIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionId", DbType="Int NOT NULL")]
		public int ActionId
		{
			get
			{
				return this._ActionId;
			}
			set
			{
				if ((this._ActionId != value))
				{
					this.OnActionIdChanging(value);
					this.SendPropertyChanging();
					this._ActionId = value;
					this.SendPropertyChanged("ActionId");
					this.OnActionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoId", DbType="Int NOT NULL")]
		public int MemoId
		{
			get
			{
				return this._MemoId;
			}
			set
			{
				if ((this._MemoId != value))
				{
					if (this._TRNMemo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemoIdChanging(value);
					this.SendPropertyChanging();
					this._MemoId = value;
					this.SendPropertyChanged("MemoId");
					this.OnMemoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnControlId", DbType="Int NOT NULL")]
		public int ColumnControlId
		{
			get
			{
				return this._ColumnControlId;
			}
			set
			{
				if ((this._ColumnControlId != value))
				{
					this.OnColumnControlIdChanging(value);
					this.SendPropertyChanging();
					this._ColumnControlId = value;
					this.SendPropertyChanged("ColumnControlId");
					this.OnColumnControlIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableControlId", DbType="Int NOT NULL")]
		public int TableControlId
		{
			get
			{
				return this._TableControlId;
			}
			set
			{
				if ((this._TableControlId != value))
				{
					this.OnTableControlIdChanging(value);
					this.SendPropertyChanging();
					this._TableControlId = value;
					this.SendPropertyChanged("TableControlId");
					this.OnTableControlIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(MAX)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNumber", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInserted", DbType="Bit")]
		public System.Nullable<bool> IsInserted
		{
			get
			{
				return this._IsInserted;
			}
			set
			{
				if ((this._IsInserted != value))
				{
					this.OnIsInsertedChanging(value);
					this.SendPropertyChanging();
					this._IsInserted = value;
					this.SendPropertyChanged("IsInserted");
					this.OnIsInsertedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEdited", DbType="Bit")]
		public System.Nullable<bool> IsEdited
		{
			get
			{
				return this._IsEdited;
			}
			set
			{
				if ((this._IsEdited != value))
				{
					this.OnIsEditedChanging(value);
					this.SendPropertyChanging();
					this._IsEdited = value;
					this.SendPropertyChanged("IsEdited");
					this.OnIsEditedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRNMemo_TRNMemoTableDataHistory", Storage="_TRNMemo", ThisKey="MemoId", OtherKey="MemoId", IsForeignKey=true)]
		public TRNMemo TRNMemo
		{
			get
			{
				return this._TRNMemo.Entity;
			}
			set
			{
				TRNMemo previousValue = this._TRNMemo.Entity;
				if (((previousValue != value) 
							|| (this._TRNMemo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TRNMemo.Entity = null;
						previousValue.TRNMemoTableDataHistories.Remove(this);
					}
					this._TRNMemo.Entity = value;
					if ((value != null))
					{
						value.TRNMemoTableDataHistories.Add(this);
						this._MemoId = value.MemoId;
					}
					else
					{
						this._MemoId = default(int);
					}
					this.SendPropertyChanged("TRNMemo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRNReadMemo")]
	public partial class TRNReadMemo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _MemoId;
		
		private System.Nullable<int> _EmployeeId;
		
		private System.Nullable<bool> _IsRead;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMemoIdChanging(System.Nullable<int> value);
    partial void OnMemoIdChanged();
    partial void OnEmployeeIdChanging(System.Nullable<int> value);
    partial void OnEmployeeIdChanged();
    partial void OnIsReadChanging(System.Nullable<bool> value);
    partial void OnIsReadChanged();
    #endregion
		
		public TRNReadMemo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoId", DbType="Int")]
		public System.Nullable<int> MemoId
		{
			get
			{
				return this._MemoId;
			}
			set
			{
				if ((this._MemoId != value))
				{
					this.OnMemoIdChanging(value);
					this.SendPropertyChanging();
					this._MemoId = value;
					this.SendPropertyChanged("MemoId");
					this.OnMemoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int")]
		public System.Nullable<int> EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRead", DbType="Bit")]
		public System.Nullable<bool> IsRead
		{
			get
			{
				return this._IsRead;
			}
			set
			{
				if ((this._IsRead != value))
				{
					this.OnIsReadChanging(value);
					this.SendPropertyChanging();
					this._IsRead = value;
					this.SendPropertyChanged("IsRead");
					this.OnIsReadChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRNReferenceDoc")]
	public partial class TRNReferenceDoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RefDocId;
		
		private System.Nullable<int> _MemoId;
		
		private System.Nullable<int> _MemoRefDocId;
		
		private System.Nullable<int> _Seq;
		
		private System.Nullable<long> _DisplayControlId;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRefDocIdChanging(int value);
    partial void OnRefDocIdChanged();
    partial void OnMemoIdChanging(System.Nullable<int> value);
    partial void OnMemoIdChanged();
    partial void OnMemoRefDocIdChanging(System.Nullable<int> value);
    partial void OnMemoRefDocIdChanged();
    partial void OnSeqChanging(System.Nullable<int> value);
    partial void OnSeqChanged();
    partial void OnDisplayControlIdChanging(System.Nullable<long> value);
    partial void OnDisplayControlIdChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public TRNReferenceDoc()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefDocId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RefDocId
		{
			get
			{
				return this._RefDocId;
			}
			set
			{
				if ((this._RefDocId != value))
				{
					this.OnRefDocIdChanging(value);
					this.SendPropertyChanging();
					this._RefDocId = value;
					this.SendPropertyChanged("RefDocId");
					this.OnRefDocIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoId", DbType="Int")]
		public System.Nullable<int> MemoId
		{
			get
			{
				return this._MemoId;
			}
			set
			{
				if ((this._MemoId != value))
				{
					this.OnMemoIdChanging(value);
					this.SendPropertyChanging();
					this._MemoId = value;
					this.SendPropertyChanged("MemoId");
					this.OnMemoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoRefDocId", DbType="Int")]
		public System.Nullable<int> MemoRefDocId
		{
			get
			{
				return this._MemoRefDocId;
			}
			set
			{
				if ((this._MemoRefDocId != value))
				{
					this.OnMemoRefDocIdChanging(value);
					this.SendPropertyChanging();
					this._MemoRefDocId = value;
					this.SendPropertyChanged("MemoRefDocId");
					this.OnMemoRefDocIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seq", DbType="Int")]
		public System.Nullable<int> Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayControlId", DbType="BigInt")]
		public System.Nullable<long> DisplayControlId
		{
			get
			{
				return this._DisplayControlId;
			}
			set
			{
				if ((this._DisplayControlId != value))
				{
					this.OnDisplayControlIdChanging(value);
					this.SendPropertyChanging();
					this._DisplayControlId = value;
					this.SendPropertyChanged("DisplayControlId");
					this.OnDisplayControlIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRNReleasedDocuments")]
	public partial class TRNReleasedDocument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReleasedDocumentId;
		
		private string _DocumentType;
		
		private string _DocumentNumber;
		
		private string _DocumentName;
		
		private string _DARNumber;
		
		private string _ReleasedDocumentStatus;
		
		private System.Nullable<int> _MemoId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReleasedDocumentIdChanging(int value);
    partial void OnReleasedDocumentIdChanged();
    partial void OnDocumentTypeChanging(string value);
    partial void OnDocumentTypeChanged();
    partial void OnDocumentNumberChanging(string value);
    partial void OnDocumentNumberChanged();
    partial void OnDocumentNameChanging(string value);
    partial void OnDocumentNameChanged();
    partial void OnDARNumberChanging(string value);
    partial void OnDARNumberChanged();
    partial void OnReleasedDocumentStatusChanging(string value);
    partial void OnReleasedDocumentStatusChanged();
    partial void OnMemoIdChanging(System.Nullable<int> value);
    partial void OnMemoIdChanged();
    #endregion
		
		public TRNReleasedDocument()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReleasedDocumentId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ReleasedDocumentId
		{
			get
			{
				return this._ReleasedDocumentId;
			}
			set
			{
				if ((this._ReleasedDocumentId != value))
				{
					this.OnReleasedDocumentIdChanging(value);
					this.SendPropertyChanging();
					this._ReleasedDocumentId = value;
					this.SendPropertyChanged("ReleasedDocumentId");
					this.OnReleasedDocumentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentType", DbType="NVarChar(MAX)")]
		public string DocumentType
		{
			get
			{
				return this._DocumentType;
			}
			set
			{
				if ((this._DocumentType != value))
				{
					this.OnDocumentTypeChanging(value);
					this.SendPropertyChanging();
					this._DocumentType = value;
					this.SendPropertyChanged("DocumentType");
					this.OnDocumentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentNumber", DbType="NVarChar(MAX)")]
		public string DocumentNumber
		{
			get
			{
				return this._DocumentNumber;
			}
			set
			{
				if ((this._DocumentNumber != value))
				{
					this.OnDocumentNumberChanging(value);
					this.SendPropertyChanging();
					this._DocumentNumber = value;
					this.SendPropertyChanged("DocumentNumber");
					this.OnDocumentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentName", DbType="NVarChar(MAX)")]
		public string DocumentName
		{
			get
			{
				return this._DocumentName;
			}
			set
			{
				if ((this._DocumentName != value))
				{
					this.OnDocumentNameChanging(value);
					this.SendPropertyChanging();
					this._DocumentName = value;
					this.SendPropertyChanged("DocumentName");
					this.OnDocumentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DARNumber", DbType="NVarChar(MAX)")]
		public string DARNumber
		{
			get
			{
				return this._DARNumber;
			}
			set
			{
				if ((this._DARNumber != value))
				{
					this.OnDARNumberChanging(value);
					this.SendPropertyChanging();
					this._DARNumber = value;
					this.SendPropertyChanged("DARNumber");
					this.OnDARNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReleasedDocumentStatus", DbType="NVarChar(50)")]
		public string ReleasedDocumentStatus
		{
			get
			{
				return this._ReleasedDocumentStatus;
			}
			set
			{
				if ((this._ReleasedDocumentStatus != value))
				{
					this.OnReleasedDocumentStatusChanging(value);
					this.SendPropertyChanging();
					this._ReleasedDocumentStatus = value;
					this.SendPropertyChanged("ReleasedDocumentStatus");
					this.OnReleasedDocumentStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoId", DbType="Int")]
		public System.Nullable<int> MemoId
		{
			get
			{
				return this._MemoId;
			}
			set
			{
				if ((this._MemoId != value))
				{
					this.OnMemoIdChanging(value);
					this.SendPropertyChanging();
					this._MemoId = value;
					this.SendPropertyChanged("MemoId");
					this.OnMemoIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRNSendMail")]
	public partial class TRNSendMail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SendMailId;
		
		private System.Nullable<int> _MemoId;
		
		private string _ActorName;
		
		private string _ActionProcess;
		
		private string _MailSubject;
		
		private string _MailBody;
		
		private string _Mail_To;
		
		private string _Mail_CC;
		
		private string _Status;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _ModifiedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSendMailIdChanging(int value);
    partial void OnSendMailIdChanged();
    partial void OnMemoIdChanging(System.Nullable<int> value);
    partial void OnMemoIdChanged();
    partial void OnActorNameChanging(string value);
    partial void OnActorNameChanged();
    partial void OnActionProcessChanging(string value);
    partial void OnActionProcessChanged();
    partial void OnMailSubjectChanging(string value);
    partial void OnMailSubjectChanged();
    partial void OnMailBodyChanging(string value);
    partial void OnMailBodyChanged();
    partial void OnMail_ToChanging(string value);
    partial void OnMail_ToChanged();
    partial void OnMail_CCChanging(string value);
    partial void OnMail_CCChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    #endregion
		
		public TRNSendMail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendMailId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SendMailId
		{
			get
			{
				return this._SendMailId;
			}
			set
			{
				if ((this._SendMailId != value))
				{
					this.OnSendMailIdChanging(value);
					this.SendPropertyChanging();
					this._SendMailId = value;
					this.SendPropertyChanged("SendMailId");
					this.OnSendMailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoId", DbType="Int")]
		public System.Nullable<int> MemoId
		{
			get
			{
				return this._MemoId;
			}
			set
			{
				if ((this._MemoId != value))
				{
					this.OnMemoIdChanging(value);
					this.SendPropertyChanging();
					this._MemoId = value;
					this.SendPropertyChanged("MemoId");
					this.OnMemoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActorName", DbType="NVarChar(MAX)")]
		public string ActorName
		{
			get
			{
				return this._ActorName;
			}
			set
			{
				if ((this._ActorName != value))
				{
					this.OnActorNameChanging(value);
					this.SendPropertyChanging();
					this._ActorName = value;
					this.SendPropertyChanged("ActorName");
					this.OnActorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionProcess", DbType="NVarChar(MAX)")]
		public string ActionProcess
		{
			get
			{
				return this._ActionProcess;
			}
			set
			{
				if ((this._ActionProcess != value))
				{
					this.OnActionProcessChanging(value);
					this.SendPropertyChanging();
					this._ActionProcess = value;
					this.SendPropertyChanged("ActionProcess");
					this.OnActionProcessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailSubject", DbType="NVarChar(MAX)")]
		public string MailSubject
		{
			get
			{
				return this._MailSubject;
			}
			set
			{
				if ((this._MailSubject != value))
				{
					this.OnMailSubjectChanging(value);
					this.SendPropertyChanging();
					this._MailSubject = value;
					this.SendPropertyChanged("MailSubject");
					this.OnMailSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailBody", DbType="NVarChar(MAX)")]
		public string MailBody
		{
			get
			{
				return this._MailBody;
			}
			set
			{
				if ((this._MailBody != value))
				{
					this.OnMailBodyChanging(value);
					this.SendPropertyChanging();
					this._MailBody = value;
					this.SendPropertyChanged("MailBody");
					this.OnMailBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mail_To", DbType="NVarChar(MAX)")]
		public string Mail_To
		{
			get
			{
				return this._Mail_To;
			}
			set
			{
				if ((this._Mail_To != value))
				{
					this.OnMail_ToChanging(value);
					this.SendPropertyChanging();
					this._Mail_To = value;
					this.SendPropertyChanged("Mail_To");
					this.OnMail_ToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mail_CC", DbType="NVarChar(MAX)")]
		public string Mail_CC
		{
			get
			{
				return this._Mail_CC;
			}
			set
			{
				if ((this._Mail_CC != value))
				{
					this.OnMail_CCChanging(value);
					this.SendPropertyChanging();
					this._Mail_CC = value;
					this.SendPropertyChanged("Mail_CC");
					this.OnMail_CCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(MAX)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(MAX)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(MAX)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
